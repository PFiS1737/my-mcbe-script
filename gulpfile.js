import fs from "node:fs/promises"
import { readFileSync } from "fs"

import gulp from "gulp"

import { rollup } from "rollup"
import genRollupConfig from "./rollup.js"

const pkg = JSON.parse(readFileSync("./package.json").toString())
const banner = fileName => `
/*!
 * ${fileName} v${pkg.version} (${pkg.homepage})
 * Copyright 2022-${new Date().getFullYear()} ${pkg.author}
 * Licensed under ${pkg.license}
 * 
 * This file is automatically generated, please do not change it.
 */
`.trim()
const rollupConfig = genRollupConfig(banner, pkg)

export const js = gulp.series(...rollupConfig.map(config => {
    const fn = async function() {
        const result = await rollup({
            input: config.input,
            plugins: config.plugins,
            onwarn({ loc, frame, message, code }) {
                if (loc) {
                    console.warn(`${loc.file} (${loc.line}:${loc.column}) ${message} (${code})`)
                    if (frame) console.warn("\x1b[2m%s\x1b[0m", frame)
                } else console.warn(message)
            }
        })
        await result.write(config.output)
    }
    Object.defineProperty(fn, "name", {
        value: config.name
    })
    return fn
}))

export default gulp.series(js)
