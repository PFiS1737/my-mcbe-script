{"version":3,"file":"index.ts","sources":["../src/lib/BetterConsole.class.ts","../src/lib/wrapper/TypeGroup.class.ts","../src/lib/wrapper/block/BlockTypeGroups.enumeration.ts","../src/lib/util/index.ts","../src/lib/util/math.ts","../src/lib/vector/VectorN.class.ts","../src/lib/vector/VectorNUtils.class.ts","../src/lib/vector/Vector3Utils.class.ts","../src/lib/vector/Vector3.class.ts","../src/lib/location/Location.class.ts","../src/lib/location/BlockLocation.class.ts","../src/lib/util/game.ts","../src/lib/location/LocationInfo.class.ts","../src/lib/location/LocationUtils.class.ts","../src/lib/location/Directions.class.ts","../src/lib/wrapper/WrapperTemplate.class.ts","../src/lib/wrapper/item/ItemTypeGroups.enumeration.ts","../src/lib/wrapper/item/WrappedItemStack.class.ts","../node_modules/.pnpm/@minecraft+vanilla-data@1.21.2/node_modules/@minecraft/vanilla-data/lib/index.js","../src/lib/wrapper/item/ItemStackWithDurability.class.ts","../src/data/block/types.ts","../src/data/block/acacia_log.json.ts","../src/data/block/amethyst_block.json.ts","../src/data/block/amethyst_cluster.json.ts","../src/data/block/ancient_debris.json.ts","../src/data/block/birch_log.json.ts","../src/data/block/cherry_log.json.ts","../src/data/block/coal_ore.json.ts","../src/data/block/copper_ore.json.ts","../src/data/block/crimson_stem.json.ts","../src/data/block/dark_oak_log.json.ts","../src/data/block/deepslate.json.ts","../src/data/block/deepslate_coal_ore.json.ts","../src/data/block/deepslate_copper_ore.json.ts","../src/data/block/deepslate_diamond_ore.json.ts","../src/data/block/deepslate_emerald_ore.json.ts","../src/data/block/deepslate_gold_ore.json.ts","../src/data/block/deepslate_iron_ore.json.ts","../src/data/block/deepslate_lapis_ore.json.ts","../src/data/block/deepslate_redstone_ore.json.ts","../src/data/block/diamond_ore.json.ts","../src/data/block/emerald_ore.json.ts","../src/data/block/gold_ore.json.ts","../src/data/block/iron_ore.json.ts","../src/data/block/jungle_log.json.ts","../src/data/block/lapis_ore.json.ts","../src/data/block/mangrove_log.json.ts","../src/data/block/nether_gold_ore.json.ts","../src/data/block/oak_log.json.ts","../src/data/block/obsidian.json.ts","../src/data/block/quartz_ore.json.ts","../src/data/block/redstone_ore.json.ts","../src/data/block/spruce_log.json.ts","../src/data/block/stone.json.ts","../src/data/block/warped_stem.json.ts","../src/data/block/index.ts","../src/lib/NumberRange.class.ts","../src/lib/wrapper/LootTable.class.ts","../src/lib/wrapper/block/BlockDrops.class.ts","../src/lib/wrapper/block/WrappedBlock.class.ts","../src/lib/wrapper/block/WrappedBlocks.class.ts","../src/lib/wrapper/block/BlockList.class.ts","../src/lib/wrapper/block/DoorBlock.class.ts","../src/lib/wrapper/entity/WrappedEntity.class.ts","../src/lib/commands/Commands.class.ts","../src/lib/wrapper/container/WrappedContainer.class.ts","../src/lib/wrapper/container/EntityContainer.class.ts","../src/lib/wrapper/entity/WrappedPlayer.class.ts","../src/lib/wrapper/block/TrapdoorBlock.class.ts","../src/lib/dialog/Dialog.class.ts","../node_modules/.pnpm/crypt@0.0.2/node_modules/crypt/crypt.js","../node_modules/.pnpm/charenc@0.0.2/node_modules/charenc/charenc.js","../node_modules/.pnpm/is-buffer@1.1.6/node_modules/is-buffer/index.js","../node_modules/.pnpm/md5@2.3.0/node_modules/md5/md5.js","../src/lib/database/Database.class.ts","../src/lib/EventEmitter.class.ts","../src/lib/option-manager/OptionItemRange.class.ts","../src/lib/option-manager/OptionItemSelection.class.ts","../src/lib/option-manager/PlayerOption.class.ts","../src/lib/option-manager/OptionNamespace.class.ts","../src/lib/option-manager/OptionManager.class.ts","../src/lib/option-manager/manager.ts","../src/lib/option-manager/command.ts","../src/script/better-door/option.ts","../src/script/better-door/event.ts","../src/script/better-door/index.ts","../src/script/scoreboard-statistic/criteria/statistic/types/mob/killed.ts","../src/script/scoreboard-statistic/criteria/statistic/types/mob/killed_by.ts","../src/script/scoreboard-statistic/criteria/statistic/types/mob/killed_for.ts","../src/script/scoreboard-statistic/criteria/statistic/types/block/mined.ts","../src/script/scoreboard-statistic/criteria/statistic/types/block/placed.ts","../src/script/scoreboard-statistic/criteria/statistic/types/index.ts","../src/script/scoreboard-statistic/criteria/deathCount.ts","../src/script/scoreboard-statistic/criteria/health.ts","../src/script/scoreboard-statistic/criteria/playerKillCount.ts","../src/script/scoreboard-statistic/criteria/totalKillCount.ts","../src/script/scoreboard-statistic/criteria/index.ts","../src/script/scoreboard-statistic/db.ts","../src/script/scoreboard-statistic/option.ts","../src/script/scoreboard-statistic/Handler.class.ts","../src/script/scoreboard-statistic/command.ts","../src/script/scoreboard-statistic/index.ts","../src/script/tpx/db.ts","../src/script/tpx/option.ts","../src/script/tpx/Handler.class.ts","../src/script/tpx/command.ts","../src/script/tpx/index.ts","../src/script/vein-mining/config.ts","../src/script/vein-mining/option.ts","../src/script/vein-mining/event.ts","../src/script/vein-mining/index.ts"],"sourcesContent":["export class BetterConsole {\n  static error(err: Error) {\n    console.error(`${err}\\n${err.stack}`)\n  }\n}\n","export class TypeGroup<T> {\n  types: Set<T>\n\n  constructor(types: T[]) {\n    this.types = new Set(types)\n  }\n\n  add(...types: T[]) {\n    for (const type of types) this.types.add(type)\n    return this\n  }\n  has(type: T) {\n    return this.types.has(type)\n  }\n\n  clone() {\n    return new TypeGroup([...this])\n  }\n\n  toArray() {\n    return Array.from(this)\n  }\n  [Symbol.iterator]() {\n    return this.types.keys()\n  }\n}\n","import { TypeGroup } from \"../TypeGroup.class\"\n\nexport const WOODEN_DOORS = new TypeGroup([\n  \"minecraft:acacia_door\",\n  \"minecraft:bamboo_door\",\n  \"minecraft:birch_door\",\n  \"minecraft:cherry_door\",\n  \"minecraft:crimson_door\",\n  \"minecraft:dark_oak_door\",\n  \"minecraft:jungle_door\",\n  \"minecraft:mangrove_door\",\n  \"minecraft:spruce_door\",\n  \"minecraft:warped_door\",\n  \"minecraft:wooden_door\",\n])\n\nexport const COPPER_DOORS = new TypeGroup([\n  \"minecraft:copper_door\",\n  \"minecraft:exposed_copper_door\",\n  \"minecraft:weathered_copper_door\",\n  \"minecraft:oxidized_copper_door\",\n  \"minecraft:waxed_copper_door\",\n  \"minecraft:waxed_exposed_copper_door\",\n  \"minecraft:waxed_weathered_copper_door\",\n  \"minecraft:waxed_oxidized_copper_door\",\n])\n\nexport const DOORS = new TypeGroup([\n  ...WOODEN_DOORS,\n  ...COPPER_DOORS,\n  \"minecraft:iron_door\",\n])\n\nexport const WOODEN_TRAPDOORS = new TypeGroup([\n  \"minecraft:acacia_trapdoor\",\n  \"minecraft:bamboo_trapdoor\",\n  \"minecraft:birch_trapdoor\",\n  \"minecraft:cherry_trapdoor\",\n  \"minecraft:crimson_trapdoor\",\n  \"minecraft:dark_oak_trapdoor\",\n  \"minecraft:jungle_trapdoor\",\n  \"minecraft:mangrove_trapdoor\",\n  \"minecraft:spruce_trapdoor\",\n  \"minecraft:trapdoor\",\n  \"minecraft:warped_trapdoor\",\n])\n\nexport const COPPER_TRAPDOORS = new TypeGroup([\n  \"minecraft:copper_trapdoor\",\n  \"minecraft:exposed_copper_trapdoor\",\n  \"minecraft:weathered_copper_trapdoor\",\n  \"minecraft:oxidized_copper_trapdoor\",\n  \"minecraft:waxed_copper_trapdoor\",\n  \"minecraft:waxed_exposed_copper_trapdoor\",\n  \"minecraft:waxed_weathered_copper_trapdoor\",\n  \"minecraft:waxed_oxidized_copper_trapdoor\",\n])\n\nexport const TRAPDOORS = new TypeGroup([\n  ...WOODEN_TRAPDOORS,\n  ...COPPER_TRAPDOORS,\n  \"minecraft:iron_trapdoor\",\n])\n\nexport const LOGS = new TypeGroup([\n  \"minecraft:acacia_log\",\n  \"minecraft:birch_log\",\n  \"minecraft:cherry_log\",\n  \"minecraft:dark_oak_log\",\n  \"minecraft:jungle_log\",\n  \"minecraft:mangrove_log\",\n  \"minecraft:oak_log\",\n  \"minecraft:spruce_log \",\n])\n\nexport const STEMS = new TypeGroup([\n  \"minecraft:crimson_stem\",\n  \"minecraft:warped_stem\",\n])\n\nexport const ORES = new TypeGroup([\n  \"minecraft:coal_ore\",\n  \"minecraft:copper_ore\",\n  \"minecraft:deepslate_coal_ore\",\n  \"minecraft:deepslate_copper_ore\",\n  \"minecraft:deepslate_diamond_ore\",\n  \"minecraft:deepslate_emerald_ore\",\n  \"minecraft:deepslate_gold_ore\",\n  \"minecraft:deepslate_iron_ore\",\n  \"minecraft:deepslate_lapis_ore\",\n  \"minecraft:deepslate_redstone_ore\",\n  \"minecraft:diamond_ore\",\n  \"minecraft:emerald_ore\",\n  \"minecraft:gold_ore\",\n  \"minecraft:iron_ore\",\n  \"minecraft:lapis_ore\",\n  \"minecraft:nether_gold_ore\",\n  \"minecraft:quartz_ore\",\n  \"minecraft:redstone_ore\",\n])\n\nexport const STONES = new TypeGroup([\"minecraft:stone\", \"minecraft:deepslate\"])\n","export function safeEval(code: string, context = {}) {\n  const fn = new Function(...Object.keys(context), `return ${code}`)\n  return fn(...Object.values(context))\n}\n\nexport type Serializable =\n  | Set<Serializable>\n  | Map<Serializable, Serializable>\n  | { [key: string]: Serializable }\n  | Array<Serializable>\n  | string\n  | number\n  | boolean\n\nexport function serialize(obj: Serializable): string {\n  if (obj instanceof Set) return `new Set(${serialize(Array.from(obj))})`\n\n  if (obj instanceof Map)\n    return `new Map(${serialize(Array.from(obj.entries()))})`\n\n  if (Array.isArray(obj)) return `[${obj.map(serialize).join(\",\")}]`\n\n  if (typeof obj === \"object\" && obj !== null) {\n    return `{${Object.entries(obj)\n      .map(([key, value]) => `${serialize(key)}: ${serialize(value)}`)\n      .join(\",\")}}`\n  }\n  return JSON.stringify(obj)\n}\n\nexport function deserialize(str: string): Serializable {\n  try {\n    return JSON.parse(str)\n  } catch (err) {\n    // console.warn(`Could not use \\`JSON.parse()\\` to deserialise the string, trying \\`safeEval()\\`.`, { string: str })\n    return safeEval(`(${str})`)\n  }\n}\n\nexport function isAsyncFunc(func: Function): boolean {\n  return Object.prototype.toString.call(func) === \"[object AsyncFunction]\"\n}\n\nexport function arraySample<T>(arr: Array<T>): T {\n  return arr[Math.floor(Math.random() * arr.length)]\n}\n\nexport function toCamelCase(str: string) {\n  return str.replace(/(\\w)[\\. _-](\\w)/g, (_, $1, $2) => $1 + $2.toUpperCase())\n}\n","export function round(n: number) {\n  if (n >= 0) return Math.round(n)\n  return n % 0.5 === 0 ? Math.floor(n) : Math.round(n)\n}\n\nexport function randomInt(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min)) + min\n}\n\nexport function withProbability(p: number) {\n  return Math.random() <= p\n}\n\nexport function equals(a: number, b: number, epsilon = 0.000001) {\n  return Math.abs(a - b) <= epsilon * Math.max(1, Math.abs(a), Math.abs(b))\n}\n\nexport function factorial(n: number): number {\n  return n > 1 ? n * factorial(n - 1) : 1\n}\n\nexport function combination(n: number, k: number) {\n  return factorial(n) / (factorial(k) * factorial(n - k))\n}\n\nexport function binomial(a: number, b: number, n: number) {\n  return (k: number) => a ** (n - k) * b ** k * combination(n, k)\n}\n\nexport function binomialDistribution(n: number, p: number) {\n  return binomial(1 - p, p, n)\n}\n\nexport function sum(from: number, to: number, fn: (i: number) => number) {\n  let output = 0\n  for (let i = from; i <= to; i++) output += fn(i)\n  return output\n}\n\nexport function range(from: number, to: number, step = 1) {\n  const output = []\n  for (let i = from; i < to; i += step) output.push(i)\n  return output\n}\n","import type { Vector3 as IVector3 } from \"@minecraft/server\"\n\nimport { serialize } from \"../util\"\n\n/**\n * Class representing an N-dimensional vector.\n */\nexport class VectorN implements IVector3 {\n  axes: number[]\n\n  /**\n   * Create a vector.\n   * @param axes - The axes of the vector.\n   */\n  constructor(...axes: number[]) {\n    this.axes = axes\n  }\n\n  get x() {\n    return this.get(0)\n  }\n  set x(value) {\n    this.set(0, value)\n  }\n  get y() {\n    return this.get(1)\n  }\n  set y(value) {\n    this.set(1, value)\n  }\n  get z() {\n    return this.get(2)\n  }\n  set z(value) {\n    this.set(2, value)\n  }\n  get w() {\n    return this.get(3)\n  }\n  set w(value) {\n    this.set(3, value)\n  }\n\n  /**\n   * Create a vector.\n   * @param vector - The vector wrote in array or string.\n   * @returns The vector.\n   */\n  static create(vector: number[] | string): VectorN {\n    if (Array.isArray(vector)) return new this(...vector)\n    if (typeof vector === \"string\") return this.parse(vector)\n\n    throw new Error(`Can't create vector for ${serialize(vector)}`)\n  }\n\n  /**\n   * Parse a string to vector.\n   * @param vectorStr - The string to parse.\n   * @returns The vector.\n   */\n  static parse(vectorStr: string): VectorN {\n    return this.create(vectorStr.split(\" \").map(Number))\n  }\n\n  /**\n   * Convert the vector to a string.\n   * @returns The string representation of the vector.\n   */\n  stringify(): string {\n    // @ts-ignore\n    return this[Symbol.toPrimitive](\"string\")\n  }\n\n  /**\n   * Convert the vector to an array.\n   * @returns The array representation of the vector.\n   */\n  toArray(): Array<number> {\n    return [...this]\n  }\n\n  /**\n   * Convert the vector to a primitive value.\n   * @param hint - The type hint.\n   * @returns The string representation or the vector itself.\n   */\n  [Symbol.toPrimitive](hint: string): string | VectorN {\n    if (hint === \"string\") return this.axes.join(\" \")\n    return this\n  }\n\n  /**\n   * Iterator for the vector axes.\n   * @returns The iterator for the axes.\n   */\n  [Symbol.iterator](): Iterator<number> {\n    return this.axes[Symbol.iterator]()\n  }\n\n  /**\n   * Get the number of dimensions of the vector.\n   * @returns The number of dimensions.\n   */\n  get dimensions(): number {\n    return this.axes.length\n  }\n\n  /**\n   * Get an axis of the vector by index.\n   * @param index - The index of the component.\n   * @returns The component value.\n   */\n  get(index: number): number {\n    return this.axes[index]\n  }\n\n  /**\n   * Set an axis of the vector by index.\n   * @param index - The index of the component.\n   * @param value - The value to set.\n   */\n  set(index: number, value: number) {\n    this.axes[index] = value\n  }\n\n  /**\n   * Apply a function to each axes of the vector and return a new vector.\n   * @param callbackfn - The function to apply.\n   * @returns The new vector.\n   */\n  map(\n    callbackfn: (vale: number, index: number, array: number[]) => number\n  ): VectorN {\n    return VectorN.create(this.axes.map(callbackfn))\n  }\n}\n","import { equals, round } from \"../util/math\"\nimport { VectorN } from \"./VectorN.class\"\n\n/**\n * Utility class for operations on N-dimensional vectors.\n */\nexport class VectorNUtils {\n  /**\n   * Create a vector.\n   * @param vector - The vector write in array.\n   * @returns The vector.\n   */\n  static create(vector: Array<number>) {\n    return VectorN.create(vector)\n  }\n\n  /**\n   * Clone a vector.\n   * @param a - The vector to clone.\n   * @returns The cloned vector.\n   */\n  static clone(a: VectorN) {\n    return this.create(a.toArray())\n  }\n\n  /**\n   * Assert that two vectors have the same dimensions.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @throws Will throw an error if the vectors do not have the same dimensions.\n   */\n  static _assertDimensions(a: VectorN, b: VectorN) {\n    if (a.dimensions !== b.dimensions)\n      throw new Error(\"Vectors must have the same dimensions.\")\n  }\n\n  /**\n   * Add two vectors.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns The resulting vector.\n   */\n  static add(a: VectorN, b: VectorN) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.map((val, index) => val + b.get(index))\n  }\n\n  /**\n   * Subtract one vector from another.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns The resulting vector.\n   */\n  static subtract(a: VectorN, b: VectorN) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.map((val, index) => val - b.get(index))\n  }\n\n  /**\n   * Multiply two vectors component-wise.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns The resulting vector.\n   */\n  static multiply(a: VectorN, b: VectorN) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.map((val, index) => val * b.get(index))\n  }\n\n  /**\n   * Divide one vector by another component-wise.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns The resulting vector.\n   */\n  static divide(a: VectorN, b: VectorN) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.map((val, index) => val / b.get(index))\n  }\n\n  /**\n   * Scale a vector by a scalar.\n   * @param a - The vector to scale.\n   * @param n - The scalar value.\n   * @returns The resulting vector.\n   */\n  static scale(a: VectorN, n: number) {\n    return a.map((val) => val * n)\n  }\n\n  /**\n   * Negate a vector.\n   * @param a - The vector to negate.\n   * @returns The resulting vector.\n   */\n  static negate(a: VectorN) {\n    return a.map((val) => -val)\n  }\n\n  /**\n   * Invert a vector component-wise.\n   * @param a - The vector to invert.\n   * @returns The resulting vector.\n   */\n  static inverse(a: VectorN) {\n    return a.map((val) => 1 / val)\n  }\n\n  /**\n   * Exchange two axes of a vector.\n   * @param a - The vector to modify.\n   * @param axis1 - The first axis to exchange.\n   * @param axis2 - The second axis to exchange\n   * @returns The resulting vector.\n   * @throws Will throw an error if the length of the axes array is not 2.\n   */\n  static exchange(a: VectorN, axis1: number, axis2: number) {\n    const output = this.clone(a)\n    const n0 = output.get(axis1)\n    const n1 = output.get(axis2)\n    output.set(axis1, n1)\n    output.set(axis2, n0)\n    return output\n  }\n\n  /**\n   * Check if two vectors are exactly equal.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns True if the vectors are exactly equal, otherwise false.\n   */\n  static exactEquals(a: VectorN, b: VectorN) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.axes.every((val, index) => val === b.get(index))\n  }\n\n  /**\n   * Check if two vectors are approximately equal.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns True if the vectors are approximately equal, otherwise false.\n   */\n  static equals(a: VectorN, b: VectorN) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.axes.every((val, index) => equals(val, b.get(index)))\n  }\n\n  /**\n   * Get the component-wise maximum of multiple vectors.\n   * @param vectors - The vectors to compare.\n   * @returns The resulting vector.\n   */\n  static max(...vectors: VectorN[]) {\n    const length = vectors[0].dimensions\n\n    const maxAxes = vectors.reduce((acc, vector) => {\n      vector.axes.forEach((val, index) => {\n        if (val > acc[index]) acc[index] = val\n      })\n      return acc\n    }, new Array(length).fill(Number.NEGATIVE_INFINITY))\n\n    return this.create(maxAxes)\n  }\n\n  /**\n   * Get the component-wise minimum of multiple vectors.\n   * @param vectors - The vectors to compare.\n   * @returns The resulting vector.\n   */\n  static min(...vectors: VectorN[]) {\n    const length = vectors[0].dimensions\n\n    const minAxes = vectors.reduce((acc, vector) => {\n      vector.axes.forEach((val, index) => {\n        if (val < acc[index]) acc[index] = val\n      })\n      return acc\n    }, new Array(length).fill(Number.POSITIVE_INFINITY))\n\n    return this.create(minAxes)\n  }\n\n  /**\n   * Apply the floor function to each component of a vector.\n   * @param a - The vector to modify.\n   * @returns The resulting vector.\n   */\n  static floor(a: VectorN) {\n    return a.map((val) => Math.floor(val))\n  }\n\n  /**\n   * Apply the ceil function to each component of a vector.\n   * @param a - The vector to modify.\n   * @returns The resulting vector.\n   */\n  static ceil(a: VectorN) {\n    return a.map((val) => Math.ceil(val))\n  }\n\n  /**\n   * Apply the round function to each component of a vector.\n   * @param a - The vector to modify.\n   * @returns The resulting vector.\n   */\n  static round(a: VectorN) {\n    return a.map((val) => round(val))\n  }\n\n  /**\n   * Apply the absolute value function to each component of a vector.\n   * @param a - The vector to modify.\n   * @returns The resulting vector.\n   */\n  static abs(a: VectorN) {\n    return a.map((val) => Math.abs(val))\n  }\n\n  /**\n   * Get the vector with the maximum magnitude from a list of vectors.\n   * @param vectors - The vectors to compare.\n   * @returns The vector with the maximum magnitude.\n   */\n  static maxMagnitude(...vectors: VectorN[]) {\n    return vectors.reduce((prev, curr) =>\n      VectorNUtils.magnitude(curr) > VectorNUtils.magnitude(prev) ? curr : prev\n    )\n  }\n\n  /**\n   * Get the vector with the minimum magnitude from a list of vectors.\n   * @param vectors - The vectors to compare.\n   * @returns The vector with the minimum magnitude.\n   */\n  static minMagnitude(...vectors: VectorN[]) {\n    return vectors.reduce((prev, curr) =>\n      VectorNUtils.magnitude(curr) < VectorNUtils.magnitude(prev) ? curr : prev\n    )\n  }\n\n  /**\n   * Calculate the magnitude of a vector.\n   * @param a - The vector to calculate the magnitude of.\n   * @returns The magnitude of the vector.\n   */\n  static magnitude(a: VectorN) {\n    return Math.sqrt(VectorNUtils.squaredMagnitude(a))\n  }\n\n  /**\n   * Calculate the squared magnitude of a vector.\n   * @param a - The vector to calculate the squared magnitude of.\n   * @returns The squared magnitude of the vector.\n   */\n  static squaredMagnitude(a: VectorN) {\n    return a.axes.reduce((sum, val) => sum + val ** 2, 0)\n  }\n\n  /**\n   * Calculate the distance between two vectors.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns The distance between the vectors.\n   */\n  static distance(a: VectorN, b: VectorN) {\n    return Math.sqrt(VectorNUtils.squaredDistance(a, b))\n  }\n\n  /**\n   * Calculate the squared distance between two vectors.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns The squared distance between the vectors.\n   */\n  static squaredDistance(a: VectorN, b: VectorN) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.axes.reduce((sum, val, index) => {\n      const diff = val - b.get(index)\n      return sum + diff ** 2\n    }, 0)\n  }\n\n  /**\n   * Calculate the dot product of two vectors.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns The dot product of the vectors.\n   */\n  static dot(a: VectorN, b: VectorN) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.axes.reduce((sum, val, index) => sum + val * b.get(index), 0)\n  }\n\n  /**\n   * Normalize a vector.\n   * @param a - The vector to normalize.\n   * @returns The normalized vector.\n   */\n  static normalize(a: VectorN) {\n    const magnitude = this.magnitude(a)\n    if (magnitude) return this.scale(a, 1 / magnitude)\n    return this.create(new Array(a.dimensions).fill(0))\n  }\n\n  /**\n   * Calculate the angle between two vectors.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns The angle between the vectors in radians.\n   */\n  static angle(a: VectorN, b: VectorN) {\n    const cosOmega = this.dot(this.normalize(a), this.normalize(b))\n    return Math.acos(cosOmega)\n  }\n\n  /**\n   * Generate a random vector.\n   * @param dimensions - The number of dimensions.\n   * @param scale - The scale of the random components.\n   * @returns The random vector.\n   */\n  static random(dimensions: number, scale = 1) {\n    const axes = Array.from({ length: dimensions }, () => Math.random() * 2 - 1)\n    return this.scale(this.create(axes), scale)\n  }\n\n  /**\n   * Perform linear interpolation between two vectors.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @param t - The interpolation parameter.\n   * @returns The interpolated vector.\n   */\n  static lerp(a: VectorN, b: VectorN, t: number) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.map((val, index) => val * (1 - t) + b.get(index) * t)\n  }\n\n  /**\n   * Perform spherical linear interpolation between two vectors.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @param t - The interpolation parameter.\n   * @returns The interpolated vector.\n   */\n  static slerp(a: VectorN, b: VectorN, t: number) {\n    if (t <= 0) return this.clone(a)\n    if (t >= 1) return this.clone(b)\n\n    const omega = this.angle(a, b)\n    const sinOmega = Math.sin(omega)\n\n    if (sinOmega <= Number.EPSILON) return this.lerp(a, b, t)\n\n    const ratioA = Math.sin(omega * (1 - t)) / sinOmega\n    const ratioB = Math.sin(omega * t) / sinOmega\n    return a.map((val, index) => val * ratioA + b.get(index) * ratioB)\n  }\n\n  /**\n   * Perform Bezier interpolation between vectors.\n   * @param points - The control points.\n   * @param t - The interpolation parameter.\n   * @returns The interpolated vector.\n   */\n  static bezier(points: VectorN[], t: number): VectorN {\n    const n = points.length - 1\n\n    if (!n) return points[0]\n\n    const newPoints = []\n    for (let i = 0; i < n; i++) {\n      newPoints.push(this.lerp(points[i], points[i + 1], t))\n    }\n\n    return this.bezier(newPoints, t)\n  }\n}\n","import { Vector3 } from \"./Vector3.class\"\nimport { VectorNUtils } from \"./VectorNUtils.class\"\n\n/**\n * Utility class for operations on 3D vectors.\n */\nexport class Vector3Utils extends VectorNUtils {\n  /**\n   * @param vector - The vector write in array.\n   * @returns The vector.\n   */\n  static create(\n    vector: number[] | string | { x: number; y: number; z: number }\n  ): Vector3 {\n    return Vector3.create(vector)\n  }\n\n  /**\n   * Calculate the cross product of two 3D vectors.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns The cross product of the vectors.\n   */\n  static cross(a: Vector3, b: Vector3): Vector3 {\n    return this.create([\n      a.y * b.z - a.z * b.y,\n      a.z * b.x - a.x * b.z,\n      a.x * b.y - a.y * b.x,\n    ])\n  }\n}\n","import { serialize } from \"../util\"\nimport { Vector3Utils } from \"./Vector3Utils.class\"\nimport { VectorN } from \"./VectorN.class\"\n\nexport type Vector3Like =\n  | string\n  | number[]\n  | { x: number; y: number; z: number }\n\n/**\n * Class representing a 3-dimensional vector.\n * @extends VectorN\n */\nexport class Vector3 extends VectorN {\n  /**\n   * Create a 3D vector.\n   * @param x - The x axis.\n   * @param y - The y axis.\n   * @param z - The z axis.\n   */\n  constructor(x = 0, y = 0, z = 0) {\n    super(x, y, z)\n  }\n\n  /**\n   * @param vector - The vector write in array.\n   * @returns The vector.\n   */\n  static create(vector: Vector3Like): Vector3 {\n    if (Array.isArray(vector)) return new this(...vector)\n    // @ts-ignore\n    if (typeof vector === \"string\") return this.parse(vector)\n    if (typeof vector === \"object\")\n      return new this(vector.x, vector.y, vector.z)\n\n    throw new Error(`Can't create 3d vector for ${serialize(vector)}`)\n  }\n\n  get magnitude() {\n    return Vector3Utils.magnitude(this)\n  }\n  get squaredMagnitude() {\n    return Vector3Utils.squaredMagnitude(this)\n  }\n\n  get normalized() {\n    return Vector3Utils.normalize(this)\n  }\n  get floored() {\n    return Vector3Utils.floor(this)\n  }\n  get ceiled() {\n    return Vector3Utils.ceil(this)\n  }\n  get rounded() {\n    return Vector3Utils.round(this)\n  }\n  get absoluted() {\n    return Vector3Utils.abs(this)\n  }\n\n  /**\n   * Apply a function to each axes of the vector and return a new vector.\n   * @param callbackfn - The function to apply.\n   * @returns The new vector.\n   */\n  map(\n    callbackfn: (vale: number, index: number, array: number[]) => number\n  ): Vector3 {\n    return Vector3.create(this.axes.map(callbackfn))\n  }\n\n  copy(v: Vector3 | VectorN) {\n    this.x = v.x\n    this.y = v.y\n    this.z = v.z\n    return this\n  }\n  clone() {\n    return new Vector3(this.x, this.y, this.z)\n  }\n  equals(v: Vector3) {\n    return Vector3Utils.equals(this, v)\n  }\n\n  distanceTo(v: Vector3) {\n    return Vector3Utils.distance(this, v)\n  }\n  squaredDistanceTo(v: Vector3) {\n    return Vector3Utils.squaredDistance(this, v)\n  }\n\n  add(v: Vector3) {\n    return this.copy(Vector3Utils.add(this, v))\n  }\n  subtract(v: Vector3) {\n    return this.copy(Vector3Utils.subtract(this, v))\n  }\n  multiply(v: Vector3) {\n    return this.copy(Vector3Utils.multiply(this, v))\n  }\n  divide(v: Vector3) {\n    return this.copy(Vector3Utils.divide(this, v))\n  }\n  scale(n: number) {\n    return this.copy(Vector3Utils.scale(this, n))\n  }\n  negate() {\n    return this.copy(Vector3Utils.negate(this))\n  }\n  inverse() {\n    return this.copy(Vector3Utils.inverse(this))\n  }\n\n  floor() {\n    return this.copy(this.floored)\n  }\n  ceil() {\n    return this.copy(this.ceiled)\n  }\n  round() {\n    return this.copy(this.rounded)\n  }\n  abs() {\n    return this.copy(this.absoluted)\n  }\n\n  normalize() {\n    return this.copy(this.normalized)\n  }\n}\n","import type { Vector3Like } from \"../vector/Vector3.class\"\nimport { Vector3, Vector3Utils } from \"../vector/index\"\nimport type { BlockLocation } from \"./BlockLocation.class\"\n\nexport class Location extends Vector3 {\n  get centerCorrected() {\n    return Location.create(\n      // @ts-ignore\n      Vector3Utils.add(this.floored, new Vector3(0.5, 0.5, 0.5))\n    )\n  }\n\n  static create(vector: Vector3Like) {\n    return Vector3.create(vector) as Location\n  }\n\n  clone() {\n    return new Location(this.x, this.y, this.z)\n  }\n  equals(v: Location) {\n    return Vector3Utils.exactEquals(this, v)\n  }\n  isNearTo(v: Location | BlockLocation, distance: number) {\n    return this.distanceTo(v) <= distance\n  }\n\n  offset(v: Location | BlockLocation) {\n    return this.add(v)\n  }\n}\n","import { Vector3Utils } from \"../vector\"\nimport { Vector3, type Vector3Like } from \"../vector/Vector3.class\"\n\nexport class BlockLocation extends Vector3 {\n  constructor(x: number, y: number, z: number) {\n    super(x, y, z)\n\n    this.floor()\n  }\n\n  static create(vector: Vector3Like) {\n    return Vector3.create(vector) as BlockLocation\n  }\n\n  clone() {\n    return new BlockLocation(this.x, this.y, this.z)\n  }\n  equals(v: BlockLocation) {\n    return Vector3Utils.exactEquals(this, v)\n  }\n  isNearTo(v: BlockLocation, distance: number) {\n    return this.distanceTo(v) <= distance\n  }\n\n  offset(v: BlockLocation) {\n    return this.add(v)\n  }\n\n  divide(v: BlockLocation) {\n    super.divide(v)\n    return this.floor()\n  }\n}\n","import { type Player, system, world } from \"@minecraft/server\"\n\nexport const sleepAsync = (ms: number): Promise<void> =>\n  new Promise((resolve) => system.runTimeout(resolve, ms))\n\nexport function asyncRun<T>(fn: () => T): Promise<T> {\n  return new Promise((resolve, reject) => {\n    system.run(() => {\n      try {\n        resolve(fn())\n      } catch (err) {\n        reject(err)\n      }\n    })\n  })\n}\n\nexport function errorHandler(errText: string, target: Player) {\n  const err = new Error(errText)\n  target.sendMessage(err.toString())\n  return err\n}\n\nexport function waitForFirstPlayerInitialSpawn(): Promise<Player> {\n  const players = world.getAllPlayers()\n  if (players.length) return Promise.resolve(players[0])\n\n  return new Promise((resolve) => {\n    const callback = world.afterEvents.playerSpawn.subscribe((event) => {\n      if (event.initialSpawn) resolve(event.player)\n      world.afterEvents.playerSpawn.unsubscribe(callback)\n    })\n  })\n}\n\nexport function getOrAddObjective(id: string, name?: string) {\n  const objective = world.scoreboard.getObjective(id)\n\n  if (!objective && !name) throw new Error(`Couldn't find objective \"${id}\".`)\n  if (!objective) return world.scoreboard.addObjective(id, name)\n\n  return objective\n}\n\nexport function removeMinecraftNamespace(identifier: string) {\n  return identifier.replace(/^minecraft\\:/, \"\")\n}\n\nexport function addMinecraftNamespaceIfNeed(identifier: string) {\n  return /^(.+)\\:/.test(identifier) ? identifier : `minecraft:${identifier}`\n}\n","import { Dimension, world } from \"@minecraft/server\"\n\nimport { removeMinecraftNamespace } from \"../util/game\"\nimport type { Vector3Like } from \"../vector/Vector3.class\"\nimport { Location } from \"./Location.class\"\n\nexport class LocationInfo {\n  location: Location\n  dimension: Dimension\n\n  constructor({\n    location,\n    dimension,\n  }: {\n    location: Location | Vector3Like\n    dimension: string | Dimension\n  }) {\n    this.location =\n      location instanceof Location ? location : Location.create(location)\n    this.dimension =\n      dimension instanceof Dimension ? dimension : world.getDimension(dimension)\n  }\n  textify() {\n    return {\n      location: `${this.location}`,\n      dimension: this.dimension.id,\n    }\n  }\n\n  [Symbol.toPrimitive](hint: string) {\n    if (hint === \"string\")\n      return `${removeMinecraftNamespace(this.dimension.id)}: ${this.location}`\n    return this\n  }\n}\n","import { BlockLocation } from \"./BlockLocation.class\"\nimport type { Direction } from \"./Directions.class\"\nimport { Location } from \"./Location.class\"\n\nexport class LocationUtils {\n  static getDirectionOffset(direction: Direction) {\n    return BlockLocation.create({\n      x: direction.isEast() ? +1 : direction.isWest() ? -1 : 0,\n      y: direction.isUp() ? +1 : direction.isDown() ? -1 : 0,\n      z: direction.isSouth() ? +1 : direction.isNorth() ? -1 : 0,\n    })\n  }\n\n  static between(from: Location, to: Location, step = 1) {\n    const output = []\n    for (let x = from.x; x <= to.x; x += step) {\n      for (let y = from.y; y <= to.y; y += step) {\n        for (let z = from.z; z <= to.z; z += step) {\n          output.push(new Location(x, y, z))\n        }\n      }\n    }\n    return output\n  }\n}\n","export class Direction {\n  code: number\n\n  constructor(directionCode: number) {\n    this.code = directionCode\n  }\n\n  get name() {\n    switch (this.code) {\n      case 0:\n        return \"East\"\n      case 1:\n        return \"South\"\n      case 2:\n        return \"Up\"\n      case 3:\n        return \"West\"\n      case 4:\n        return \"North\"\n      case 5:\n        return \"Down\"\n      default:\n        throw new Error(\"Unexpected error.\")\n    }\n  }\n\n  isEast() {\n    return this.code === 0\n  }\n  isSouth() {\n    return this.code === 1\n  }\n  isUp() {\n    return this.code === 2\n  }\n  isWest() {\n    return this.code === 3\n  }\n  isNorth() {\n    return this.code === 4\n  }\n  isDown() {\n    return this.code === 5\n  }\n\n  equals(direction: Direction) {\n    return this.code === direction.code\n  }\n\n  getOpposite() {\n    const directionCode = this.code + 3\n    return new Direction(directionCode >= 6 ? directionCode - 6 : directionCode)\n  }\n  isOppositeTo(direction: Direction) {\n    return Math.abs(this.code - direction.code) === 3\n  }\n}\n\nexport class Directions {\n  static East = new Direction(0) // x+\n  static South = new Direction(1) // z+\n  static Up = new Direction(2) // y+\n  static West = new Direction(3) // x-\n  static North = new Direction(4) // z-\n  static Down = new Direction(5) // y-\n}\n","export class WrapperTemplate {\n  static wrap(...args) {\n    // return the class extending this\n    // @ts-ignore\n    return new this(...args)\n  }\n  static tryWrap(...args) {\n    try {\n      // return the class extending this\n      // @ts-ignore\n      return new this(...args)\n    } catch (err) {}\n  }\n\n  static match() {\n    throw new Error(\"Not implemented.\")\n  }\n  static assert() {\n    throw new Error(\"Not implemented.\")\n  }\n}\n","import { TypeGroup } from \"../TypeGroup.class\"\n\nexport const DIAMOND_PICKAXE_OR_UPPER = new TypeGroup([\n  \"minecraft:diamond_pickaxe\",\n  \"minecraft:netherite_pickaxe\",\n])\n\nexport const IRON_PICKAXE_OR_UPPER = new TypeGroup([\n  ...DIAMOND_PICKAXE_OR_UPPER,\n  \"minecraft:iron_pickaxe\",\n])\n\nexport const STONE_PICKAXE_OR_UPPER = new TypeGroup([\n  ...IRON_PICKAXE_OR_UPPER,\n  \"minecraft:stone_pickaxe\",\n])\n\nexport const WOODEN_PICKAXE_OR_UPPER = new TypeGroup([\n  ...STONE_PICKAXE_OR_UPPER,\n  \"minecraft:golden_pickaxe\",\n  \"minecraft:wooden_pickaxe\",\n])\n","import {\n  type ItemComponentTypeMap,\n  ItemComponentTypes,\n  type ItemEnchantableComponent,\n  type ItemStack,\n} from \"@minecraft/server\"\nimport type { MinecraftItemTypes } from \"@minecraft/vanilla-data\"\n\nimport { removeMinecraftNamespace } from \"../../util/game\"\nimport { WrapperTemplate } from \"../WrapperTemplate.class\"\n\nexport class WrappedItemStack extends WrapperTemplate {\n  _item: ItemStack\n  type: ItemStack[\"type\"]\n  typeId: MinecraftItemTypes\n  components = new Map<\n    keyof ItemComponentTypeMap,\n    ItemComponentTypeMap[keyof ItemComponentTypeMap]\n  >()\n\n  constructor(itemStack: ItemStack) {\n    super()\n\n    this._item = itemStack\n\n    this.type = itemStack.type\n    this.typeId = itemStack.typeId as MinecraftItemTypes\n\n    const components = itemStack.getComponents()\n    for (const component of components)\n      this.components.set(\n        removeMinecraftNamespace(\n          component.typeId\n        ) as keyof ItemComponentTypeMap,\n        component as ItemComponentTypeMap[keyof ItemComponentTypeMap]\n      )\n  }\n\n  hasComponent(componentId: string) {\n    return this._item.hasComponent(componentId)\n  }\n\n  get enchants() {\n    return this.components.get(\n      ItemComponentTypes.Enchantable\n    ) as ItemEnchantableComponent\n  }\n}\n","// Vanilla Data for Minecraft Bedrock Edition script APIs\r\n// Project: https://docs.microsoft.com/minecraft/creator/\r\n// Definitions by: Jake Shirley <https://github.com/JakeShirley>\r\n//                 Mike Ammerlaan <https://github.com/mammerla>\r\n//                 Raphael Landaverde <https://github.com/rlandav>\r\n\r\n/* *****************************************************************************\r\n   Copyright (c) Microsoft Corporation.\r\n   ***************************************************************************** */\r\nvar MinecraftBiomeTypes=(MinecraftBiomeTypes2=>{MinecraftBiomeTypes2[\"BambooJungle\"]=\"minecraft:bamboo_jungle\";MinecraftBiomeTypes2[\"BambooJungleHills\"]=\"minecraft:bamboo_jungle_hills\";MinecraftBiomeTypes2[\"BasaltDeltas\"]=\"minecraft:basalt_deltas\";MinecraftBiomeTypes2[\"Beach\"]=\"minecraft:beach\";MinecraftBiomeTypes2[\"BirchForest\"]=\"minecraft:birch_forest\";MinecraftBiomeTypes2[\"BirchForestHills\"]=\"minecraft:birch_forest_hills\";MinecraftBiomeTypes2[\"BirchForestHillsMutated\"]=\"minecraft:birch_forest_hills_mutated\";MinecraftBiomeTypes2[\"BirchForestMutated\"]=\"minecraft:birch_forest_mutated\";MinecraftBiomeTypes2[\"CherryGrove\"]=\"minecraft:cherry_grove\";MinecraftBiomeTypes2[\"ColdBeach\"]=\"minecraft:cold_beach\";MinecraftBiomeTypes2[\"ColdOcean\"]=\"minecraft:cold_ocean\";MinecraftBiomeTypes2[\"ColdTaiga\"]=\"minecraft:cold_taiga\";MinecraftBiomeTypes2[\"ColdTaigaHills\"]=\"minecraft:cold_taiga_hills\";MinecraftBiomeTypes2[\"ColdTaigaMutated\"]=\"minecraft:cold_taiga_mutated\";MinecraftBiomeTypes2[\"CrimsonForest\"]=\"minecraft:crimson_forest\";MinecraftBiomeTypes2[\"DeepColdOcean\"]=\"minecraft:deep_cold_ocean\";MinecraftBiomeTypes2[\"DeepDark\"]=\"minecraft:deep_dark\";MinecraftBiomeTypes2[\"DeepFrozenOcean\"]=\"minecraft:deep_frozen_ocean\";MinecraftBiomeTypes2[\"DeepLukewarmOcean\"]=\"minecraft:deep_lukewarm_ocean\";MinecraftBiomeTypes2[\"DeepOcean\"]=\"minecraft:deep_ocean\";MinecraftBiomeTypes2[\"DeepWarmOcean\"]=\"minecraft:deep_warm_ocean\";MinecraftBiomeTypes2[\"Desert\"]=\"minecraft:desert\";MinecraftBiomeTypes2[\"DesertHills\"]=\"minecraft:desert_hills\";MinecraftBiomeTypes2[\"DesertMutated\"]=\"minecraft:desert_mutated\";MinecraftBiomeTypes2[\"DripstoneCaves\"]=\"minecraft:dripstone_caves\";MinecraftBiomeTypes2[\"ExtremeHills\"]=\"minecraft:extreme_hills\";MinecraftBiomeTypes2[\"ExtremeHillsEdge\"]=\"minecraft:extreme_hills_edge\";MinecraftBiomeTypes2[\"ExtremeHillsMutated\"]=\"minecraft:extreme_hills_mutated\";MinecraftBiomeTypes2[\"ExtremeHillsPlusTrees\"]=\"minecraft:extreme_hills_plus_trees\";MinecraftBiomeTypes2[\"ExtremeHillsPlusTreesMutated\"]=\"minecraft:extreme_hills_plus_trees_mutated\";MinecraftBiomeTypes2[\"FlowerForest\"]=\"minecraft:flower_forest\";MinecraftBiomeTypes2[\"Forest\"]=\"minecraft:forest\";MinecraftBiomeTypes2[\"ForestHills\"]=\"minecraft:forest_hills\";MinecraftBiomeTypes2[\"FrozenOcean\"]=\"minecraft:frozen_ocean\";MinecraftBiomeTypes2[\"FrozenPeaks\"]=\"minecraft:frozen_peaks\";MinecraftBiomeTypes2[\"FrozenRiver\"]=\"minecraft:frozen_river\";MinecraftBiomeTypes2[\"Grove\"]=\"minecraft:grove\";MinecraftBiomeTypes2[\"Hell\"]=\"minecraft:hell\";MinecraftBiomeTypes2[\"IceMountains\"]=\"minecraft:ice_mountains\";MinecraftBiomeTypes2[\"IcePlains\"]=\"minecraft:ice_plains\";MinecraftBiomeTypes2[\"IcePlainsSpikes\"]=\"minecraft:ice_plains_spikes\";MinecraftBiomeTypes2[\"JaggedPeaks\"]=\"minecraft:jagged_peaks\";MinecraftBiomeTypes2[\"Jungle\"]=\"minecraft:jungle\";MinecraftBiomeTypes2[\"JungleEdge\"]=\"minecraft:jungle_edge\";MinecraftBiomeTypes2[\"JungleEdgeMutated\"]=\"minecraft:jungle_edge_mutated\";MinecraftBiomeTypes2[\"JungleHills\"]=\"minecraft:jungle_hills\";MinecraftBiomeTypes2[\"JungleMutated\"]=\"minecraft:jungle_mutated\";MinecraftBiomeTypes2[\"LegacyFrozenOcean\"]=\"minecraft:legacy_frozen_ocean\";MinecraftBiomeTypes2[\"LukewarmOcean\"]=\"minecraft:lukewarm_ocean\";MinecraftBiomeTypes2[\"LushCaves\"]=\"minecraft:lush_caves\";MinecraftBiomeTypes2[\"MangroveSwamp\"]=\"minecraft:mangrove_swamp\";MinecraftBiomeTypes2[\"Meadow\"]=\"minecraft:meadow\";MinecraftBiomeTypes2[\"MegaTaiga\"]=\"minecraft:mega_taiga\";MinecraftBiomeTypes2[\"MegaTaigaHills\"]=\"minecraft:mega_taiga_hills\";MinecraftBiomeTypes2[\"Mesa\"]=\"minecraft:mesa\";MinecraftBiomeTypes2[\"MesaBryce\"]=\"minecraft:mesa_bryce\";MinecraftBiomeTypes2[\"MesaPlateau\"]=\"minecraft:mesa_plateau\";MinecraftBiomeTypes2[\"MesaPlateauMutated\"]=\"minecraft:mesa_plateau_mutated\";MinecraftBiomeTypes2[\"MesaPlateauStone\"]=\"minecraft:mesa_plateau_stone\";MinecraftBiomeTypes2[\"MesaPlateauStoneMutated\"]=\"minecraft:mesa_plateau_stone_mutated\";MinecraftBiomeTypes2[\"MushroomIsland\"]=\"minecraft:mushroom_island\";MinecraftBiomeTypes2[\"MushroomIslandShore\"]=\"minecraft:mushroom_island_shore\";MinecraftBiomeTypes2[\"Ocean\"]=\"minecraft:ocean\";MinecraftBiomeTypes2[\"Plains\"]=\"minecraft:plains\";MinecraftBiomeTypes2[\"RedwoodTaigaHillsMutated\"]=\"minecraft:redwood_taiga_hills_mutated\";MinecraftBiomeTypes2[\"RedwoodTaigaMutated\"]=\"minecraft:redwood_taiga_mutated\";MinecraftBiomeTypes2[\"River\"]=\"minecraft:river\";MinecraftBiomeTypes2[\"RoofedForest\"]=\"minecraft:roofed_forest\";MinecraftBiomeTypes2[\"RoofedForestMutated\"]=\"minecraft:roofed_forest_mutated\";MinecraftBiomeTypes2[\"Savanna\"]=\"minecraft:savanna\";MinecraftBiomeTypes2[\"SavannaMutated\"]=\"minecraft:savanna_mutated\";MinecraftBiomeTypes2[\"SavannaPlateau\"]=\"minecraft:savanna_plateau\";MinecraftBiomeTypes2[\"SavannaPlateauMutated\"]=\"minecraft:savanna_plateau_mutated\";MinecraftBiomeTypes2[\"SnowySlopes\"]=\"minecraft:snowy_slopes\";MinecraftBiomeTypes2[\"SoulsandValley\"]=\"minecraft:soulsand_valley\";MinecraftBiomeTypes2[\"StoneBeach\"]=\"minecraft:stone_beach\";MinecraftBiomeTypes2[\"StonyPeaks\"]=\"minecraft:stony_peaks\";MinecraftBiomeTypes2[\"SunflowerPlains\"]=\"minecraft:sunflower_plains\";MinecraftBiomeTypes2[\"Swampland\"]=\"minecraft:swampland\";MinecraftBiomeTypes2[\"SwamplandMutated\"]=\"minecraft:swampland_mutated\";MinecraftBiomeTypes2[\"Taiga\"]=\"minecraft:taiga\";MinecraftBiomeTypes2[\"TaigaHills\"]=\"minecraft:taiga_hills\";MinecraftBiomeTypes2[\"TaigaMutated\"]=\"minecraft:taiga_mutated\";MinecraftBiomeTypes2[\"TheEnd\"]=\"minecraft:the_end\";MinecraftBiomeTypes2[\"WarmOcean\"]=\"minecraft:warm_ocean\";MinecraftBiomeTypes2[\"WarpedForest\"]=\"minecraft:warped_forest\";return MinecraftBiomeTypes2})(MinecraftBiomeTypes||{});var MinecraftBlockTypes=(MinecraftBlockTypes2=>{MinecraftBlockTypes2[\"AcaciaButton\"]=\"minecraft:acacia_button\";MinecraftBlockTypes2[\"AcaciaDoor\"]=\"minecraft:acacia_door\";MinecraftBlockTypes2[\"AcaciaDoubleSlab\"]=\"minecraft:acacia_double_slab\";MinecraftBlockTypes2[\"AcaciaFence\"]=\"minecraft:acacia_fence\";MinecraftBlockTypes2[\"AcaciaFenceGate\"]=\"minecraft:acacia_fence_gate\";MinecraftBlockTypes2[\"AcaciaHangingSign\"]=\"minecraft:acacia_hanging_sign\";MinecraftBlockTypes2[\"AcaciaLeaves\"]=\"minecraft:acacia_leaves\";MinecraftBlockTypes2[\"AcaciaLog\"]=\"minecraft:acacia_log\";MinecraftBlockTypes2[\"AcaciaPlanks\"]=\"minecraft:acacia_planks\";MinecraftBlockTypes2[\"AcaciaPressurePlate\"]=\"minecraft:acacia_pressure_plate\";MinecraftBlockTypes2[\"AcaciaSapling\"]=\"minecraft:acacia_sapling\";MinecraftBlockTypes2[\"AcaciaSlab\"]=\"minecraft:acacia_slab\";MinecraftBlockTypes2[\"AcaciaStairs\"]=\"minecraft:acacia_stairs\";MinecraftBlockTypes2[\"AcaciaStandingSign\"]=\"minecraft:acacia_standing_sign\";MinecraftBlockTypes2[\"AcaciaTrapdoor\"]=\"minecraft:acacia_trapdoor\";MinecraftBlockTypes2[\"AcaciaWallSign\"]=\"minecraft:acacia_wall_sign\";MinecraftBlockTypes2[\"AcaciaWood\"]=\"minecraft:acacia_wood\";MinecraftBlockTypes2[\"ActivatorRail\"]=\"minecraft:activator_rail\";MinecraftBlockTypes2[\"Air\"]=\"minecraft:air\";MinecraftBlockTypes2[\"Allium\"]=\"minecraft:allium\";MinecraftBlockTypes2[\"Allow\"]=\"minecraft:allow\";MinecraftBlockTypes2[\"AmethystBlock\"]=\"minecraft:amethyst_block\";MinecraftBlockTypes2[\"AmethystCluster\"]=\"minecraft:amethyst_cluster\";MinecraftBlockTypes2[\"AncientDebris\"]=\"minecraft:ancient_debris\";MinecraftBlockTypes2[\"Andesite\"]=\"minecraft:andesite\";MinecraftBlockTypes2[\"AndesiteStairs\"]=\"minecraft:andesite_stairs\";MinecraftBlockTypes2[\"Anvil\"]=\"minecraft:anvil\";MinecraftBlockTypes2[\"Azalea\"]=\"minecraft:azalea\";MinecraftBlockTypes2[\"AzaleaLeaves\"]=\"minecraft:azalea_leaves\";MinecraftBlockTypes2[\"AzaleaLeavesFlowered\"]=\"minecraft:azalea_leaves_flowered\";MinecraftBlockTypes2[\"AzureBluet\"]=\"minecraft:azure_bluet\";MinecraftBlockTypes2[\"Bamboo\"]=\"minecraft:bamboo\";MinecraftBlockTypes2[\"BambooBlock\"]=\"minecraft:bamboo_block\";MinecraftBlockTypes2[\"BambooButton\"]=\"minecraft:bamboo_button\";MinecraftBlockTypes2[\"BambooDoor\"]=\"minecraft:bamboo_door\";MinecraftBlockTypes2[\"BambooDoubleSlab\"]=\"minecraft:bamboo_double_slab\";MinecraftBlockTypes2[\"BambooFence\"]=\"minecraft:bamboo_fence\";MinecraftBlockTypes2[\"BambooFenceGate\"]=\"minecraft:bamboo_fence_gate\";MinecraftBlockTypes2[\"BambooHangingSign\"]=\"minecraft:bamboo_hanging_sign\";MinecraftBlockTypes2[\"BambooMosaic\"]=\"minecraft:bamboo_mosaic\";MinecraftBlockTypes2[\"BambooMosaicDoubleSlab\"]=\"minecraft:bamboo_mosaic_double_slab\";MinecraftBlockTypes2[\"BambooMosaicSlab\"]=\"minecraft:bamboo_mosaic_slab\";MinecraftBlockTypes2[\"BambooMosaicStairs\"]=\"minecraft:bamboo_mosaic_stairs\";MinecraftBlockTypes2[\"BambooPlanks\"]=\"minecraft:bamboo_planks\";MinecraftBlockTypes2[\"BambooPressurePlate\"]=\"minecraft:bamboo_pressure_plate\";MinecraftBlockTypes2[\"BambooSapling\"]=\"minecraft:bamboo_sapling\";MinecraftBlockTypes2[\"BambooSlab\"]=\"minecraft:bamboo_slab\";MinecraftBlockTypes2[\"BambooStairs\"]=\"minecraft:bamboo_stairs\";MinecraftBlockTypes2[\"BambooStandingSign\"]=\"minecraft:bamboo_standing_sign\";MinecraftBlockTypes2[\"BambooTrapdoor\"]=\"minecraft:bamboo_trapdoor\";MinecraftBlockTypes2[\"BambooWallSign\"]=\"minecraft:bamboo_wall_sign\";MinecraftBlockTypes2[\"Barrel\"]=\"minecraft:barrel\";MinecraftBlockTypes2[\"Barrier\"]=\"minecraft:barrier\";MinecraftBlockTypes2[\"Basalt\"]=\"minecraft:basalt\";MinecraftBlockTypes2[\"Beacon\"]=\"minecraft:beacon\";MinecraftBlockTypes2[\"Bed\"]=\"minecraft:bed\";MinecraftBlockTypes2[\"Bedrock\"]=\"minecraft:bedrock\";MinecraftBlockTypes2[\"BeeNest\"]=\"minecraft:bee_nest\";MinecraftBlockTypes2[\"Beehive\"]=\"minecraft:beehive\";MinecraftBlockTypes2[\"Beetroot\"]=\"minecraft:beetroot\";MinecraftBlockTypes2[\"Bell\"]=\"minecraft:bell\";MinecraftBlockTypes2[\"BigDripleaf\"]=\"minecraft:big_dripleaf\";MinecraftBlockTypes2[\"BirchButton\"]=\"minecraft:birch_button\";MinecraftBlockTypes2[\"BirchDoor\"]=\"minecraft:birch_door\";MinecraftBlockTypes2[\"BirchDoubleSlab\"]=\"minecraft:birch_double_slab\";MinecraftBlockTypes2[\"BirchFence\"]=\"minecraft:birch_fence\";MinecraftBlockTypes2[\"BirchFenceGate\"]=\"minecraft:birch_fence_gate\";MinecraftBlockTypes2[\"BirchHangingSign\"]=\"minecraft:birch_hanging_sign\";MinecraftBlockTypes2[\"BirchLeaves\"]=\"minecraft:birch_leaves\";MinecraftBlockTypes2[\"BirchLog\"]=\"minecraft:birch_log\";MinecraftBlockTypes2[\"BirchPlanks\"]=\"minecraft:birch_planks\";MinecraftBlockTypes2[\"BirchPressurePlate\"]=\"minecraft:birch_pressure_plate\";MinecraftBlockTypes2[\"BirchSapling\"]=\"minecraft:birch_sapling\";MinecraftBlockTypes2[\"BirchSlab\"]=\"minecraft:birch_slab\";MinecraftBlockTypes2[\"BirchStairs\"]=\"minecraft:birch_stairs\";MinecraftBlockTypes2[\"BirchStandingSign\"]=\"minecraft:birch_standing_sign\";MinecraftBlockTypes2[\"BirchTrapdoor\"]=\"minecraft:birch_trapdoor\";MinecraftBlockTypes2[\"BirchWallSign\"]=\"minecraft:birch_wall_sign\";MinecraftBlockTypes2[\"BirchWood\"]=\"minecraft:birch_wood\";MinecraftBlockTypes2[\"BlackCandle\"]=\"minecraft:black_candle\";MinecraftBlockTypes2[\"BlackCandleCake\"]=\"minecraft:black_candle_cake\";MinecraftBlockTypes2[\"BlackCarpet\"]=\"minecraft:black_carpet\";MinecraftBlockTypes2[\"BlackConcrete\"]=\"minecraft:black_concrete\";MinecraftBlockTypes2[\"BlackConcretePowder\"]=\"minecraft:black_concrete_powder\";MinecraftBlockTypes2[\"BlackGlazedTerracotta\"]=\"minecraft:black_glazed_terracotta\";MinecraftBlockTypes2[\"BlackShulkerBox\"]=\"minecraft:black_shulker_box\";MinecraftBlockTypes2[\"BlackStainedGlass\"]=\"minecraft:black_stained_glass\";MinecraftBlockTypes2[\"BlackStainedGlassPane\"]=\"minecraft:black_stained_glass_pane\";MinecraftBlockTypes2[\"BlackTerracotta\"]=\"minecraft:black_terracotta\";MinecraftBlockTypes2[\"BlackWool\"]=\"minecraft:black_wool\";MinecraftBlockTypes2[\"Blackstone\"]=\"minecraft:blackstone\";MinecraftBlockTypes2[\"BlackstoneDoubleSlab\"]=\"minecraft:blackstone_double_slab\";MinecraftBlockTypes2[\"BlackstoneSlab\"]=\"minecraft:blackstone_slab\";MinecraftBlockTypes2[\"BlackstoneStairs\"]=\"minecraft:blackstone_stairs\";MinecraftBlockTypes2[\"BlackstoneWall\"]=\"minecraft:blackstone_wall\";MinecraftBlockTypes2[\"BlastFurnace\"]=\"minecraft:blast_furnace\";MinecraftBlockTypes2[\"BlueCandle\"]=\"minecraft:blue_candle\";MinecraftBlockTypes2[\"BlueCandleCake\"]=\"minecraft:blue_candle_cake\";MinecraftBlockTypes2[\"BlueCarpet\"]=\"minecraft:blue_carpet\";MinecraftBlockTypes2[\"BlueConcrete\"]=\"minecraft:blue_concrete\";MinecraftBlockTypes2[\"BlueConcretePowder\"]=\"minecraft:blue_concrete_powder\";MinecraftBlockTypes2[\"BlueGlazedTerracotta\"]=\"minecraft:blue_glazed_terracotta\";MinecraftBlockTypes2[\"BlueIce\"]=\"minecraft:blue_ice\";MinecraftBlockTypes2[\"BlueOrchid\"]=\"minecraft:blue_orchid\";MinecraftBlockTypes2[\"BlueShulkerBox\"]=\"minecraft:blue_shulker_box\";MinecraftBlockTypes2[\"BlueStainedGlass\"]=\"minecraft:blue_stained_glass\";MinecraftBlockTypes2[\"BlueStainedGlassPane\"]=\"minecraft:blue_stained_glass_pane\";MinecraftBlockTypes2[\"BlueTerracotta\"]=\"minecraft:blue_terracotta\";MinecraftBlockTypes2[\"BlueWool\"]=\"minecraft:blue_wool\";MinecraftBlockTypes2[\"BoneBlock\"]=\"minecraft:bone_block\";MinecraftBlockTypes2[\"Bookshelf\"]=\"minecraft:bookshelf\";MinecraftBlockTypes2[\"BorderBlock\"]=\"minecraft:border_block\";MinecraftBlockTypes2[\"BrainCoral\"]=\"minecraft:brain_coral\";MinecraftBlockTypes2[\"BrainCoralBlock\"]=\"minecraft:brain_coral_block\";MinecraftBlockTypes2[\"BrainCoralFan\"]=\"minecraft:brain_coral_fan\";MinecraftBlockTypes2[\"BrewingStand\"]=\"minecraft:brewing_stand\";MinecraftBlockTypes2[\"BrickBlock\"]=\"minecraft:brick_block\";MinecraftBlockTypes2[\"BrickSlab\"]=\"minecraft:brick_slab\";MinecraftBlockTypes2[\"BrickStairs\"]=\"minecraft:brick_stairs\";MinecraftBlockTypes2[\"BrownCandle\"]=\"minecraft:brown_candle\";MinecraftBlockTypes2[\"BrownCandleCake\"]=\"minecraft:brown_candle_cake\";MinecraftBlockTypes2[\"BrownCarpet\"]=\"minecraft:brown_carpet\";MinecraftBlockTypes2[\"BrownConcrete\"]=\"minecraft:brown_concrete\";MinecraftBlockTypes2[\"BrownConcretePowder\"]=\"minecraft:brown_concrete_powder\";MinecraftBlockTypes2[\"BrownGlazedTerracotta\"]=\"minecraft:brown_glazed_terracotta\";MinecraftBlockTypes2[\"BrownMushroom\"]=\"minecraft:brown_mushroom\";MinecraftBlockTypes2[\"BrownMushroomBlock\"]=\"minecraft:brown_mushroom_block\";MinecraftBlockTypes2[\"BrownShulkerBox\"]=\"minecraft:brown_shulker_box\";MinecraftBlockTypes2[\"BrownStainedGlass\"]=\"minecraft:brown_stained_glass\";MinecraftBlockTypes2[\"BrownStainedGlassPane\"]=\"minecraft:brown_stained_glass_pane\";MinecraftBlockTypes2[\"BrownTerracotta\"]=\"minecraft:brown_terracotta\";MinecraftBlockTypes2[\"BrownWool\"]=\"minecraft:brown_wool\";MinecraftBlockTypes2[\"BubbleColumn\"]=\"minecraft:bubble_column\";MinecraftBlockTypes2[\"BubbleCoral\"]=\"minecraft:bubble_coral\";MinecraftBlockTypes2[\"BubbleCoralBlock\"]=\"minecraft:bubble_coral_block\";MinecraftBlockTypes2[\"BubbleCoralFan\"]=\"minecraft:bubble_coral_fan\";MinecraftBlockTypes2[\"BuddingAmethyst\"]=\"minecraft:budding_amethyst\";MinecraftBlockTypes2[\"Cactus\"]=\"minecraft:cactus\";MinecraftBlockTypes2[\"Cake\"]=\"minecraft:cake\";MinecraftBlockTypes2[\"Calcite\"]=\"minecraft:calcite\";MinecraftBlockTypes2[\"CalibratedSculkSensor\"]=\"minecraft:calibrated_sculk_sensor\";MinecraftBlockTypes2[\"Camera\"]=\"minecraft:camera\";MinecraftBlockTypes2[\"Campfire\"]=\"minecraft:campfire\";MinecraftBlockTypes2[\"Candle\"]=\"minecraft:candle\";MinecraftBlockTypes2[\"CandleCake\"]=\"minecraft:candle_cake\";MinecraftBlockTypes2[\"Carrots\"]=\"minecraft:carrots\";MinecraftBlockTypes2[\"CartographyTable\"]=\"minecraft:cartography_table\";MinecraftBlockTypes2[\"CarvedPumpkin\"]=\"minecraft:carved_pumpkin\";MinecraftBlockTypes2[\"Cauldron\"]=\"minecraft:cauldron\";MinecraftBlockTypes2[\"CaveVines\"]=\"minecraft:cave_vines\";MinecraftBlockTypes2[\"CaveVinesBodyWithBerries\"]=\"minecraft:cave_vines_body_with_berries\";MinecraftBlockTypes2[\"CaveVinesHeadWithBerries\"]=\"minecraft:cave_vines_head_with_berries\";MinecraftBlockTypes2[\"Chain\"]=\"minecraft:chain\";MinecraftBlockTypes2[\"ChainCommandBlock\"]=\"minecraft:chain_command_block\";MinecraftBlockTypes2[\"ChemicalHeat\"]=\"minecraft:chemical_heat\";MinecraftBlockTypes2[\"ChemistryTable\"]=\"minecraft:chemistry_table\";MinecraftBlockTypes2[\"CherryButton\"]=\"minecraft:cherry_button\";MinecraftBlockTypes2[\"CherryDoor\"]=\"minecraft:cherry_door\";MinecraftBlockTypes2[\"CherryDoubleSlab\"]=\"minecraft:cherry_double_slab\";MinecraftBlockTypes2[\"CherryFence\"]=\"minecraft:cherry_fence\";MinecraftBlockTypes2[\"CherryFenceGate\"]=\"minecraft:cherry_fence_gate\";MinecraftBlockTypes2[\"CherryHangingSign\"]=\"minecraft:cherry_hanging_sign\";MinecraftBlockTypes2[\"CherryLeaves\"]=\"minecraft:cherry_leaves\";MinecraftBlockTypes2[\"CherryLog\"]=\"minecraft:cherry_log\";MinecraftBlockTypes2[\"CherryPlanks\"]=\"minecraft:cherry_planks\";MinecraftBlockTypes2[\"CherryPressurePlate\"]=\"minecraft:cherry_pressure_plate\";MinecraftBlockTypes2[\"CherrySapling\"]=\"minecraft:cherry_sapling\";MinecraftBlockTypes2[\"CherrySlab\"]=\"minecraft:cherry_slab\";MinecraftBlockTypes2[\"CherryStairs\"]=\"minecraft:cherry_stairs\";MinecraftBlockTypes2[\"CherryStandingSign\"]=\"minecraft:cherry_standing_sign\";MinecraftBlockTypes2[\"CherryTrapdoor\"]=\"minecraft:cherry_trapdoor\";MinecraftBlockTypes2[\"CherryWallSign\"]=\"minecraft:cherry_wall_sign\";MinecraftBlockTypes2[\"CherryWood\"]=\"minecraft:cherry_wood\";MinecraftBlockTypes2[\"Chest\"]=\"minecraft:chest\";MinecraftBlockTypes2[\"ChiseledBookshelf\"]=\"minecraft:chiseled_bookshelf\";MinecraftBlockTypes2[\"ChiseledCopper\"]=\"minecraft:chiseled_copper\";MinecraftBlockTypes2[\"ChiseledDeepslate\"]=\"minecraft:chiseled_deepslate\";MinecraftBlockTypes2[\"ChiseledNetherBricks\"]=\"minecraft:chiseled_nether_bricks\";MinecraftBlockTypes2[\"ChiseledPolishedBlackstone\"]=\"minecraft:chiseled_polished_blackstone\";MinecraftBlockTypes2[\"ChiseledTuff\"]=\"minecraft:chiseled_tuff\";MinecraftBlockTypes2[\"ChiseledTuffBricks\"]=\"minecraft:chiseled_tuff_bricks\";MinecraftBlockTypes2[\"ChorusFlower\"]=\"minecraft:chorus_flower\";MinecraftBlockTypes2[\"ChorusPlant\"]=\"minecraft:chorus_plant\";MinecraftBlockTypes2[\"Clay\"]=\"minecraft:clay\";MinecraftBlockTypes2[\"ClientRequestPlaceholderBlock\"]=\"minecraft:client_request_placeholder_block\";MinecraftBlockTypes2[\"CoalBlock\"]=\"minecraft:coal_block\";MinecraftBlockTypes2[\"CoalOre\"]=\"minecraft:coal_ore\";MinecraftBlockTypes2[\"CobbledDeepslate\"]=\"minecraft:cobbled_deepslate\";MinecraftBlockTypes2[\"CobbledDeepslateDoubleSlab\"]=\"minecraft:cobbled_deepslate_double_slab\";MinecraftBlockTypes2[\"CobbledDeepslateSlab\"]=\"minecraft:cobbled_deepslate_slab\";MinecraftBlockTypes2[\"CobbledDeepslateStairs\"]=\"minecraft:cobbled_deepslate_stairs\";MinecraftBlockTypes2[\"CobbledDeepslateWall\"]=\"minecraft:cobbled_deepslate_wall\";MinecraftBlockTypes2[\"Cobblestone\"]=\"minecraft:cobblestone\";MinecraftBlockTypes2[\"CobblestoneSlab\"]=\"minecraft:cobblestone_slab\";MinecraftBlockTypes2[\"CobblestoneWall\"]=\"minecraft:cobblestone_wall\";MinecraftBlockTypes2[\"Cocoa\"]=\"minecraft:cocoa\";MinecraftBlockTypes2[\"ColoredTorchBp\"]=\"minecraft:colored_torch_bp\";MinecraftBlockTypes2[\"ColoredTorchRg\"]=\"minecraft:colored_torch_rg\";MinecraftBlockTypes2[\"CommandBlock\"]=\"minecraft:command_block\";MinecraftBlockTypes2[\"Composter\"]=\"minecraft:composter\";MinecraftBlockTypes2[\"Conduit\"]=\"minecraft:conduit\";MinecraftBlockTypes2[\"CopperBlock\"]=\"minecraft:copper_block\";MinecraftBlockTypes2[\"CopperBulb\"]=\"minecraft:copper_bulb\";MinecraftBlockTypes2[\"CopperDoor\"]=\"minecraft:copper_door\";MinecraftBlockTypes2[\"CopperGrate\"]=\"minecraft:copper_grate\";MinecraftBlockTypes2[\"CopperOre\"]=\"minecraft:copper_ore\";MinecraftBlockTypes2[\"CopperTrapdoor\"]=\"minecraft:copper_trapdoor\";MinecraftBlockTypes2[\"CoralFanHang\"]=\"minecraft:coral_fan_hang\";MinecraftBlockTypes2[\"CoralFanHang2\"]=\"minecraft:coral_fan_hang2\";MinecraftBlockTypes2[\"CoralFanHang3\"]=\"minecraft:coral_fan_hang3\";MinecraftBlockTypes2[\"Cornflower\"]=\"minecraft:cornflower\";MinecraftBlockTypes2[\"CrackedDeepslateBricks\"]=\"minecraft:cracked_deepslate_bricks\";MinecraftBlockTypes2[\"CrackedDeepslateTiles\"]=\"minecraft:cracked_deepslate_tiles\";MinecraftBlockTypes2[\"CrackedNetherBricks\"]=\"minecraft:cracked_nether_bricks\";MinecraftBlockTypes2[\"CrackedPolishedBlackstoneBricks\"]=\"minecraft:cracked_polished_blackstone_bricks\";MinecraftBlockTypes2[\"Crafter\"]=\"minecraft:crafter\";MinecraftBlockTypes2[\"CraftingTable\"]=\"minecraft:crafting_table\";MinecraftBlockTypes2[\"CrimsonButton\"]=\"minecraft:crimson_button\";MinecraftBlockTypes2[\"CrimsonDoor\"]=\"minecraft:crimson_door\";MinecraftBlockTypes2[\"CrimsonDoubleSlab\"]=\"minecraft:crimson_double_slab\";MinecraftBlockTypes2[\"CrimsonFence\"]=\"minecraft:crimson_fence\";MinecraftBlockTypes2[\"CrimsonFenceGate\"]=\"minecraft:crimson_fence_gate\";MinecraftBlockTypes2[\"CrimsonFungus\"]=\"minecraft:crimson_fungus\";MinecraftBlockTypes2[\"CrimsonHangingSign\"]=\"minecraft:crimson_hanging_sign\";MinecraftBlockTypes2[\"CrimsonHyphae\"]=\"minecraft:crimson_hyphae\";MinecraftBlockTypes2[\"CrimsonNylium\"]=\"minecraft:crimson_nylium\";MinecraftBlockTypes2[\"CrimsonPlanks\"]=\"minecraft:crimson_planks\";MinecraftBlockTypes2[\"CrimsonPressurePlate\"]=\"minecraft:crimson_pressure_plate\";MinecraftBlockTypes2[\"CrimsonRoots\"]=\"minecraft:crimson_roots\";MinecraftBlockTypes2[\"CrimsonSlab\"]=\"minecraft:crimson_slab\";MinecraftBlockTypes2[\"CrimsonStairs\"]=\"minecraft:crimson_stairs\";MinecraftBlockTypes2[\"CrimsonStandingSign\"]=\"minecraft:crimson_standing_sign\";MinecraftBlockTypes2[\"CrimsonStem\"]=\"minecraft:crimson_stem\";MinecraftBlockTypes2[\"CrimsonTrapdoor\"]=\"minecraft:crimson_trapdoor\";MinecraftBlockTypes2[\"CrimsonWallSign\"]=\"minecraft:crimson_wall_sign\";MinecraftBlockTypes2[\"CryingObsidian\"]=\"minecraft:crying_obsidian\";MinecraftBlockTypes2[\"CutCopper\"]=\"minecraft:cut_copper\";MinecraftBlockTypes2[\"CutCopperSlab\"]=\"minecraft:cut_copper_slab\";MinecraftBlockTypes2[\"CutCopperStairs\"]=\"minecraft:cut_copper_stairs\";MinecraftBlockTypes2[\"CyanCandle\"]=\"minecraft:cyan_candle\";MinecraftBlockTypes2[\"CyanCandleCake\"]=\"minecraft:cyan_candle_cake\";MinecraftBlockTypes2[\"CyanCarpet\"]=\"minecraft:cyan_carpet\";MinecraftBlockTypes2[\"CyanConcrete\"]=\"minecraft:cyan_concrete\";MinecraftBlockTypes2[\"CyanConcretePowder\"]=\"minecraft:cyan_concrete_powder\";MinecraftBlockTypes2[\"CyanGlazedTerracotta\"]=\"minecraft:cyan_glazed_terracotta\";MinecraftBlockTypes2[\"CyanShulkerBox\"]=\"minecraft:cyan_shulker_box\";MinecraftBlockTypes2[\"CyanStainedGlass\"]=\"minecraft:cyan_stained_glass\";MinecraftBlockTypes2[\"CyanStainedGlassPane\"]=\"minecraft:cyan_stained_glass_pane\";MinecraftBlockTypes2[\"CyanTerracotta\"]=\"minecraft:cyan_terracotta\";MinecraftBlockTypes2[\"CyanWool\"]=\"minecraft:cyan_wool\";MinecraftBlockTypes2[\"DarkOakButton\"]=\"minecraft:dark_oak_button\";MinecraftBlockTypes2[\"DarkOakDoor\"]=\"minecraft:dark_oak_door\";MinecraftBlockTypes2[\"DarkOakDoubleSlab\"]=\"minecraft:dark_oak_double_slab\";MinecraftBlockTypes2[\"DarkOakFence\"]=\"minecraft:dark_oak_fence\";MinecraftBlockTypes2[\"DarkOakFenceGate\"]=\"minecraft:dark_oak_fence_gate\";MinecraftBlockTypes2[\"DarkOakHangingSign\"]=\"minecraft:dark_oak_hanging_sign\";MinecraftBlockTypes2[\"DarkOakLeaves\"]=\"minecraft:dark_oak_leaves\";MinecraftBlockTypes2[\"DarkOakLog\"]=\"minecraft:dark_oak_log\";MinecraftBlockTypes2[\"DarkOakPlanks\"]=\"minecraft:dark_oak_planks\";MinecraftBlockTypes2[\"DarkOakPressurePlate\"]=\"minecraft:dark_oak_pressure_plate\";MinecraftBlockTypes2[\"DarkOakSapling\"]=\"minecraft:dark_oak_sapling\";MinecraftBlockTypes2[\"DarkOakSlab\"]=\"minecraft:dark_oak_slab\";MinecraftBlockTypes2[\"DarkOakStairs\"]=\"minecraft:dark_oak_stairs\";MinecraftBlockTypes2[\"DarkOakTrapdoor\"]=\"minecraft:dark_oak_trapdoor\";MinecraftBlockTypes2[\"DarkOakWood\"]=\"minecraft:dark_oak_wood\";MinecraftBlockTypes2[\"DarkPrismarineStairs\"]=\"minecraft:dark_prismarine_stairs\";MinecraftBlockTypes2[\"DarkoakStandingSign\"]=\"minecraft:darkoak_standing_sign\";MinecraftBlockTypes2[\"DarkoakWallSign\"]=\"minecraft:darkoak_wall_sign\";MinecraftBlockTypes2[\"DaylightDetector\"]=\"minecraft:daylight_detector\";MinecraftBlockTypes2[\"DaylightDetectorInverted\"]=\"minecraft:daylight_detector_inverted\";MinecraftBlockTypes2[\"DeadBrainCoral\"]=\"minecraft:dead_brain_coral\";MinecraftBlockTypes2[\"DeadBrainCoralBlock\"]=\"minecraft:dead_brain_coral_block\";MinecraftBlockTypes2[\"DeadBrainCoralFan\"]=\"minecraft:dead_brain_coral_fan\";MinecraftBlockTypes2[\"DeadBubbleCoral\"]=\"minecraft:dead_bubble_coral\";MinecraftBlockTypes2[\"DeadBubbleCoralBlock\"]=\"minecraft:dead_bubble_coral_block\";MinecraftBlockTypes2[\"DeadBubbleCoralFan\"]=\"minecraft:dead_bubble_coral_fan\";MinecraftBlockTypes2[\"DeadFireCoral\"]=\"minecraft:dead_fire_coral\";MinecraftBlockTypes2[\"DeadFireCoralBlock\"]=\"minecraft:dead_fire_coral_block\";MinecraftBlockTypes2[\"DeadFireCoralFan\"]=\"minecraft:dead_fire_coral_fan\";MinecraftBlockTypes2[\"DeadHornCoral\"]=\"minecraft:dead_horn_coral\";MinecraftBlockTypes2[\"DeadHornCoralBlock\"]=\"minecraft:dead_horn_coral_block\";MinecraftBlockTypes2[\"DeadHornCoralFan\"]=\"minecraft:dead_horn_coral_fan\";MinecraftBlockTypes2[\"DeadTubeCoral\"]=\"minecraft:dead_tube_coral\";MinecraftBlockTypes2[\"DeadTubeCoralBlock\"]=\"minecraft:dead_tube_coral_block\";MinecraftBlockTypes2[\"DeadTubeCoralFan\"]=\"minecraft:dead_tube_coral_fan\";MinecraftBlockTypes2[\"Deadbush\"]=\"minecraft:deadbush\";MinecraftBlockTypes2[\"DecoratedPot\"]=\"minecraft:decorated_pot\";MinecraftBlockTypes2[\"Deepslate\"]=\"minecraft:deepslate\";MinecraftBlockTypes2[\"DeepslateBrickDoubleSlab\"]=\"minecraft:deepslate_brick_double_slab\";MinecraftBlockTypes2[\"DeepslateBrickSlab\"]=\"minecraft:deepslate_brick_slab\";MinecraftBlockTypes2[\"DeepslateBrickStairs\"]=\"minecraft:deepslate_brick_stairs\";MinecraftBlockTypes2[\"DeepslateBrickWall\"]=\"minecraft:deepslate_brick_wall\";MinecraftBlockTypes2[\"DeepslateBricks\"]=\"minecraft:deepslate_bricks\";MinecraftBlockTypes2[\"DeepslateCoalOre\"]=\"minecraft:deepslate_coal_ore\";MinecraftBlockTypes2[\"DeepslateCopperOre\"]=\"minecraft:deepslate_copper_ore\";MinecraftBlockTypes2[\"DeepslateDiamondOre\"]=\"minecraft:deepslate_diamond_ore\";MinecraftBlockTypes2[\"DeepslateEmeraldOre\"]=\"minecraft:deepslate_emerald_ore\";MinecraftBlockTypes2[\"DeepslateGoldOre\"]=\"minecraft:deepslate_gold_ore\";MinecraftBlockTypes2[\"DeepslateIronOre\"]=\"minecraft:deepslate_iron_ore\";MinecraftBlockTypes2[\"DeepslateLapisOre\"]=\"minecraft:deepslate_lapis_ore\";MinecraftBlockTypes2[\"DeepslateRedstoneOre\"]=\"minecraft:deepslate_redstone_ore\";MinecraftBlockTypes2[\"DeepslateTileDoubleSlab\"]=\"minecraft:deepslate_tile_double_slab\";MinecraftBlockTypes2[\"DeepslateTileSlab\"]=\"minecraft:deepslate_tile_slab\";MinecraftBlockTypes2[\"DeepslateTileStairs\"]=\"minecraft:deepslate_tile_stairs\";MinecraftBlockTypes2[\"DeepslateTileWall\"]=\"minecraft:deepslate_tile_wall\";MinecraftBlockTypes2[\"DeepslateTiles\"]=\"minecraft:deepslate_tiles\";MinecraftBlockTypes2[\"Deny\"]=\"minecraft:deny\";MinecraftBlockTypes2[\"DetectorRail\"]=\"minecraft:detector_rail\";MinecraftBlockTypes2[\"DiamondBlock\"]=\"minecraft:diamond_block\";MinecraftBlockTypes2[\"DiamondOre\"]=\"minecraft:diamond_ore\";MinecraftBlockTypes2[\"Diorite\"]=\"minecraft:diorite\";MinecraftBlockTypes2[\"DioriteStairs\"]=\"minecraft:diorite_stairs\";MinecraftBlockTypes2[\"Dirt\"]=\"minecraft:dirt\";MinecraftBlockTypes2[\"DirtWithRoots\"]=\"minecraft:dirt_with_roots\";MinecraftBlockTypes2[\"Dispenser\"]=\"minecraft:dispenser\";MinecraftBlockTypes2[\"DoubleCutCopperSlab\"]=\"minecraft:double_cut_copper_slab\";MinecraftBlockTypes2[\"DoubleStoneBlockSlab\"]=\"minecraft:double_stone_block_slab\";MinecraftBlockTypes2[\"DoubleStoneBlockSlab2\"]=\"minecraft:double_stone_block_slab2\";MinecraftBlockTypes2[\"DoubleStoneBlockSlab3\"]=\"minecraft:double_stone_block_slab3\";MinecraftBlockTypes2[\"DoubleStoneBlockSlab4\"]=\"minecraft:double_stone_block_slab4\";MinecraftBlockTypes2[\"DragonEgg\"]=\"minecraft:dragon_egg\";MinecraftBlockTypes2[\"DriedKelpBlock\"]=\"minecraft:dried_kelp_block\";MinecraftBlockTypes2[\"DripstoneBlock\"]=\"minecraft:dripstone_block\";MinecraftBlockTypes2[\"Dropper\"]=\"minecraft:dropper\";MinecraftBlockTypes2[\"Element0\"]=\"minecraft:element_0\";MinecraftBlockTypes2[\"Element1\"]=\"minecraft:element_1\";MinecraftBlockTypes2[\"Element10\"]=\"minecraft:element_10\";MinecraftBlockTypes2[\"Element100\"]=\"minecraft:element_100\";MinecraftBlockTypes2[\"Element101\"]=\"minecraft:element_101\";MinecraftBlockTypes2[\"Element102\"]=\"minecraft:element_102\";MinecraftBlockTypes2[\"Element103\"]=\"minecraft:element_103\";MinecraftBlockTypes2[\"Element104\"]=\"minecraft:element_104\";MinecraftBlockTypes2[\"Element105\"]=\"minecraft:element_105\";MinecraftBlockTypes2[\"Element106\"]=\"minecraft:element_106\";MinecraftBlockTypes2[\"Element107\"]=\"minecraft:element_107\";MinecraftBlockTypes2[\"Element108\"]=\"minecraft:element_108\";MinecraftBlockTypes2[\"Element109\"]=\"minecraft:element_109\";MinecraftBlockTypes2[\"Element11\"]=\"minecraft:element_11\";MinecraftBlockTypes2[\"Element110\"]=\"minecraft:element_110\";MinecraftBlockTypes2[\"Element111\"]=\"minecraft:element_111\";MinecraftBlockTypes2[\"Element112\"]=\"minecraft:element_112\";MinecraftBlockTypes2[\"Element113\"]=\"minecraft:element_113\";MinecraftBlockTypes2[\"Element114\"]=\"minecraft:element_114\";MinecraftBlockTypes2[\"Element115\"]=\"minecraft:element_115\";MinecraftBlockTypes2[\"Element116\"]=\"minecraft:element_116\";MinecraftBlockTypes2[\"Element117\"]=\"minecraft:element_117\";MinecraftBlockTypes2[\"Element118\"]=\"minecraft:element_118\";MinecraftBlockTypes2[\"Element12\"]=\"minecraft:element_12\";MinecraftBlockTypes2[\"Element13\"]=\"minecraft:element_13\";MinecraftBlockTypes2[\"Element14\"]=\"minecraft:element_14\";MinecraftBlockTypes2[\"Element15\"]=\"minecraft:element_15\";MinecraftBlockTypes2[\"Element16\"]=\"minecraft:element_16\";MinecraftBlockTypes2[\"Element17\"]=\"minecraft:element_17\";MinecraftBlockTypes2[\"Element18\"]=\"minecraft:element_18\";MinecraftBlockTypes2[\"Element19\"]=\"minecraft:element_19\";MinecraftBlockTypes2[\"Element2\"]=\"minecraft:element_2\";MinecraftBlockTypes2[\"Element20\"]=\"minecraft:element_20\";MinecraftBlockTypes2[\"Element21\"]=\"minecraft:element_21\";MinecraftBlockTypes2[\"Element22\"]=\"minecraft:element_22\";MinecraftBlockTypes2[\"Element23\"]=\"minecraft:element_23\";MinecraftBlockTypes2[\"Element24\"]=\"minecraft:element_24\";MinecraftBlockTypes2[\"Element25\"]=\"minecraft:element_25\";MinecraftBlockTypes2[\"Element26\"]=\"minecraft:element_26\";MinecraftBlockTypes2[\"Element27\"]=\"minecraft:element_27\";MinecraftBlockTypes2[\"Element28\"]=\"minecraft:element_28\";MinecraftBlockTypes2[\"Element29\"]=\"minecraft:element_29\";MinecraftBlockTypes2[\"Element3\"]=\"minecraft:element_3\";MinecraftBlockTypes2[\"Element30\"]=\"minecraft:element_30\";MinecraftBlockTypes2[\"Element31\"]=\"minecraft:element_31\";MinecraftBlockTypes2[\"Element32\"]=\"minecraft:element_32\";MinecraftBlockTypes2[\"Element33\"]=\"minecraft:element_33\";MinecraftBlockTypes2[\"Element34\"]=\"minecraft:element_34\";MinecraftBlockTypes2[\"Element35\"]=\"minecraft:element_35\";MinecraftBlockTypes2[\"Element36\"]=\"minecraft:element_36\";MinecraftBlockTypes2[\"Element37\"]=\"minecraft:element_37\";MinecraftBlockTypes2[\"Element38\"]=\"minecraft:element_38\";MinecraftBlockTypes2[\"Element39\"]=\"minecraft:element_39\";MinecraftBlockTypes2[\"Element4\"]=\"minecraft:element_4\";MinecraftBlockTypes2[\"Element40\"]=\"minecraft:element_40\";MinecraftBlockTypes2[\"Element41\"]=\"minecraft:element_41\";MinecraftBlockTypes2[\"Element42\"]=\"minecraft:element_42\";MinecraftBlockTypes2[\"Element43\"]=\"minecraft:element_43\";MinecraftBlockTypes2[\"Element44\"]=\"minecraft:element_44\";MinecraftBlockTypes2[\"Element45\"]=\"minecraft:element_45\";MinecraftBlockTypes2[\"Element46\"]=\"minecraft:element_46\";MinecraftBlockTypes2[\"Element47\"]=\"minecraft:element_47\";MinecraftBlockTypes2[\"Element48\"]=\"minecraft:element_48\";MinecraftBlockTypes2[\"Element49\"]=\"minecraft:element_49\";MinecraftBlockTypes2[\"Element5\"]=\"minecraft:element_5\";MinecraftBlockTypes2[\"Element50\"]=\"minecraft:element_50\";MinecraftBlockTypes2[\"Element51\"]=\"minecraft:element_51\";MinecraftBlockTypes2[\"Element52\"]=\"minecraft:element_52\";MinecraftBlockTypes2[\"Element53\"]=\"minecraft:element_53\";MinecraftBlockTypes2[\"Element54\"]=\"minecraft:element_54\";MinecraftBlockTypes2[\"Element55\"]=\"minecraft:element_55\";MinecraftBlockTypes2[\"Element56\"]=\"minecraft:element_56\";MinecraftBlockTypes2[\"Element57\"]=\"minecraft:element_57\";MinecraftBlockTypes2[\"Element58\"]=\"minecraft:element_58\";MinecraftBlockTypes2[\"Element59\"]=\"minecraft:element_59\";MinecraftBlockTypes2[\"Element6\"]=\"minecraft:element_6\";MinecraftBlockTypes2[\"Element60\"]=\"minecraft:element_60\";MinecraftBlockTypes2[\"Element61\"]=\"minecraft:element_61\";MinecraftBlockTypes2[\"Element62\"]=\"minecraft:element_62\";MinecraftBlockTypes2[\"Element63\"]=\"minecraft:element_63\";MinecraftBlockTypes2[\"Element64\"]=\"minecraft:element_64\";MinecraftBlockTypes2[\"Element65\"]=\"minecraft:element_65\";MinecraftBlockTypes2[\"Element66\"]=\"minecraft:element_66\";MinecraftBlockTypes2[\"Element67\"]=\"minecraft:element_67\";MinecraftBlockTypes2[\"Element68\"]=\"minecraft:element_68\";MinecraftBlockTypes2[\"Element69\"]=\"minecraft:element_69\";MinecraftBlockTypes2[\"Element7\"]=\"minecraft:element_7\";MinecraftBlockTypes2[\"Element70\"]=\"minecraft:element_70\";MinecraftBlockTypes2[\"Element71\"]=\"minecraft:element_71\";MinecraftBlockTypes2[\"Element72\"]=\"minecraft:element_72\";MinecraftBlockTypes2[\"Element73\"]=\"minecraft:element_73\";MinecraftBlockTypes2[\"Element74\"]=\"minecraft:element_74\";MinecraftBlockTypes2[\"Element75\"]=\"minecraft:element_75\";MinecraftBlockTypes2[\"Element76\"]=\"minecraft:element_76\";MinecraftBlockTypes2[\"Element77\"]=\"minecraft:element_77\";MinecraftBlockTypes2[\"Element78\"]=\"minecraft:element_78\";MinecraftBlockTypes2[\"Element79\"]=\"minecraft:element_79\";MinecraftBlockTypes2[\"Element8\"]=\"minecraft:element_8\";MinecraftBlockTypes2[\"Element80\"]=\"minecraft:element_80\";MinecraftBlockTypes2[\"Element81\"]=\"minecraft:element_81\";MinecraftBlockTypes2[\"Element82\"]=\"minecraft:element_82\";MinecraftBlockTypes2[\"Element83\"]=\"minecraft:element_83\";MinecraftBlockTypes2[\"Element84\"]=\"minecraft:element_84\";MinecraftBlockTypes2[\"Element85\"]=\"minecraft:element_85\";MinecraftBlockTypes2[\"Element86\"]=\"minecraft:element_86\";MinecraftBlockTypes2[\"Element87\"]=\"minecraft:element_87\";MinecraftBlockTypes2[\"Element88\"]=\"minecraft:element_88\";MinecraftBlockTypes2[\"Element89\"]=\"minecraft:element_89\";MinecraftBlockTypes2[\"Element9\"]=\"minecraft:element_9\";MinecraftBlockTypes2[\"Element90\"]=\"minecraft:element_90\";MinecraftBlockTypes2[\"Element91\"]=\"minecraft:element_91\";MinecraftBlockTypes2[\"Element92\"]=\"minecraft:element_92\";MinecraftBlockTypes2[\"Element93\"]=\"minecraft:element_93\";MinecraftBlockTypes2[\"Element94\"]=\"minecraft:element_94\";MinecraftBlockTypes2[\"Element95\"]=\"minecraft:element_95\";MinecraftBlockTypes2[\"Element96\"]=\"minecraft:element_96\";MinecraftBlockTypes2[\"Element97\"]=\"minecraft:element_97\";MinecraftBlockTypes2[\"Element98\"]=\"minecraft:element_98\";MinecraftBlockTypes2[\"Element99\"]=\"minecraft:element_99\";MinecraftBlockTypes2[\"EmeraldBlock\"]=\"minecraft:emerald_block\";MinecraftBlockTypes2[\"EmeraldOre\"]=\"minecraft:emerald_ore\";MinecraftBlockTypes2[\"EnchantingTable\"]=\"minecraft:enchanting_table\";MinecraftBlockTypes2[\"EndBrickStairs\"]=\"minecraft:end_brick_stairs\";MinecraftBlockTypes2[\"EndBricks\"]=\"minecraft:end_bricks\";MinecraftBlockTypes2[\"EndGateway\"]=\"minecraft:end_gateway\";MinecraftBlockTypes2[\"EndPortal\"]=\"minecraft:end_portal\";MinecraftBlockTypes2[\"EndPortalFrame\"]=\"minecraft:end_portal_frame\";MinecraftBlockTypes2[\"EndRod\"]=\"minecraft:end_rod\";MinecraftBlockTypes2[\"EndStone\"]=\"minecraft:end_stone\";MinecraftBlockTypes2[\"EnderChest\"]=\"minecraft:ender_chest\";MinecraftBlockTypes2[\"ExposedChiseledCopper\"]=\"minecraft:exposed_chiseled_copper\";MinecraftBlockTypes2[\"ExposedCopper\"]=\"minecraft:exposed_copper\";MinecraftBlockTypes2[\"ExposedCopperBulb\"]=\"minecraft:exposed_copper_bulb\";MinecraftBlockTypes2[\"ExposedCopperDoor\"]=\"minecraft:exposed_copper_door\";MinecraftBlockTypes2[\"ExposedCopperGrate\"]=\"minecraft:exposed_copper_grate\";MinecraftBlockTypes2[\"ExposedCopperTrapdoor\"]=\"minecraft:exposed_copper_trapdoor\";MinecraftBlockTypes2[\"ExposedCutCopper\"]=\"minecraft:exposed_cut_copper\";MinecraftBlockTypes2[\"ExposedCutCopperSlab\"]=\"minecraft:exposed_cut_copper_slab\";MinecraftBlockTypes2[\"ExposedCutCopperStairs\"]=\"minecraft:exposed_cut_copper_stairs\";MinecraftBlockTypes2[\"ExposedDoubleCutCopperSlab\"]=\"minecraft:exposed_double_cut_copper_slab\";MinecraftBlockTypes2[\"Farmland\"]=\"minecraft:farmland\";MinecraftBlockTypes2[\"FenceGate\"]=\"minecraft:fence_gate\";MinecraftBlockTypes2[\"Fern\"]=\"minecraft:fern\";MinecraftBlockTypes2[\"Fire\"]=\"minecraft:fire\";MinecraftBlockTypes2[\"FireCoral\"]=\"minecraft:fire_coral\";MinecraftBlockTypes2[\"FireCoralBlock\"]=\"minecraft:fire_coral_block\";MinecraftBlockTypes2[\"FireCoralFan\"]=\"minecraft:fire_coral_fan\";MinecraftBlockTypes2[\"FletchingTable\"]=\"minecraft:fletching_table\";MinecraftBlockTypes2[\"FlowerPot\"]=\"minecraft:flower_pot\";MinecraftBlockTypes2[\"FloweringAzalea\"]=\"minecraft:flowering_azalea\";MinecraftBlockTypes2[\"FlowingLava\"]=\"minecraft:flowing_lava\";MinecraftBlockTypes2[\"FlowingWater\"]=\"minecraft:flowing_water\";MinecraftBlockTypes2[\"Frame\"]=\"minecraft:frame\";MinecraftBlockTypes2[\"FrogSpawn\"]=\"minecraft:frog_spawn\";MinecraftBlockTypes2[\"FrostedIce\"]=\"minecraft:frosted_ice\";MinecraftBlockTypes2[\"Furnace\"]=\"minecraft:furnace\";MinecraftBlockTypes2[\"GildedBlackstone\"]=\"minecraft:gilded_blackstone\";MinecraftBlockTypes2[\"Glass\"]=\"minecraft:glass\";MinecraftBlockTypes2[\"GlassPane\"]=\"minecraft:glass_pane\";MinecraftBlockTypes2[\"GlowFrame\"]=\"minecraft:glow_frame\";MinecraftBlockTypes2[\"GlowLichen\"]=\"minecraft:glow_lichen\";MinecraftBlockTypes2[\"Glowingobsidian\"]=\"minecraft:glowingobsidian\";MinecraftBlockTypes2[\"Glowstone\"]=\"minecraft:glowstone\";MinecraftBlockTypes2[\"GoldBlock\"]=\"minecraft:gold_block\";MinecraftBlockTypes2[\"GoldOre\"]=\"minecraft:gold_ore\";MinecraftBlockTypes2[\"GoldenRail\"]=\"minecraft:golden_rail\";MinecraftBlockTypes2[\"Granite\"]=\"minecraft:granite\";MinecraftBlockTypes2[\"GraniteStairs\"]=\"minecraft:granite_stairs\";MinecraftBlockTypes2[\"GrassBlock\"]=\"minecraft:grass_block\";MinecraftBlockTypes2[\"GrassPath\"]=\"minecraft:grass_path\";MinecraftBlockTypes2[\"Gravel\"]=\"minecraft:gravel\";MinecraftBlockTypes2[\"GrayCandle\"]=\"minecraft:gray_candle\";MinecraftBlockTypes2[\"GrayCandleCake\"]=\"minecraft:gray_candle_cake\";MinecraftBlockTypes2[\"GrayCarpet\"]=\"minecraft:gray_carpet\";MinecraftBlockTypes2[\"GrayConcrete\"]=\"minecraft:gray_concrete\";MinecraftBlockTypes2[\"GrayConcretePowder\"]=\"minecraft:gray_concrete_powder\";MinecraftBlockTypes2[\"GrayGlazedTerracotta\"]=\"minecraft:gray_glazed_terracotta\";MinecraftBlockTypes2[\"GrayShulkerBox\"]=\"minecraft:gray_shulker_box\";MinecraftBlockTypes2[\"GrayStainedGlass\"]=\"minecraft:gray_stained_glass\";MinecraftBlockTypes2[\"GrayStainedGlassPane\"]=\"minecraft:gray_stained_glass_pane\";MinecraftBlockTypes2[\"GrayTerracotta\"]=\"minecraft:gray_terracotta\";MinecraftBlockTypes2[\"GrayWool\"]=\"minecraft:gray_wool\";MinecraftBlockTypes2[\"GreenCandle\"]=\"minecraft:green_candle\";MinecraftBlockTypes2[\"GreenCandleCake\"]=\"minecraft:green_candle_cake\";MinecraftBlockTypes2[\"GreenCarpet\"]=\"minecraft:green_carpet\";MinecraftBlockTypes2[\"GreenConcrete\"]=\"minecraft:green_concrete\";MinecraftBlockTypes2[\"GreenConcretePowder\"]=\"minecraft:green_concrete_powder\";MinecraftBlockTypes2[\"GreenGlazedTerracotta\"]=\"minecraft:green_glazed_terracotta\";MinecraftBlockTypes2[\"GreenShulkerBox\"]=\"minecraft:green_shulker_box\";MinecraftBlockTypes2[\"GreenStainedGlass\"]=\"minecraft:green_stained_glass\";MinecraftBlockTypes2[\"GreenStainedGlassPane\"]=\"minecraft:green_stained_glass_pane\";MinecraftBlockTypes2[\"GreenTerracotta\"]=\"minecraft:green_terracotta\";MinecraftBlockTypes2[\"GreenWool\"]=\"minecraft:green_wool\";MinecraftBlockTypes2[\"Grindstone\"]=\"minecraft:grindstone\";MinecraftBlockTypes2[\"HangingRoots\"]=\"minecraft:hanging_roots\";MinecraftBlockTypes2[\"HardBlackStainedGlass\"]=\"minecraft:hard_black_stained_glass\";MinecraftBlockTypes2[\"HardBlackStainedGlassPane\"]=\"minecraft:hard_black_stained_glass_pane\";MinecraftBlockTypes2[\"HardBlueStainedGlass\"]=\"minecraft:hard_blue_stained_glass\";MinecraftBlockTypes2[\"HardBlueStainedGlassPane\"]=\"minecraft:hard_blue_stained_glass_pane\";MinecraftBlockTypes2[\"HardBrownStainedGlass\"]=\"minecraft:hard_brown_stained_glass\";MinecraftBlockTypes2[\"HardBrownStainedGlassPane\"]=\"minecraft:hard_brown_stained_glass_pane\";MinecraftBlockTypes2[\"HardCyanStainedGlass\"]=\"minecraft:hard_cyan_stained_glass\";MinecraftBlockTypes2[\"HardCyanStainedGlassPane\"]=\"minecraft:hard_cyan_stained_glass_pane\";MinecraftBlockTypes2[\"HardGlass\"]=\"minecraft:hard_glass\";MinecraftBlockTypes2[\"HardGlassPane\"]=\"minecraft:hard_glass_pane\";MinecraftBlockTypes2[\"HardGrayStainedGlass\"]=\"minecraft:hard_gray_stained_glass\";MinecraftBlockTypes2[\"HardGrayStainedGlassPane\"]=\"minecraft:hard_gray_stained_glass_pane\";MinecraftBlockTypes2[\"HardGreenStainedGlass\"]=\"minecraft:hard_green_stained_glass\";MinecraftBlockTypes2[\"HardGreenStainedGlassPane\"]=\"minecraft:hard_green_stained_glass_pane\";MinecraftBlockTypes2[\"HardLightBlueStainedGlass\"]=\"minecraft:hard_light_blue_stained_glass\";MinecraftBlockTypes2[\"HardLightBlueStainedGlassPane\"]=\"minecraft:hard_light_blue_stained_glass_pane\";MinecraftBlockTypes2[\"HardLightGrayStainedGlass\"]=\"minecraft:hard_light_gray_stained_glass\";MinecraftBlockTypes2[\"HardLightGrayStainedGlassPane\"]=\"minecraft:hard_light_gray_stained_glass_pane\";MinecraftBlockTypes2[\"HardLimeStainedGlass\"]=\"minecraft:hard_lime_stained_glass\";MinecraftBlockTypes2[\"HardLimeStainedGlassPane\"]=\"minecraft:hard_lime_stained_glass_pane\";MinecraftBlockTypes2[\"HardMagentaStainedGlass\"]=\"minecraft:hard_magenta_stained_glass\";MinecraftBlockTypes2[\"HardMagentaStainedGlassPane\"]=\"minecraft:hard_magenta_stained_glass_pane\";MinecraftBlockTypes2[\"HardOrangeStainedGlass\"]=\"minecraft:hard_orange_stained_glass\";MinecraftBlockTypes2[\"HardOrangeStainedGlassPane\"]=\"minecraft:hard_orange_stained_glass_pane\";MinecraftBlockTypes2[\"HardPinkStainedGlass\"]=\"minecraft:hard_pink_stained_glass\";MinecraftBlockTypes2[\"HardPinkStainedGlassPane\"]=\"minecraft:hard_pink_stained_glass_pane\";MinecraftBlockTypes2[\"HardPurpleStainedGlass\"]=\"minecraft:hard_purple_stained_glass\";MinecraftBlockTypes2[\"HardPurpleStainedGlassPane\"]=\"minecraft:hard_purple_stained_glass_pane\";MinecraftBlockTypes2[\"HardRedStainedGlass\"]=\"minecraft:hard_red_stained_glass\";MinecraftBlockTypes2[\"HardRedStainedGlassPane\"]=\"minecraft:hard_red_stained_glass_pane\";MinecraftBlockTypes2[\"HardWhiteStainedGlass\"]=\"minecraft:hard_white_stained_glass\";MinecraftBlockTypes2[\"HardWhiteStainedGlassPane\"]=\"minecraft:hard_white_stained_glass_pane\";MinecraftBlockTypes2[\"HardYellowStainedGlass\"]=\"minecraft:hard_yellow_stained_glass\";MinecraftBlockTypes2[\"HardYellowStainedGlassPane\"]=\"minecraft:hard_yellow_stained_glass_pane\";MinecraftBlockTypes2[\"HardenedClay\"]=\"minecraft:hardened_clay\";MinecraftBlockTypes2[\"HayBlock\"]=\"minecraft:hay_block\";MinecraftBlockTypes2[\"HeavyCore\"]=\"minecraft:heavy_core\";MinecraftBlockTypes2[\"HeavyWeightedPressurePlate\"]=\"minecraft:heavy_weighted_pressure_plate\";MinecraftBlockTypes2[\"HoneyBlock\"]=\"minecraft:honey_block\";MinecraftBlockTypes2[\"HoneycombBlock\"]=\"minecraft:honeycomb_block\";MinecraftBlockTypes2[\"Hopper\"]=\"minecraft:hopper\";MinecraftBlockTypes2[\"HornCoral\"]=\"minecraft:horn_coral\";MinecraftBlockTypes2[\"HornCoralBlock\"]=\"minecraft:horn_coral_block\";MinecraftBlockTypes2[\"HornCoralFan\"]=\"minecraft:horn_coral_fan\";MinecraftBlockTypes2[\"Ice\"]=\"minecraft:ice\";MinecraftBlockTypes2[\"InfestedDeepslate\"]=\"minecraft:infested_deepslate\";MinecraftBlockTypes2[\"InfoUpdate\"]=\"minecraft:info_update\";MinecraftBlockTypes2[\"InfoUpdate2\"]=\"minecraft:info_update2\";MinecraftBlockTypes2[\"InvisibleBedrock\"]=\"minecraft:invisible_bedrock\";MinecraftBlockTypes2[\"IronBars\"]=\"minecraft:iron_bars\";MinecraftBlockTypes2[\"IronBlock\"]=\"minecraft:iron_block\";MinecraftBlockTypes2[\"IronDoor\"]=\"minecraft:iron_door\";MinecraftBlockTypes2[\"IronOre\"]=\"minecraft:iron_ore\";MinecraftBlockTypes2[\"IronTrapdoor\"]=\"minecraft:iron_trapdoor\";MinecraftBlockTypes2[\"Jigsaw\"]=\"minecraft:jigsaw\";MinecraftBlockTypes2[\"Jukebox\"]=\"minecraft:jukebox\";MinecraftBlockTypes2[\"JungleButton\"]=\"minecraft:jungle_button\";MinecraftBlockTypes2[\"JungleDoor\"]=\"minecraft:jungle_door\";MinecraftBlockTypes2[\"JungleDoubleSlab\"]=\"minecraft:jungle_double_slab\";MinecraftBlockTypes2[\"JungleFence\"]=\"minecraft:jungle_fence\";MinecraftBlockTypes2[\"JungleFenceGate\"]=\"minecraft:jungle_fence_gate\";MinecraftBlockTypes2[\"JungleHangingSign\"]=\"minecraft:jungle_hanging_sign\";MinecraftBlockTypes2[\"JungleLeaves\"]=\"minecraft:jungle_leaves\";MinecraftBlockTypes2[\"JungleLog\"]=\"minecraft:jungle_log\";MinecraftBlockTypes2[\"JunglePlanks\"]=\"minecraft:jungle_planks\";MinecraftBlockTypes2[\"JunglePressurePlate\"]=\"minecraft:jungle_pressure_plate\";MinecraftBlockTypes2[\"JungleSapling\"]=\"minecraft:jungle_sapling\";MinecraftBlockTypes2[\"JungleSlab\"]=\"minecraft:jungle_slab\";MinecraftBlockTypes2[\"JungleStairs\"]=\"minecraft:jungle_stairs\";MinecraftBlockTypes2[\"JungleStandingSign\"]=\"minecraft:jungle_standing_sign\";MinecraftBlockTypes2[\"JungleTrapdoor\"]=\"minecraft:jungle_trapdoor\";MinecraftBlockTypes2[\"JungleWallSign\"]=\"minecraft:jungle_wall_sign\";MinecraftBlockTypes2[\"JungleWood\"]=\"minecraft:jungle_wood\";MinecraftBlockTypes2[\"Kelp\"]=\"minecraft:kelp\";MinecraftBlockTypes2[\"Ladder\"]=\"minecraft:ladder\";MinecraftBlockTypes2[\"Lantern\"]=\"minecraft:lantern\";MinecraftBlockTypes2[\"LapisBlock\"]=\"minecraft:lapis_block\";MinecraftBlockTypes2[\"LapisOre\"]=\"minecraft:lapis_ore\";MinecraftBlockTypes2[\"LargeAmethystBud\"]=\"minecraft:large_amethyst_bud\";MinecraftBlockTypes2[\"LargeFern\"]=\"minecraft:large_fern\";MinecraftBlockTypes2[\"Lava\"]=\"minecraft:lava\";MinecraftBlockTypes2[\"Lectern\"]=\"minecraft:lectern\";MinecraftBlockTypes2[\"Lever\"]=\"minecraft:lever\";MinecraftBlockTypes2[\"LightBlock\"]=\"minecraft:light_block\";MinecraftBlockTypes2[\"LightBlueCandle\"]=\"minecraft:light_blue_candle\";MinecraftBlockTypes2[\"LightBlueCandleCake\"]=\"minecraft:light_blue_candle_cake\";MinecraftBlockTypes2[\"LightBlueCarpet\"]=\"minecraft:light_blue_carpet\";MinecraftBlockTypes2[\"LightBlueConcrete\"]=\"minecraft:light_blue_concrete\";MinecraftBlockTypes2[\"LightBlueConcretePowder\"]=\"minecraft:light_blue_concrete_powder\";MinecraftBlockTypes2[\"LightBlueGlazedTerracotta\"]=\"minecraft:light_blue_glazed_terracotta\";MinecraftBlockTypes2[\"LightBlueShulkerBox\"]=\"minecraft:light_blue_shulker_box\";MinecraftBlockTypes2[\"LightBlueStainedGlass\"]=\"minecraft:light_blue_stained_glass\";MinecraftBlockTypes2[\"LightBlueStainedGlassPane\"]=\"minecraft:light_blue_stained_glass_pane\";MinecraftBlockTypes2[\"LightBlueTerracotta\"]=\"minecraft:light_blue_terracotta\";MinecraftBlockTypes2[\"LightBlueWool\"]=\"minecraft:light_blue_wool\";MinecraftBlockTypes2[\"LightGrayCandle\"]=\"minecraft:light_gray_candle\";MinecraftBlockTypes2[\"LightGrayCandleCake\"]=\"minecraft:light_gray_candle_cake\";MinecraftBlockTypes2[\"LightGrayCarpet\"]=\"minecraft:light_gray_carpet\";MinecraftBlockTypes2[\"LightGrayConcrete\"]=\"minecraft:light_gray_concrete\";MinecraftBlockTypes2[\"LightGrayConcretePowder\"]=\"minecraft:light_gray_concrete_powder\";MinecraftBlockTypes2[\"LightGrayShulkerBox\"]=\"minecraft:light_gray_shulker_box\";MinecraftBlockTypes2[\"LightGrayStainedGlass\"]=\"minecraft:light_gray_stained_glass\";MinecraftBlockTypes2[\"LightGrayStainedGlassPane\"]=\"minecraft:light_gray_stained_glass_pane\";MinecraftBlockTypes2[\"LightGrayTerracotta\"]=\"minecraft:light_gray_terracotta\";MinecraftBlockTypes2[\"LightGrayWool\"]=\"minecraft:light_gray_wool\";MinecraftBlockTypes2[\"LightWeightedPressurePlate\"]=\"minecraft:light_weighted_pressure_plate\";MinecraftBlockTypes2[\"LightningRod\"]=\"minecraft:lightning_rod\";MinecraftBlockTypes2[\"Lilac\"]=\"minecraft:lilac\";MinecraftBlockTypes2[\"LilyOfTheValley\"]=\"minecraft:lily_of_the_valley\";MinecraftBlockTypes2[\"LimeCandle\"]=\"minecraft:lime_candle\";MinecraftBlockTypes2[\"LimeCandleCake\"]=\"minecraft:lime_candle_cake\";MinecraftBlockTypes2[\"LimeCarpet\"]=\"minecraft:lime_carpet\";MinecraftBlockTypes2[\"LimeConcrete\"]=\"minecraft:lime_concrete\";MinecraftBlockTypes2[\"LimeConcretePowder\"]=\"minecraft:lime_concrete_powder\";MinecraftBlockTypes2[\"LimeGlazedTerracotta\"]=\"minecraft:lime_glazed_terracotta\";MinecraftBlockTypes2[\"LimeShulkerBox\"]=\"minecraft:lime_shulker_box\";MinecraftBlockTypes2[\"LimeStainedGlass\"]=\"minecraft:lime_stained_glass\";MinecraftBlockTypes2[\"LimeStainedGlassPane\"]=\"minecraft:lime_stained_glass_pane\";MinecraftBlockTypes2[\"LimeTerracotta\"]=\"minecraft:lime_terracotta\";MinecraftBlockTypes2[\"LimeWool\"]=\"minecraft:lime_wool\";MinecraftBlockTypes2[\"LitBlastFurnace\"]=\"minecraft:lit_blast_furnace\";MinecraftBlockTypes2[\"LitDeepslateRedstoneOre\"]=\"minecraft:lit_deepslate_redstone_ore\";MinecraftBlockTypes2[\"LitFurnace\"]=\"minecraft:lit_furnace\";MinecraftBlockTypes2[\"LitPumpkin\"]=\"minecraft:lit_pumpkin\";MinecraftBlockTypes2[\"LitRedstoneLamp\"]=\"minecraft:lit_redstone_lamp\";MinecraftBlockTypes2[\"LitRedstoneOre\"]=\"minecraft:lit_redstone_ore\";MinecraftBlockTypes2[\"LitSmoker\"]=\"minecraft:lit_smoker\";MinecraftBlockTypes2[\"Lodestone\"]=\"minecraft:lodestone\";MinecraftBlockTypes2[\"Loom\"]=\"minecraft:loom\";MinecraftBlockTypes2[\"MagentaCandle\"]=\"minecraft:magenta_candle\";MinecraftBlockTypes2[\"MagentaCandleCake\"]=\"minecraft:magenta_candle_cake\";MinecraftBlockTypes2[\"MagentaCarpet\"]=\"minecraft:magenta_carpet\";MinecraftBlockTypes2[\"MagentaConcrete\"]=\"minecraft:magenta_concrete\";MinecraftBlockTypes2[\"MagentaConcretePowder\"]=\"minecraft:magenta_concrete_powder\";MinecraftBlockTypes2[\"MagentaGlazedTerracotta\"]=\"minecraft:magenta_glazed_terracotta\";MinecraftBlockTypes2[\"MagentaShulkerBox\"]=\"minecraft:magenta_shulker_box\";MinecraftBlockTypes2[\"MagentaStainedGlass\"]=\"minecraft:magenta_stained_glass\";MinecraftBlockTypes2[\"MagentaStainedGlassPane\"]=\"minecraft:magenta_stained_glass_pane\";MinecraftBlockTypes2[\"MagentaTerracotta\"]=\"minecraft:magenta_terracotta\";MinecraftBlockTypes2[\"MagentaWool\"]=\"minecraft:magenta_wool\";MinecraftBlockTypes2[\"Magma\"]=\"minecraft:magma\";MinecraftBlockTypes2[\"MangroveButton\"]=\"minecraft:mangrove_button\";MinecraftBlockTypes2[\"MangroveDoor\"]=\"minecraft:mangrove_door\";MinecraftBlockTypes2[\"MangroveDoubleSlab\"]=\"minecraft:mangrove_double_slab\";MinecraftBlockTypes2[\"MangroveFence\"]=\"minecraft:mangrove_fence\";MinecraftBlockTypes2[\"MangroveFenceGate\"]=\"minecraft:mangrove_fence_gate\";MinecraftBlockTypes2[\"MangroveHangingSign\"]=\"minecraft:mangrove_hanging_sign\";MinecraftBlockTypes2[\"MangroveLeaves\"]=\"minecraft:mangrove_leaves\";MinecraftBlockTypes2[\"MangroveLog\"]=\"minecraft:mangrove_log\";MinecraftBlockTypes2[\"MangrovePlanks\"]=\"minecraft:mangrove_planks\";MinecraftBlockTypes2[\"MangrovePressurePlate\"]=\"minecraft:mangrove_pressure_plate\";MinecraftBlockTypes2[\"MangrovePropagule\"]=\"minecraft:mangrove_propagule\";MinecraftBlockTypes2[\"MangroveRoots\"]=\"minecraft:mangrove_roots\";MinecraftBlockTypes2[\"MangroveSlab\"]=\"minecraft:mangrove_slab\";MinecraftBlockTypes2[\"MangroveStairs\"]=\"minecraft:mangrove_stairs\";MinecraftBlockTypes2[\"MangroveStandingSign\"]=\"minecraft:mangrove_standing_sign\";MinecraftBlockTypes2[\"MangroveTrapdoor\"]=\"minecraft:mangrove_trapdoor\";MinecraftBlockTypes2[\"MangroveWallSign\"]=\"minecraft:mangrove_wall_sign\";MinecraftBlockTypes2[\"MangroveWood\"]=\"minecraft:mangrove_wood\";MinecraftBlockTypes2[\"MediumAmethystBud\"]=\"minecraft:medium_amethyst_bud\";MinecraftBlockTypes2[\"MelonBlock\"]=\"minecraft:melon_block\";MinecraftBlockTypes2[\"MelonStem\"]=\"minecraft:melon_stem\";MinecraftBlockTypes2[\"MobSpawner\"]=\"minecraft:mob_spawner\";MinecraftBlockTypes2[\"MonsterEgg\"]=\"minecraft:monster_egg\";MinecraftBlockTypes2[\"MossBlock\"]=\"minecraft:moss_block\";MinecraftBlockTypes2[\"MossCarpet\"]=\"minecraft:moss_carpet\";MinecraftBlockTypes2[\"MossyCobblestone\"]=\"minecraft:mossy_cobblestone\";MinecraftBlockTypes2[\"MossyCobblestoneStairs\"]=\"minecraft:mossy_cobblestone_stairs\";MinecraftBlockTypes2[\"MossyStoneBrickStairs\"]=\"minecraft:mossy_stone_brick_stairs\";MinecraftBlockTypes2[\"MovingBlock\"]=\"minecraft:moving_block\";MinecraftBlockTypes2[\"Mud\"]=\"minecraft:mud\";MinecraftBlockTypes2[\"MudBrickDoubleSlab\"]=\"minecraft:mud_brick_double_slab\";MinecraftBlockTypes2[\"MudBrickSlab\"]=\"minecraft:mud_brick_slab\";MinecraftBlockTypes2[\"MudBrickStairs\"]=\"minecraft:mud_brick_stairs\";MinecraftBlockTypes2[\"MudBrickWall\"]=\"minecraft:mud_brick_wall\";MinecraftBlockTypes2[\"MudBricks\"]=\"minecraft:mud_bricks\";MinecraftBlockTypes2[\"MuddyMangroveRoots\"]=\"minecraft:muddy_mangrove_roots\";MinecraftBlockTypes2[\"Mycelium\"]=\"minecraft:mycelium\";MinecraftBlockTypes2[\"NetherBrick\"]=\"minecraft:nether_brick\";MinecraftBlockTypes2[\"NetherBrickFence\"]=\"minecraft:nether_brick_fence\";MinecraftBlockTypes2[\"NetherBrickSlab\"]=\"minecraft:nether_brick_slab\";MinecraftBlockTypes2[\"NetherBrickStairs\"]=\"minecraft:nether_brick_stairs\";MinecraftBlockTypes2[\"NetherGoldOre\"]=\"minecraft:nether_gold_ore\";MinecraftBlockTypes2[\"NetherSprouts\"]=\"minecraft:nether_sprouts\";MinecraftBlockTypes2[\"NetherWart\"]=\"minecraft:nether_wart\";MinecraftBlockTypes2[\"NetherWartBlock\"]=\"minecraft:nether_wart_block\";MinecraftBlockTypes2[\"NetheriteBlock\"]=\"minecraft:netherite_block\";MinecraftBlockTypes2[\"Netherrack\"]=\"minecraft:netherrack\";MinecraftBlockTypes2[\"Netherreactor\"]=\"minecraft:netherreactor\";MinecraftBlockTypes2[\"NormalStoneStairs\"]=\"minecraft:normal_stone_stairs\";MinecraftBlockTypes2[\"Noteblock\"]=\"minecraft:noteblock\";MinecraftBlockTypes2[\"OakDoubleSlab\"]=\"minecraft:oak_double_slab\";MinecraftBlockTypes2[\"OakFence\"]=\"minecraft:oak_fence\";MinecraftBlockTypes2[\"OakHangingSign\"]=\"minecraft:oak_hanging_sign\";MinecraftBlockTypes2[\"OakLeaves\"]=\"minecraft:oak_leaves\";MinecraftBlockTypes2[\"OakLog\"]=\"minecraft:oak_log\";MinecraftBlockTypes2[\"OakPlanks\"]=\"minecraft:oak_planks\";MinecraftBlockTypes2[\"OakSapling\"]=\"minecraft:oak_sapling\";MinecraftBlockTypes2[\"OakSlab\"]=\"minecraft:oak_slab\";MinecraftBlockTypes2[\"OakStairs\"]=\"minecraft:oak_stairs\";MinecraftBlockTypes2[\"OakWood\"]=\"minecraft:oak_wood\";MinecraftBlockTypes2[\"Observer\"]=\"minecraft:observer\";MinecraftBlockTypes2[\"Obsidian\"]=\"minecraft:obsidian\";MinecraftBlockTypes2[\"OchreFroglight\"]=\"minecraft:ochre_froglight\";MinecraftBlockTypes2[\"OrangeCandle\"]=\"minecraft:orange_candle\";MinecraftBlockTypes2[\"OrangeCandleCake\"]=\"minecraft:orange_candle_cake\";MinecraftBlockTypes2[\"OrangeCarpet\"]=\"minecraft:orange_carpet\";MinecraftBlockTypes2[\"OrangeConcrete\"]=\"minecraft:orange_concrete\";MinecraftBlockTypes2[\"OrangeConcretePowder\"]=\"minecraft:orange_concrete_powder\";MinecraftBlockTypes2[\"OrangeGlazedTerracotta\"]=\"minecraft:orange_glazed_terracotta\";MinecraftBlockTypes2[\"OrangeShulkerBox\"]=\"minecraft:orange_shulker_box\";MinecraftBlockTypes2[\"OrangeStainedGlass\"]=\"minecraft:orange_stained_glass\";MinecraftBlockTypes2[\"OrangeStainedGlassPane\"]=\"minecraft:orange_stained_glass_pane\";MinecraftBlockTypes2[\"OrangeTerracotta\"]=\"minecraft:orange_terracotta\";MinecraftBlockTypes2[\"OrangeTulip\"]=\"minecraft:orange_tulip\";MinecraftBlockTypes2[\"OrangeWool\"]=\"minecraft:orange_wool\";MinecraftBlockTypes2[\"OxeyeDaisy\"]=\"minecraft:oxeye_daisy\";MinecraftBlockTypes2[\"OxidizedChiseledCopper\"]=\"minecraft:oxidized_chiseled_copper\";MinecraftBlockTypes2[\"OxidizedCopper\"]=\"minecraft:oxidized_copper\";MinecraftBlockTypes2[\"OxidizedCopperBulb\"]=\"minecraft:oxidized_copper_bulb\";MinecraftBlockTypes2[\"OxidizedCopperDoor\"]=\"minecraft:oxidized_copper_door\";MinecraftBlockTypes2[\"OxidizedCopperGrate\"]=\"minecraft:oxidized_copper_grate\";MinecraftBlockTypes2[\"OxidizedCopperTrapdoor\"]=\"minecraft:oxidized_copper_trapdoor\";MinecraftBlockTypes2[\"OxidizedCutCopper\"]=\"minecraft:oxidized_cut_copper\";MinecraftBlockTypes2[\"OxidizedCutCopperSlab\"]=\"minecraft:oxidized_cut_copper_slab\";MinecraftBlockTypes2[\"OxidizedCutCopperStairs\"]=\"minecraft:oxidized_cut_copper_stairs\";MinecraftBlockTypes2[\"OxidizedDoubleCutCopperSlab\"]=\"minecraft:oxidized_double_cut_copper_slab\";MinecraftBlockTypes2[\"PackedIce\"]=\"minecraft:packed_ice\";MinecraftBlockTypes2[\"PackedMud\"]=\"minecraft:packed_mud\";MinecraftBlockTypes2[\"PearlescentFroglight\"]=\"minecraft:pearlescent_froglight\";MinecraftBlockTypes2[\"Peony\"]=\"minecraft:peony\";MinecraftBlockTypes2[\"PetrifiedOakSlab\"]=\"minecraft:petrified_oak_slab\";MinecraftBlockTypes2[\"PinkCandle\"]=\"minecraft:pink_candle\";MinecraftBlockTypes2[\"PinkCandleCake\"]=\"minecraft:pink_candle_cake\";MinecraftBlockTypes2[\"PinkCarpet\"]=\"minecraft:pink_carpet\";MinecraftBlockTypes2[\"PinkConcrete\"]=\"minecraft:pink_concrete\";MinecraftBlockTypes2[\"PinkConcretePowder\"]=\"minecraft:pink_concrete_powder\";MinecraftBlockTypes2[\"PinkGlazedTerracotta\"]=\"minecraft:pink_glazed_terracotta\";MinecraftBlockTypes2[\"PinkPetals\"]=\"minecraft:pink_petals\";MinecraftBlockTypes2[\"PinkShulkerBox\"]=\"minecraft:pink_shulker_box\";MinecraftBlockTypes2[\"PinkStainedGlass\"]=\"minecraft:pink_stained_glass\";MinecraftBlockTypes2[\"PinkStainedGlassPane\"]=\"minecraft:pink_stained_glass_pane\";MinecraftBlockTypes2[\"PinkTerracotta\"]=\"minecraft:pink_terracotta\";MinecraftBlockTypes2[\"PinkTulip\"]=\"minecraft:pink_tulip\";MinecraftBlockTypes2[\"PinkWool\"]=\"minecraft:pink_wool\";MinecraftBlockTypes2[\"Piston\"]=\"minecraft:piston\";MinecraftBlockTypes2[\"PistonArmCollision\"]=\"minecraft:piston_arm_collision\";MinecraftBlockTypes2[\"PitcherCrop\"]=\"minecraft:pitcher_crop\";MinecraftBlockTypes2[\"PitcherPlant\"]=\"minecraft:pitcher_plant\";MinecraftBlockTypes2[\"Podzol\"]=\"minecraft:podzol\";MinecraftBlockTypes2[\"PointedDripstone\"]=\"minecraft:pointed_dripstone\";MinecraftBlockTypes2[\"PolishedAndesite\"]=\"minecraft:polished_andesite\";MinecraftBlockTypes2[\"PolishedAndesiteStairs\"]=\"minecraft:polished_andesite_stairs\";MinecraftBlockTypes2[\"PolishedBasalt\"]=\"minecraft:polished_basalt\";MinecraftBlockTypes2[\"PolishedBlackstone\"]=\"minecraft:polished_blackstone\";MinecraftBlockTypes2[\"PolishedBlackstoneBrickDoubleSlab\"]=\"minecraft:polished_blackstone_brick_double_slab\";MinecraftBlockTypes2[\"PolishedBlackstoneBrickSlab\"]=\"minecraft:polished_blackstone_brick_slab\";MinecraftBlockTypes2[\"PolishedBlackstoneBrickStairs\"]=\"minecraft:polished_blackstone_brick_stairs\";MinecraftBlockTypes2[\"PolishedBlackstoneBrickWall\"]=\"minecraft:polished_blackstone_brick_wall\";MinecraftBlockTypes2[\"PolishedBlackstoneBricks\"]=\"minecraft:polished_blackstone_bricks\";MinecraftBlockTypes2[\"PolishedBlackstoneButton\"]=\"minecraft:polished_blackstone_button\";MinecraftBlockTypes2[\"PolishedBlackstoneDoubleSlab\"]=\"minecraft:polished_blackstone_double_slab\";MinecraftBlockTypes2[\"PolishedBlackstonePressurePlate\"]=\"minecraft:polished_blackstone_pressure_plate\";MinecraftBlockTypes2[\"PolishedBlackstoneSlab\"]=\"minecraft:polished_blackstone_slab\";MinecraftBlockTypes2[\"PolishedBlackstoneStairs\"]=\"minecraft:polished_blackstone_stairs\";MinecraftBlockTypes2[\"PolishedBlackstoneWall\"]=\"minecraft:polished_blackstone_wall\";MinecraftBlockTypes2[\"PolishedDeepslate\"]=\"minecraft:polished_deepslate\";MinecraftBlockTypes2[\"PolishedDeepslateDoubleSlab\"]=\"minecraft:polished_deepslate_double_slab\";MinecraftBlockTypes2[\"PolishedDeepslateSlab\"]=\"minecraft:polished_deepslate_slab\";MinecraftBlockTypes2[\"PolishedDeepslateStairs\"]=\"minecraft:polished_deepslate_stairs\";MinecraftBlockTypes2[\"PolishedDeepslateWall\"]=\"minecraft:polished_deepslate_wall\";MinecraftBlockTypes2[\"PolishedDiorite\"]=\"minecraft:polished_diorite\";MinecraftBlockTypes2[\"PolishedDioriteStairs\"]=\"minecraft:polished_diorite_stairs\";MinecraftBlockTypes2[\"PolishedGranite\"]=\"minecraft:polished_granite\";MinecraftBlockTypes2[\"PolishedGraniteStairs\"]=\"minecraft:polished_granite_stairs\";MinecraftBlockTypes2[\"PolishedTuff\"]=\"minecraft:polished_tuff\";MinecraftBlockTypes2[\"PolishedTuffDoubleSlab\"]=\"minecraft:polished_tuff_double_slab\";MinecraftBlockTypes2[\"PolishedTuffSlab\"]=\"minecraft:polished_tuff_slab\";MinecraftBlockTypes2[\"PolishedTuffStairs\"]=\"minecraft:polished_tuff_stairs\";MinecraftBlockTypes2[\"PolishedTuffWall\"]=\"minecraft:polished_tuff_wall\";MinecraftBlockTypes2[\"Poppy\"]=\"minecraft:poppy\";MinecraftBlockTypes2[\"Portal\"]=\"minecraft:portal\";MinecraftBlockTypes2[\"Potatoes\"]=\"minecraft:potatoes\";MinecraftBlockTypes2[\"PowderSnow\"]=\"minecraft:powder_snow\";MinecraftBlockTypes2[\"PoweredComparator\"]=\"minecraft:powered_comparator\";MinecraftBlockTypes2[\"PoweredRepeater\"]=\"minecraft:powered_repeater\";MinecraftBlockTypes2[\"Prismarine\"]=\"minecraft:prismarine\";MinecraftBlockTypes2[\"PrismarineBricksStairs\"]=\"minecraft:prismarine_bricks_stairs\";MinecraftBlockTypes2[\"PrismarineStairs\"]=\"minecraft:prismarine_stairs\";MinecraftBlockTypes2[\"Pumpkin\"]=\"minecraft:pumpkin\";MinecraftBlockTypes2[\"PumpkinStem\"]=\"minecraft:pumpkin_stem\";MinecraftBlockTypes2[\"PurpleCandle\"]=\"minecraft:purple_candle\";MinecraftBlockTypes2[\"PurpleCandleCake\"]=\"minecraft:purple_candle_cake\";MinecraftBlockTypes2[\"PurpleCarpet\"]=\"minecraft:purple_carpet\";MinecraftBlockTypes2[\"PurpleConcrete\"]=\"minecraft:purple_concrete\";MinecraftBlockTypes2[\"PurpleConcretePowder\"]=\"minecraft:purple_concrete_powder\";MinecraftBlockTypes2[\"PurpleGlazedTerracotta\"]=\"minecraft:purple_glazed_terracotta\";MinecraftBlockTypes2[\"PurpleShulkerBox\"]=\"minecraft:purple_shulker_box\";MinecraftBlockTypes2[\"PurpleStainedGlass\"]=\"minecraft:purple_stained_glass\";MinecraftBlockTypes2[\"PurpleStainedGlassPane\"]=\"minecraft:purple_stained_glass_pane\";MinecraftBlockTypes2[\"PurpleTerracotta\"]=\"minecraft:purple_terracotta\";MinecraftBlockTypes2[\"PurpleWool\"]=\"minecraft:purple_wool\";MinecraftBlockTypes2[\"PurpurBlock\"]=\"minecraft:purpur_block\";MinecraftBlockTypes2[\"PurpurStairs\"]=\"minecraft:purpur_stairs\";MinecraftBlockTypes2[\"QuartzBlock\"]=\"minecraft:quartz_block\";MinecraftBlockTypes2[\"QuartzBricks\"]=\"minecraft:quartz_bricks\";MinecraftBlockTypes2[\"QuartzOre\"]=\"minecraft:quartz_ore\";MinecraftBlockTypes2[\"QuartzSlab\"]=\"minecraft:quartz_slab\";MinecraftBlockTypes2[\"QuartzStairs\"]=\"minecraft:quartz_stairs\";MinecraftBlockTypes2[\"Rail\"]=\"minecraft:rail\";MinecraftBlockTypes2[\"RawCopperBlock\"]=\"minecraft:raw_copper_block\";MinecraftBlockTypes2[\"RawGoldBlock\"]=\"minecraft:raw_gold_block\";MinecraftBlockTypes2[\"RawIronBlock\"]=\"minecraft:raw_iron_block\";MinecraftBlockTypes2[\"RedCandle\"]=\"minecraft:red_candle\";MinecraftBlockTypes2[\"RedCandleCake\"]=\"minecraft:red_candle_cake\";MinecraftBlockTypes2[\"RedCarpet\"]=\"minecraft:red_carpet\";MinecraftBlockTypes2[\"RedConcrete\"]=\"minecraft:red_concrete\";MinecraftBlockTypes2[\"RedConcretePowder\"]=\"minecraft:red_concrete_powder\";MinecraftBlockTypes2[\"RedGlazedTerracotta\"]=\"minecraft:red_glazed_terracotta\";MinecraftBlockTypes2[\"RedMushroom\"]=\"minecraft:red_mushroom\";MinecraftBlockTypes2[\"RedMushroomBlock\"]=\"minecraft:red_mushroom_block\";MinecraftBlockTypes2[\"RedNetherBrick\"]=\"minecraft:red_nether_brick\";MinecraftBlockTypes2[\"RedNetherBrickStairs\"]=\"minecraft:red_nether_brick_stairs\";MinecraftBlockTypes2[\"RedSandstone\"]=\"minecraft:red_sandstone\";MinecraftBlockTypes2[\"RedSandstoneStairs\"]=\"minecraft:red_sandstone_stairs\";MinecraftBlockTypes2[\"RedShulkerBox\"]=\"minecraft:red_shulker_box\";MinecraftBlockTypes2[\"RedStainedGlass\"]=\"minecraft:red_stained_glass\";MinecraftBlockTypes2[\"RedStainedGlassPane\"]=\"minecraft:red_stained_glass_pane\";MinecraftBlockTypes2[\"RedTerracotta\"]=\"minecraft:red_terracotta\";MinecraftBlockTypes2[\"RedTulip\"]=\"minecraft:red_tulip\";MinecraftBlockTypes2[\"RedWool\"]=\"minecraft:red_wool\";MinecraftBlockTypes2[\"RedstoneBlock\"]=\"minecraft:redstone_block\";MinecraftBlockTypes2[\"RedstoneLamp\"]=\"minecraft:redstone_lamp\";MinecraftBlockTypes2[\"RedstoneOre\"]=\"minecraft:redstone_ore\";MinecraftBlockTypes2[\"RedstoneTorch\"]=\"minecraft:redstone_torch\";MinecraftBlockTypes2[\"RedstoneWire\"]=\"minecraft:redstone_wire\";MinecraftBlockTypes2[\"Reeds\"]=\"minecraft:reeds\";MinecraftBlockTypes2[\"ReinforcedDeepslate\"]=\"minecraft:reinforced_deepslate\";MinecraftBlockTypes2[\"RepeatingCommandBlock\"]=\"minecraft:repeating_command_block\";MinecraftBlockTypes2[\"Reserved6\"]=\"minecraft:reserved6\";MinecraftBlockTypes2[\"RespawnAnchor\"]=\"minecraft:respawn_anchor\";MinecraftBlockTypes2[\"RoseBush\"]=\"minecraft:rose_bush\";MinecraftBlockTypes2[\"Sand\"]=\"minecraft:sand\";MinecraftBlockTypes2[\"Sandstone\"]=\"minecraft:sandstone\";MinecraftBlockTypes2[\"SandstoneSlab\"]=\"minecraft:sandstone_slab\";MinecraftBlockTypes2[\"SandstoneStairs\"]=\"minecraft:sandstone_stairs\";MinecraftBlockTypes2[\"Scaffolding\"]=\"minecraft:scaffolding\";MinecraftBlockTypes2[\"Sculk\"]=\"minecraft:sculk\";MinecraftBlockTypes2[\"SculkCatalyst\"]=\"minecraft:sculk_catalyst\";MinecraftBlockTypes2[\"SculkSensor\"]=\"minecraft:sculk_sensor\";MinecraftBlockTypes2[\"SculkShrieker\"]=\"minecraft:sculk_shrieker\";MinecraftBlockTypes2[\"SculkVein\"]=\"minecraft:sculk_vein\";MinecraftBlockTypes2[\"SeaLantern\"]=\"minecraft:sea_lantern\";MinecraftBlockTypes2[\"SeaPickle\"]=\"minecraft:sea_pickle\";MinecraftBlockTypes2[\"Seagrass\"]=\"minecraft:seagrass\";MinecraftBlockTypes2[\"ShortGrass\"]=\"minecraft:short_grass\";MinecraftBlockTypes2[\"Shroomlight\"]=\"minecraft:shroomlight\";MinecraftBlockTypes2[\"SilverGlazedTerracotta\"]=\"minecraft:silver_glazed_terracotta\";MinecraftBlockTypes2[\"Skull\"]=\"minecraft:skull\";MinecraftBlockTypes2[\"Slime\"]=\"minecraft:slime\";MinecraftBlockTypes2[\"SmallAmethystBud\"]=\"minecraft:small_amethyst_bud\";MinecraftBlockTypes2[\"SmallDripleafBlock\"]=\"minecraft:small_dripleaf_block\";MinecraftBlockTypes2[\"SmithingTable\"]=\"minecraft:smithing_table\";MinecraftBlockTypes2[\"Smoker\"]=\"minecraft:smoker\";MinecraftBlockTypes2[\"SmoothBasalt\"]=\"minecraft:smooth_basalt\";MinecraftBlockTypes2[\"SmoothQuartzStairs\"]=\"minecraft:smooth_quartz_stairs\";MinecraftBlockTypes2[\"SmoothRedSandstoneStairs\"]=\"minecraft:smooth_red_sandstone_stairs\";MinecraftBlockTypes2[\"SmoothSandstoneStairs\"]=\"minecraft:smooth_sandstone_stairs\";MinecraftBlockTypes2[\"SmoothStone\"]=\"minecraft:smooth_stone\";MinecraftBlockTypes2[\"SmoothStoneSlab\"]=\"minecraft:smooth_stone_slab\";MinecraftBlockTypes2[\"SnifferEgg\"]=\"minecraft:sniffer_egg\";MinecraftBlockTypes2[\"Snow\"]=\"minecraft:snow\";MinecraftBlockTypes2[\"SnowLayer\"]=\"minecraft:snow_layer\";MinecraftBlockTypes2[\"SoulCampfire\"]=\"minecraft:soul_campfire\";MinecraftBlockTypes2[\"SoulFire\"]=\"minecraft:soul_fire\";MinecraftBlockTypes2[\"SoulLantern\"]=\"minecraft:soul_lantern\";MinecraftBlockTypes2[\"SoulSand\"]=\"minecraft:soul_sand\";MinecraftBlockTypes2[\"SoulSoil\"]=\"minecraft:soul_soil\";MinecraftBlockTypes2[\"SoulTorch\"]=\"minecraft:soul_torch\";MinecraftBlockTypes2[\"Sponge\"]=\"minecraft:sponge\";MinecraftBlockTypes2[\"SporeBlossom\"]=\"minecraft:spore_blossom\";MinecraftBlockTypes2[\"SpruceButton\"]=\"minecraft:spruce_button\";MinecraftBlockTypes2[\"SpruceDoor\"]=\"minecraft:spruce_door\";MinecraftBlockTypes2[\"SpruceDoubleSlab\"]=\"minecraft:spruce_double_slab\";MinecraftBlockTypes2[\"SpruceFence\"]=\"minecraft:spruce_fence\";MinecraftBlockTypes2[\"SpruceFenceGate\"]=\"minecraft:spruce_fence_gate\";MinecraftBlockTypes2[\"SpruceHangingSign\"]=\"minecraft:spruce_hanging_sign\";MinecraftBlockTypes2[\"SpruceLeaves\"]=\"minecraft:spruce_leaves\";MinecraftBlockTypes2[\"SpruceLog\"]=\"minecraft:spruce_log\";MinecraftBlockTypes2[\"SprucePlanks\"]=\"minecraft:spruce_planks\";MinecraftBlockTypes2[\"SprucePressurePlate\"]=\"minecraft:spruce_pressure_plate\";MinecraftBlockTypes2[\"SpruceSapling\"]=\"minecraft:spruce_sapling\";MinecraftBlockTypes2[\"SpruceSlab\"]=\"minecraft:spruce_slab\";MinecraftBlockTypes2[\"SpruceStairs\"]=\"minecraft:spruce_stairs\";MinecraftBlockTypes2[\"SpruceStandingSign\"]=\"minecraft:spruce_standing_sign\";MinecraftBlockTypes2[\"SpruceTrapdoor\"]=\"minecraft:spruce_trapdoor\";MinecraftBlockTypes2[\"SpruceWallSign\"]=\"minecraft:spruce_wall_sign\";MinecraftBlockTypes2[\"SpruceWood\"]=\"minecraft:spruce_wood\";MinecraftBlockTypes2[\"StandingBanner\"]=\"minecraft:standing_banner\";MinecraftBlockTypes2[\"StandingSign\"]=\"minecraft:standing_sign\";MinecraftBlockTypes2[\"StickyPiston\"]=\"minecraft:sticky_piston\";MinecraftBlockTypes2[\"StickyPistonArmCollision\"]=\"minecraft:sticky_piston_arm_collision\";MinecraftBlockTypes2[\"Stone\"]=\"minecraft:stone\";MinecraftBlockTypes2[\"StoneBlockSlab2\"]=\"minecraft:stone_block_slab2\";MinecraftBlockTypes2[\"StoneBlockSlab3\"]=\"minecraft:stone_block_slab3\";MinecraftBlockTypes2[\"StoneBlockSlab4\"]=\"minecraft:stone_block_slab4\";MinecraftBlockTypes2[\"StoneBrickSlab\"]=\"minecraft:stone_brick_slab\";MinecraftBlockTypes2[\"StoneBrickStairs\"]=\"minecraft:stone_brick_stairs\";MinecraftBlockTypes2[\"StoneButton\"]=\"minecraft:stone_button\";MinecraftBlockTypes2[\"StonePressurePlate\"]=\"minecraft:stone_pressure_plate\";MinecraftBlockTypes2[\"StoneStairs\"]=\"minecraft:stone_stairs\";MinecraftBlockTypes2[\"Stonebrick\"]=\"minecraft:stonebrick\";MinecraftBlockTypes2[\"Stonecutter\"]=\"minecraft:stonecutter\";MinecraftBlockTypes2[\"StonecutterBlock\"]=\"minecraft:stonecutter_block\";MinecraftBlockTypes2[\"StrippedAcaciaLog\"]=\"minecraft:stripped_acacia_log\";MinecraftBlockTypes2[\"StrippedAcaciaWood\"]=\"minecraft:stripped_acacia_wood\";MinecraftBlockTypes2[\"StrippedBambooBlock\"]=\"minecraft:stripped_bamboo_block\";MinecraftBlockTypes2[\"StrippedBirchLog\"]=\"minecraft:stripped_birch_log\";MinecraftBlockTypes2[\"StrippedBirchWood\"]=\"minecraft:stripped_birch_wood\";MinecraftBlockTypes2[\"StrippedCherryLog\"]=\"minecraft:stripped_cherry_log\";MinecraftBlockTypes2[\"StrippedCherryWood\"]=\"minecraft:stripped_cherry_wood\";MinecraftBlockTypes2[\"StrippedCrimsonHyphae\"]=\"minecraft:stripped_crimson_hyphae\";MinecraftBlockTypes2[\"StrippedCrimsonStem\"]=\"minecraft:stripped_crimson_stem\";MinecraftBlockTypes2[\"StrippedDarkOakLog\"]=\"minecraft:stripped_dark_oak_log\";MinecraftBlockTypes2[\"StrippedDarkOakWood\"]=\"minecraft:stripped_dark_oak_wood\";MinecraftBlockTypes2[\"StrippedJungleLog\"]=\"minecraft:stripped_jungle_log\";MinecraftBlockTypes2[\"StrippedJungleWood\"]=\"minecraft:stripped_jungle_wood\";MinecraftBlockTypes2[\"StrippedMangroveLog\"]=\"minecraft:stripped_mangrove_log\";MinecraftBlockTypes2[\"StrippedMangroveWood\"]=\"minecraft:stripped_mangrove_wood\";MinecraftBlockTypes2[\"StrippedOakLog\"]=\"minecraft:stripped_oak_log\";MinecraftBlockTypes2[\"StrippedOakWood\"]=\"minecraft:stripped_oak_wood\";MinecraftBlockTypes2[\"StrippedSpruceLog\"]=\"minecraft:stripped_spruce_log\";MinecraftBlockTypes2[\"StrippedSpruceWood\"]=\"minecraft:stripped_spruce_wood\";MinecraftBlockTypes2[\"StrippedWarpedHyphae\"]=\"minecraft:stripped_warped_hyphae\";MinecraftBlockTypes2[\"StrippedWarpedStem\"]=\"minecraft:stripped_warped_stem\";MinecraftBlockTypes2[\"StructureBlock\"]=\"minecraft:structure_block\";MinecraftBlockTypes2[\"StructureVoid\"]=\"minecraft:structure_void\";MinecraftBlockTypes2[\"Sunflower\"]=\"minecraft:sunflower\";MinecraftBlockTypes2[\"SuspiciousGravel\"]=\"minecraft:suspicious_gravel\";MinecraftBlockTypes2[\"SuspiciousSand\"]=\"minecraft:suspicious_sand\";MinecraftBlockTypes2[\"SweetBerryBush\"]=\"minecraft:sweet_berry_bush\";MinecraftBlockTypes2[\"TallGrass\"]=\"minecraft:tall_grass\";MinecraftBlockTypes2[\"Target\"]=\"minecraft:target\";MinecraftBlockTypes2[\"TintedGlass\"]=\"minecraft:tinted_glass\";MinecraftBlockTypes2[\"Tnt\"]=\"minecraft:tnt\";MinecraftBlockTypes2[\"Torch\"]=\"minecraft:torch\";MinecraftBlockTypes2[\"Torchflower\"]=\"minecraft:torchflower\";MinecraftBlockTypes2[\"TorchflowerCrop\"]=\"minecraft:torchflower_crop\";MinecraftBlockTypes2[\"Trapdoor\"]=\"minecraft:trapdoor\";MinecraftBlockTypes2[\"TrappedChest\"]=\"minecraft:trapped_chest\";MinecraftBlockTypes2[\"TrialSpawner\"]=\"minecraft:trial_spawner\";MinecraftBlockTypes2[\"TripWire\"]=\"minecraft:trip_wire\";MinecraftBlockTypes2[\"TripwireHook\"]=\"minecraft:tripwire_hook\";MinecraftBlockTypes2[\"TubeCoral\"]=\"minecraft:tube_coral\";MinecraftBlockTypes2[\"TubeCoralBlock\"]=\"minecraft:tube_coral_block\";MinecraftBlockTypes2[\"TubeCoralFan\"]=\"minecraft:tube_coral_fan\";MinecraftBlockTypes2[\"Tuff\"]=\"minecraft:tuff\";MinecraftBlockTypes2[\"TuffBrickDoubleSlab\"]=\"minecraft:tuff_brick_double_slab\";MinecraftBlockTypes2[\"TuffBrickSlab\"]=\"minecraft:tuff_brick_slab\";MinecraftBlockTypes2[\"TuffBrickStairs\"]=\"minecraft:tuff_brick_stairs\";MinecraftBlockTypes2[\"TuffBrickWall\"]=\"minecraft:tuff_brick_wall\";MinecraftBlockTypes2[\"TuffBricks\"]=\"minecraft:tuff_bricks\";MinecraftBlockTypes2[\"TuffDoubleSlab\"]=\"minecraft:tuff_double_slab\";MinecraftBlockTypes2[\"TuffSlab\"]=\"minecraft:tuff_slab\";MinecraftBlockTypes2[\"TuffStairs\"]=\"minecraft:tuff_stairs\";MinecraftBlockTypes2[\"TuffWall\"]=\"minecraft:tuff_wall\";MinecraftBlockTypes2[\"TurtleEgg\"]=\"minecraft:turtle_egg\";MinecraftBlockTypes2[\"TwistingVines\"]=\"minecraft:twisting_vines\";MinecraftBlockTypes2[\"UnderwaterTorch\"]=\"minecraft:underwater_torch\";MinecraftBlockTypes2[\"UndyedShulkerBox\"]=\"minecraft:undyed_shulker_box\";MinecraftBlockTypes2[\"Unknown\"]=\"minecraft:unknown\";MinecraftBlockTypes2[\"UnlitRedstoneTorch\"]=\"minecraft:unlit_redstone_torch\";MinecraftBlockTypes2[\"UnpoweredComparator\"]=\"minecraft:unpowered_comparator\";MinecraftBlockTypes2[\"UnpoweredRepeater\"]=\"minecraft:unpowered_repeater\";MinecraftBlockTypes2[\"Vault\"]=\"minecraft:vault\";MinecraftBlockTypes2[\"VerdantFroglight\"]=\"minecraft:verdant_froglight\";MinecraftBlockTypes2[\"Vine\"]=\"minecraft:vine\";MinecraftBlockTypes2[\"WallBanner\"]=\"minecraft:wall_banner\";MinecraftBlockTypes2[\"WallSign\"]=\"minecraft:wall_sign\";MinecraftBlockTypes2[\"WarpedButton\"]=\"minecraft:warped_button\";MinecraftBlockTypes2[\"WarpedDoor\"]=\"minecraft:warped_door\";MinecraftBlockTypes2[\"WarpedDoubleSlab\"]=\"minecraft:warped_double_slab\";MinecraftBlockTypes2[\"WarpedFence\"]=\"minecraft:warped_fence\";MinecraftBlockTypes2[\"WarpedFenceGate\"]=\"minecraft:warped_fence_gate\";MinecraftBlockTypes2[\"WarpedFungus\"]=\"minecraft:warped_fungus\";MinecraftBlockTypes2[\"WarpedHangingSign\"]=\"minecraft:warped_hanging_sign\";MinecraftBlockTypes2[\"WarpedHyphae\"]=\"minecraft:warped_hyphae\";MinecraftBlockTypes2[\"WarpedNylium\"]=\"minecraft:warped_nylium\";MinecraftBlockTypes2[\"WarpedPlanks\"]=\"minecraft:warped_planks\";MinecraftBlockTypes2[\"WarpedPressurePlate\"]=\"minecraft:warped_pressure_plate\";MinecraftBlockTypes2[\"WarpedRoots\"]=\"minecraft:warped_roots\";MinecraftBlockTypes2[\"WarpedSlab\"]=\"minecraft:warped_slab\";MinecraftBlockTypes2[\"WarpedStairs\"]=\"minecraft:warped_stairs\";MinecraftBlockTypes2[\"WarpedStandingSign\"]=\"minecraft:warped_standing_sign\";MinecraftBlockTypes2[\"WarpedStem\"]=\"minecraft:warped_stem\";MinecraftBlockTypes2[\"WarpedTrapdoor\"]=\"minecraft:warped_trapdoor\";MinecraftBlockTypes2[\"WarpedWallSign\"]=\"minecraft:warped_wall_sign\";MinecraftBlockTypes2[\"WarpedWartBlock\"]=\"minecraft:warped_wart_block\";MinecraftBlockTypes2[\"Water\"]=\"minecraft:water\";MinecraftBlockTypes2[\"Waterlily\"]=\"minecraft:waterlily\";MinecraftBlockTypes2[\"WaxedChiseledCopper\"]=\"minecraft:waxed_chiseled_copper\";MinecraftBlockTypes2[\"WaxedCopper\"]=\"minecraft:waxed_copper\";MinecraftBlockTypes2[\"WaxedCopperBulb\"]=\"minecraft:waxed_copper_bulb\";MinecraftBlockTypes2[\"WaxedCopperDoor\"]=\"minecraft:waxed_copper_door\";MinecraftBlockTypes2[\"WaxedCopperGrate\"]=\"minecraft:waxed_copper_grate\";MinecraftBlockTypes2[\"WaxedCopperTrapdoor\"]=\"minecraft:waxed_copper_trapdoor\";MinecraftBlockTypes2[\"WaxedCutCopper\"]=\"minecraft:waxed_cut_copper\";MinecraftBlockTypes2[\"WaxedCutCopperSlab\"]=\"minecraft:waxed_cut_copper_slab\";MinecraftBlockTypes2[\"WaxedCutCopperStairs\"]=\"minecraft:waxed_cut_copper_stairs\";MinecraftBlockTypes2[\"WaxedDoubleCutCopperSlab\"]=\"minecraft:waxed_double_cut_copper_slab\";MinecraftBlockTypes2[\"WaxedExposedChiseledCopper\"]=\"minecraft:waxed_exposed_chiseled_copper\";MinecraftBlockTypes2[\"WaxedExposedCopper\"]=\"minecraft:waxed_exposed_copper\";MinecraftBlockTypes2[\"WaxedExposedCopperBulb\"]=\"minecraft:waxed_exposed_copper_bulb\";MinecraftBlockTypes2[\"WaxedExposedCopperDoor\"]=\"minecraft:waxed_exposed_copper_door\";MinecraftBlockTypes2[\"WaxedExposedCopperGrate\"]=\"minecraft:waxed_exposed_copper_grate\";MinecraftBlockTypes2[\"WaxedExposedCopperTrapdoor\"]=\"minecraft:waxed_exposed_copper_trapdoor\";MinecraftBlockTypes2[\"WaxedExposedCutCopper\"]=\"minecraft:waxed_exposed_cut_copper\";MinecraftBlockTypes2[\"WaxedExposedCutCopperSlab\"]=\"minecraft:waxed_exposed_cut_copper_slab\";MinecraftBlockTypes2[\"WaxedExposedCutCopperStairs\"]=\"minecraft:waxed_exposed_cut_copper_stairs\";MinecraftBlockTypes2[\"WaxedExposedDoubleCutCopperSlab\"]=\"minecraft:waxed_exposed_double_cut_copper_slab\";MinecraftBlockTypes2[\"WaxedOxidizedChiseledCopper\"]=\"minecraft:waxed_oxidized_chiseled_copper\";MinecraftBlockTypes2[\"WaxedOxidizedCopper\"]=\"minecraft:waxed_oxidized_copper\";MinecraftBlockTypes2[\"WaxedOxidizedCopperBulb\"]=\"minecraft:waxed_oxidized_copper_bulb\";MinecraftBlockTypes2[\"WaxedOxidizedCopperDoor\"]=\"minecraft:waxed_oxidized_copper_door\";MinecraftBlockTypes2[\"WaxedOxidizedCopperGrate\"]=\"minecraft:waxed_oxidized_copper_grate\";MinecraftBlockTypes2[\"WaxedOxidizedCopperTrapdoor\"]=\"minecraft:waxed_oxidized_copper_trapdoor\";MinecraftBlockTypes2[\"WaxedOxidizedCutCopper\"]=\"minecraft:waxed_oxidized_cut_copper\";MinecraftBlockTypes2[\"WaxedOxidizedCutCopperSlab\"]=\"minecraft:waxed_oxidized_cut_copper_slab\";MinecraftBlockTypes2[\"WaxedOxidizedCutCopperStairs\"]=\"minecraft:waxed_oxidized_cut_copper_stairs\";MinecraftBlockTypes2[\"WaxedOxidizedDoubleCutCopperSlab\"]=\"minecraft:waxed_oxidized_double_cut_copper_slab\";MinecraftBlockTypes2[\"WaxedWeatheredChiseledCopper\"]=\"minecraft:waxed_weathered_chiseled_copper\";MinecraftBlockTypes2[\"WaxedWeatheredCopper\"]=\"minecraft:waxed_weathered_copper\";MinecraftBlockTypes2[\"WaxedWeatheredCopperBulb\"]=\"minecraft:waxed_weathered_copper_bulb\";MinecraftBlockTypes2[\"WaxedWeatheredCopperDoor\"]=\"minecraft:waxed_weathered_copper_door\";MinecraftBlockTypes2[\"WaxedWeatheredCopperGrate\"]=\"minecraft:waxed_weathered_copper_grate\";MinecraftBlockTypes2[\"WaxedWeatheredCopperTrapdoor\"]=\"minecraft:waxed_weathered_copper_trapdoor\";MinecraftBlockTypes2[\"WaxedWeatheredCutCopper\"]=\"minecraft:waxed_weathered_cut_copper\";MinecraftBlockTypes2[\"WaxedWeatheredCutCopperSlab\"]=\"minecraft:waxed_weathered_cut_copper_slab\";MinecraftBlockTypes2[\"WaxedWeatheredCutCopperStairs\"]=\"minecraft:waxed_weathered_cut_copper_stairs\";MinecraftBlockTypes2[\"WaxedWeatheredDoubleCutCopperSlab\"]=\"minecraft:waxed_weathered_double_cut_copper_slab\";MinecraftBlockTypes2[\"WeatheredChiseledCopper\"]=\"minecraft:weathered_chiseled_copper\";MinecraftBlockTypes2[\"WeatheredCopper\"]=\"minecraft:weathered_copper\";MinecraftBlockTypes2[\"WeatheredCopperBulb\"]=\"minecraft:weathered_copper_bulb\";MinecraftBlockTypes2[\"WeatheredCopperDoor\"]=\"minecraft:weathered_copper_door\";MinecraftBlockTypes2[\"WeatheredCopperGrate\"]=\"minecraft:weathered_copper_grate\";MinecraftBlockTypes2[\"WeatheredCopperTrapdoor\"]=\"minecraft:weathered_copper_trapdoor\";MinecraftBlockTypes2[\"WeatheredCutCopper\"]=\"minecraft:weathered_cut_copper\";MinecraftBlockTypes2[\"WeatheredCutCopperSlab\"]=\"minecraft:weathered_cut_copper_slab\";MinecraftBlockTypes2[\"WeatheredCutCopperStairs\"]=\"minecraft:weathered_cut_copper_stairs\";MinecraftBlockTypes2[\"WeatheredDoubleCutCopperSlab\"]=\"minecraft:weathered_double_cut_copper_slab\";MinecraftBlockTypes2[\"Web\"]=\"minecraft:web\";MinecraftBlockTypes2[\"WeepingVines\"]=\"minecraft:weeping_vines\";MinecraftBlockTypes2[\"Wheat\"]=\"minecraft:wheat\";MinecraftBlockTypes2[\"WhiteCandle\"]=\"minecraft:white_candle\";MinecraftBlockTypes2[\"WhiteCandleCake\"]=\"minecraft:white_candle_cake\";MinecraftBlockTypes2[\"WhiteCarpet\"]=\"minecraft:white_carpet\";MinecraftBlockTypes2[\"WhiteConcrete\"]=\"minecraft:white_concrete\";MinecraftBlockTypes2[\"WhiteConcretePowder\"]=\"minecraft:white_concrete_powder\";MinecraftBlockTypes2[\"WhiteGlazedTerracotta\"]=\"minecraft:white_glazed_terracotta\";MinecraftBlockTypes2[\"WhiteShulkerBox\"]=\"minecraft:white_shulker_box\";MinecraftBlockTypes2[\"WhiteStainedGlass\"]=\"minecraft:white_stained_glass\";MinecraftBlockTypes2[\"WhiteStainedGlassPane\"]=\"minecraft:white_stained_glass_pane\";MinecraftBlockTypes2[\"WhiteTerracotta\"]=\"minecraft:white_terracotta\";MinecraftBlockTypes2[\"WhiteTulip\"]=\"minecraft:white_tulip\";MinecraftBlockTypes2[\"WhiteWool\"]=\"minecraft:white_wool\";MinecraftBlockTypes2[\"WitherRose\"]=\"minecraft:wither_rose\";MinecraftBlockTypes2[\"WoodenButton\"]=\"minecraft:wooden_button\";MinecraftBlockTypes2[\"WoodenDoor\"]=\"minecraft:wooden_door\";MinecraftBlockTypes2[\"WoodenPressurePlate\"]=\"minecraft:wooden_pressure_plate\";MinecraftBlockTypes2[\"YellowCandle\"]=\"minecraft:yellow_candle\";MinecraftBlockTypes2[\"YellowCandleCake\"]=\"minecraft:yellow_candle_cake\";MinecraftBlockTypes2[\"YellowCarpet\"]=\"minecraft:yellow_carpet\";MinecraftBlockTypes2[\"YellowConcrete\"]=\"minecraft:yellow_concrete\";MinecraftBlockTypes2[\"YellowConcretePowder\"]=\"minecraft:yellow_concrete_powder\";MinecraftBlockTypes2[\"YellowFlower\"]=\"minecraft:yellow_flower\";MinecraftBlockTypes2[\"YellowGlazedTerracotta\"]=\"minecraft:yellow_glazed_terracotta\";MinecraftBlockTypes2[\"YellowShulkerBox\"]=\"minecraft:yellow_shulker_box\";MinecraftBlockTypes2[\"YellowStainedGlass\"]=\"minecraft:yellow_stained_glass\";MinecraftBlockTypes2[\"YellowStainedGlassPane\"]=\"minecraft:yellow_stained_glass_pane\";MinecraftBlockTypes2[\"YellowTerracotta\"]=\"minecraft:yellow_terracotta\";MinecraftBlockTypes2[\"YellowWool\"]=\"minecraft:yellow_wool\";return MinecraftBlockTypes2})(MinecraftBlockTypes||{});var MinecraftCameraPresetsTypes=(MinecraftCameraPresetsTypes2=>{MinecraftCameraPresetsTypes2[\"FirstPerson\"]=\"minecraft:first_person\";MinecraftCameraPresetsTypes2[\"Free\"]=\"minecraft:free\";MinecraftCameraPresetsTypes2[\"ThirdPerson\"]=\"minecraft:third_person\";MinecraftCameraPresetsTypes2[\"ThirdPersonFront\"]=\"minecraft:third_person_front\";return MinecraftCameraPresetsTypes2})(MinecraftCameraPresetsTypes||{});var MinecraftCooldownCategoryTypes=(MinecraftCooldownCategoryTypes2=>{MinecraftCooldownCategoryTypes2[\"Chorusfruit\"]=\"minecraft:chorusfruit\";MinecraftCooldownCategoryTypes2[\"EnderPearl\"]=\"minecraft:ender_pearl\";MinecraftCooldownCategoryTypes2[\"GoatHorn\"]=\"minecraft:goat_horn\";MinecraftCooldownCategoryTypes2[\"Shield\"]=\"minecraft:shield\";MinecraftCooldownCategoryTypes2[\"WindCharge\"]=\"minecraft:wind_charge\";return MinecraftCooldownCategoryTypes2})(MinecraftCooldownCategoryTypes||{});var MinecraftDimensionTypes=(MinecraftDimensionTypes2=>{MinecraftDimensionTypes2[\"Nether\"]=\"minecraft:nether\";MinecraftDimensionTypes2[\"Overworld\"]=\"minecraft:overworld\";MinecraftDimensionTypes2[\"TheEnd\"]=\"minecraft:the_end\";return MinecraftDimensionTypes2})(MinecraftDimensionTypes||{});var MinecraftEffectTypes=(MinecraftEffectTypes2=>{MinecraftEffectTypes2[\"Absorption\"]=\"absorption\";MinecraftEffectTypes2[\"BadOmen\"]=\"bad_omen\";MinecraftEffectTypes2[\"Blindness\"]=\"blindness\";MinecraftEffectTypes2[\"ConduitPower\"]=\"conduit_power\";MinecraftEffectTypes2[\"Darkness\"]=\"darkness\";MinecraftEffectTypes2[\"Empty\"]=\"empty\";MinecraftEffectTypes2[\"FatalPoison\"]=\"fatal_poison\";MinecraftEffectTypes2[\"FireResistance\"]=\"fire_resistance\";MinecraftEffectTypes2[\"Haste\"]=\"haste\";MinecraftEffectTypes2[\"HealthBoost\"]=\"health_boost\";MinecraftEffectTypes2[\"Hunger\"]=\"hunger\";MinecraftEffectTypes2[\"Infested\"]=\"infested\";MinecraftEffectTypes2[\"InstantDamage\"]=\"instant_damage\";MinecraftEffectTypes2[\"InstantHealth\"]=\"instant_health\";MinecraftEffectTypes2[\"Invisibility\"]=\"invisibility\";MinecraftEffectTypes2[\"JumpBoost\"]=\"jump_boost\";MinecraftEffectTypes2[\"Levitation\"]=\"levitation\";MinecraftEffectTypes2[\"MiningFatigue\"]=\"mining_fatigue\";MinecraftEffectTypes2[\"Nausea\"]=\"nausea\";MinecraftEffectTypes2[\"NightVision\"]=\"night_vision\";MinecraftEffectTypes2[\"Oozing\"]=\"oozing\";MinecraftEffectTypes2[\"Poison\"]=\"poison\";MinecraftEffectTypes2[\"RaidOmen\"]=\"raid_omen\";MinecraftEffectTypes2[\"Regeneration\"]=\"regeneration\";MinecraftEffectTypes2[\"Resistance\"]=\"resistance\";MinecraftEffectTypes2[\"Saturation\"]=\"saturation\";MinecraftEffectTypes2[\"SlowFalling\"]=\"slow_falling\";MinecraftEffectTypes2[\"Slowness\"]=\"slowness\";MinecraftEffectTypes2[\"Speed\"]=\"speed\";MinecraftEffectTypes2[\"Strength\"]=\"strength\";MinecraftEffectTypes2[\"TrialOmen\"]=\"trial_omen\";MinecraftEffectTypes2[\"VillageHero\"]=\"village_hero\";MinecraftEffectTypes2[\"WaterBreathing\"]=\"water_breathing\";MinecraftEffectTypes2[\"Weakness\"]=\"weakness\";MinecraftEffectTypes2[\"Weaving\"]=\"weaving\";MinecraftEffectTypes2[\"WindCharged\"]=\"wind_charged\";MinecraftEffectTypes2[\"Wither\"]=\"wither\";return MinecraftEffectTypes2})(MinecraftEffectTypes||{});var MinecraftEnchantmentTypes=(MinecraftEnchantmentTypes2=>{MinecraftEnchantmentTypes2[\"AquaAffinity\"]=\"aqua_affinity\";MinecraftEnchantmentTypes2[\"BaneOfArthropods\"]=\"bane_of_arthropods\";MinecraftEnchantmentTypes2[\"Binding\"]=\"binding\";MinecraftEnchantmentTypes2[\"BlastProtection\"]=\"blast_protection\";MinecraftEnchantmentTypes2[\"Breach\"]=\"breach\";MinecraftEnchantmentTypes2[\"Channeling\"]=\"channeling\";MinecraftEnchantmentTypes2[\"Density\"]=\"density\";MinecraftEnchantmentTypes2[\"DepthStrider\"]=\"depth_strider\";MinecraftEnchantmentTypes2[\"Efficiency\"]=\"efficiency\";MinecraftEnchantmentTypes2[\"FeatherFalling\"]=\"feather_falling\";MinecraftEnchantmentTypes2[\"FireAspect\"]=\"fire_aspect\";MinecraftEnchantmentTypes2[\"FireProtection\"]=\"fire_protection\";MinecraftEnchantmentTypes2[\"Flame\"]=\"flame\";MinecraftEnchantmentTypes2[\"Fortune\"]=\"fortune\";MinecraftEnchantmentTypes2[\"FrostWalker\"]=\"frost_walker\";MinecraftEnchantmentTypes2[\"Impaling\"]=\"impaling\";MinecraftEnchantmentTypes2[\"Infinity\"]=\"infinity\";MinecraftEnchantmentTypes2[\"Knockback\"]=\"knockback\";MinecraftEnchantmentTypes2[\"Looting\"]=\"looting\";MinecraftEnchantmentTypes2[\"Loyalty\"]=\"loyalty\";MinecraftEnchantmentTypes2[\"LuckOfTheSea\"]=\"luck_of_the_sea\";MinecraftEnchantmentTypes2[\"Lure\"]=\"lure\";MinecraftEnchantmentTypes2[\"Mending\"]=\"mending\";MinecraftEnchantmentTypes2[\"Multishot\"]=\"multishot\";MinecraftEnchantmentTypes2[\"Piercing\"]=\"piercing\";MinecraftEnchantmentTypes2[\"Power\"]=\"power\";MinecraftEnchantmentTypes2[\"ProjectileProtection\"]=\"projectile_protection\";MinecraftEnchantmentTypes2[\"Protection\"]=\"protection\";MinecraftEnchantmentTypes2[\"Punch\"]=\"punch\";MinecraftEnchantmentTypes2[\"QuickCharge\"]=\"quick_charge\";MinecraftEnchantmentTypes2[\"Respiration\"]=\"respiration\";MinecraftEnchantmentTypes2[\"Riptide\"]=\"riptide\";MinecraftEnchantmentTypes2[\"Sharpness\"]=\"sharpness\";MinecraftEnchantmentTypes2[\"SilkTouch\"]=\"silk_touch\";MinecraftEnchantmentTypes2[\"Smite\"]=\"smite\";MinecraftEnchantmentTypes2[\"SoulSpeed\"]=\"soul_speed\";MinecraftEnchantmentTypes2[\"SwiftSneak\"]=\"swift_sneak\";MinecraftEnchantmentTypes2[\"Thorns\"]=\"thorns\";MinecraftEnchantmentTypes2[\"Unbreaking\"]=\"unbreaking\";MinecraftEnchantmentTypes2[\"Vanishing\"]=\"vanishing\";MinecraftEnchantmentTypes2[\"WindBurst\"]=\"wind_burst\";return MinecraftEnchantmentTypes2})(MinecraftEnchantmentTypes||{});var MinecraftEntityTypes=(MinecraftEntityTypes2=>{MinecraftEntityTypes2[\"Agent\"]=\"agent\";MinecraftEntityTypes2[\"Allay\"]=\"allay\";MinecraftEntityTypes2[\"AreaEffectCloud\"]=\"area_effect_cloud\";MinecraftEntityTypes2[\"Armadillo\"]=\"armadillo\";MinecraftEntityTypes2[\"ArmorStand\"]=\"armor_stand\";MinecraftEntityTypes2[\"Arrow\"]=\"arrow\";MinecraftEntityTypes2[\"Axolotl\"]=\"axolotl\";MinecraftEntityTypes2[\"Bat\"]=\"bat\";MinecraftEntityTypes2[\"Bee\"]=\"bee\";MinecraftEntityTypes2[\"Blaze\"]=\"blaze\";MinecraftEntityTypes2[\"Boat\"]=\"boat\";MinecraftEntityTypes2[\"Bogged\"]=\"bogged\";MinecraftEntityTypes2[\"Breeze\"]=\"breeze\";MinecraftEntityTypes2[\"BreezeWindChargeProjectile\"]=\"breeze_wind_charge_projectile\";MinecraftEntityTypes2[\"Camel\"]=\"camel\";MinecraftEntityTypes2[\"Cat\"]=\"cat\";MinecraftEntityTypes2[\"CaveSpider\"]=\"cave_spider\";MinecraftEntityTypes2[\"ChestBoat\"]=\"chest_boat\";MinecraftEntityTypes2[\"ChestMinecart\"]=\"chest_minecart\";MinecraftEntityTypes2[\"Chicken\"]=\"chicken\";MinecraftEntityTypes2[\"Cod\"]=\"cod\";MinecraftEntityTypes2[\"CommandBlockMinecart\"]=\"command_block_minecart\";MinecraftEntityTypes2[\"Cow\"]=\"cow\";MinecraftEntityTypes2[\"Creeper\"]=\"creeper\";MinecraftEntityTypes2[\"Dolphin\"]=\"dolphin\";MinecraftEntityTypes2[\"Donkey\"]=\"donkey\";MinecraftEntityTypes2[\"DragonFireball\"]=\"dragon_fireball\";MinecraftEntityTypes2[\"Drowned\"]=\"drowned\";MinecraftEntityTypes2[\"Egg\"]=\"egg\";MinecraftEntityTypes2[\"ElderGuardian\"]=\"elder_guardian\";MinecraftEntityTypes2[\"EnderCrystal\"]=\"ender_crystal\";MinecraftEntityTypes2[\"EnderDragon\"]=\"ender_dragon\";MinecraftEntityTypes2[\"EnderPearl\"]=\"ender_pearl\";MinecraftEntityTypes2[\"Enderman\"]=\"enderman\";MinecraftEntityTypes2[\"Endermite\"]=\"endermite\";MinecraftEntityTypes2[\"EvocationIllager\"]=\"evocation_illager\";MinecraftEntityTypes2[\"EyeOfEnderSignal\"]=\"eye_of_ender_signal\";MinecraftEntityTypes2[\"Fireball\"]=\"fireball\";MinecraftEntityTypes2[\"FireworksRocket\"]=\"fireworks_rocket\";MinecraftEntityTypes2[\"FishingHook\"]=\"fishing_hook\";MinecraftEntityTypes2[\"Fox\"]=\"fox\";MinecraftEntityTypes2[\"Frog\"]=\"frog\";MinecraftEntityTypes2[\"Ghast\"]=\"ghast\";MinecraftEntityTypes2[\"GlowSquid\"]=\"glow_squid\";MinecraftEntityTypes2[\"Goat\"]=\"goat\";MinecraftEntityTypes2[\"Guardian\"]=\"guardian\";MinecraftEntityTypes2[\"Hoglin\"]=\"hoglin\";MinecraftEntityTypes2[\"HopperMinecart\"]=\"hopper_minecart\";MinecraftEntityTypes2[\"Horse\"]=\"horse\";MinecraftEntityTypes2[\"Husk\"]=\"husk\";MinecraftEntityTypes2[\"IronGolem\"]=\"iron_golem\";MinecraftEntityTypes2[\"LightningBolt\"]=\"lightning_bolt\";MinecraftEntityTypes2[\"LingeringPotion\"]=\"lingering_potion\";MinecraftEntityTypes2[\"Llama\"]=\"llama\";MinecraftEntityTypes2[\"LlamaSpit\"]=\"llama_spit\";MinecraftEntityTypes2[\"MagmaCube\"]=\"magma_cube\";MinecraftEntityTypes2[\"Minecart\"]=\"minecart\";MinecraftEntityTypes2[\"Mooshroom\"]=\"mooshroom\";MinecraftEntityTypes2[\"Mule\"]=\"mule\";MinecraftEntityTypes2[\"Npc\"]=\"npc\";MinecraftEntityTypes2[\"Ocelot\"]=\"ocelot\";MinecraftEntityTypes2[\"OminousItemSpawner\"]=\"ominous_item_spawner\";MinecraftEntityTypes2[\"Panda\"]=\"panda\";MinecraftEntityTypes2[\"Parrot\"]=\"parrot\";MinecraftEntityTypes2[\"Phantom\"]=\"phantom\";MinecraftEntityTypes2[\"Pig\"]=\"pig\";MinecraftEntityTypes2[\"Piglin\"]=\"piglin\";MinecraftEntityTypes2[\"PiglinBrute\"]=\"piglin_brute\";MinecraftEntityTypes2[\"Pillager\"]=\"pillager\";MinecraftEntityTypes2[\"Player\"]=\"player\";MinecraftEntityTypes2[\"PolarBear\"]=\"polar_bear\";MinecraftEntityTypes2[\"Pufferfish\"]=\"pufferfish\";MinecraftEntityTypes2[\"Rabbit\"]=\"rabbit\";MinecraftEntityTypes2[\"Ravager\"]=\"ravager\";MinecraftEntityTypes2[\"Salmon\"]=\"salmon\";MinecraftEntityTypes2[\"Sheep\"]=\"sheep\";MinecraftEntityTypes2[\"Shulker\"]=\"shulker\";MinecraftEntityTypes2[\"ShulkerBullet\"]=\"shulker_bullet\";MinecraftEntityTypes2[\"Silverfish\"]=\"silverfish\";MinecraftEntityTypes2[\"Skeleton\"]=\"skeleton\";MinecraftEntityTypes2[\"SkeletonHorse\"]=\"skeleton_horse\";MinecraftEntityTypes2[\"Slime\"]=\"slime\";MinecraftEntityTypes2[\"SmallFireball\"]=\"small_fireball\";MinecraftEntityTypes2[\"Sniffer\"]=\"sniffer\";MinecraftEntityTypes2[\"SnowGolem\"]=\"snow_golem\";MinecraftEntityTypes2[\"Snowball\"]=\"snowball\";MinecraftEntityTypes2[\"Spider\"]=\"spider\";MinecraftEntityTypes2[\"SplashPotion\"]=\"splash_potion\";MinecraftEntityTypes2[\"Squid\"]=\"squid\";MinecraftEntityTypes2[\"Stray\"]=\"stray\";MinecraftEntityTypes2[\"Strider\"]=\"strider\";MinecraftEntityTypes2[\"Tadpole\"]=\"tadpole\";MinecraftEntityTypes2[\"ThrownTrident\"]=\"thrown_trident\";MinecraftEntityTypes2[\"Tnt\"]=\"tnt\";MinecraftEntityTypes2[\"TntMinecart\"]=\"tnt_minecart\";MinecraftEntityTypes2[\"TraderLlama\"]=\"trader_llama\";MinecraftEntityTypes2[\"TripodCamera\"]=\"tripod_camera\";MinecraftEntityTypes2[\"Tropicalfish\"]=\"tropicalfish\";MinecraftEntityTypes2[\"Turtle\"]=\"turtle\";MinecraftEntityTypes2[\"Vex\"]=\"vex\";MinecraftEntityTypes2[\"Villager\"]=\"villager\";MinecraftEntityTypes2[\"VillagerV2\"]=\"villager_v2\";MinecraftEntityTypes2[\"Vindicator\"]=\"vindicator\";MinecraftEntityTypes2[\"WanderingTrader\"]=\"wandering_trader\";MinecraftEntityTypes2[\"Warden\"]=\"warden\";MinecraftEntityTypes2[\"WindChargeProjectile\"]=\"wind_charge_projectile\";MinecraftEntityTypes2[\"Witch\"]=\"witch\";MinecraftEntityTypes2[\"Wither\"]=\"wither\";MinecraftEntityTypes2[\"WitherSkeleton\"]=\"wither_skeleton\";MinecraftEntityTypes2[\"WitherSkull\"]=\"wither_skull\";MinecraftEntityTypes2[\"WitherSkullDangerous\"]=\"wither_skull_dangerous\";MinecraftEntityTypes2[\"Wolf\"]=\"wolf\";MinecraftEntityTypes2[\"XpBottle\"]=\"xp_bottle\";MinecraftEntityTypes2[\"XpOrb\"]=\"xp_orb\";MinecraftEntityTypes2[\"Zoglin\"]=\"zoglin\";MinecraftEntityTypes2[\"Zombie\"]=\"zombie\";MinecraftEntityTypes2[\"ZombieHorse\"]=\"zombie_horse\";MinecraftEntityTypes2[\"ZombiePigman\"]=\"zombie_pigman\";MinecraftEntityTypes2[\"ZombieVillager\"]=\"zombie_villager\";MinecraftEntityTypes2[\"ZombieVillagerV2\"]=\"zombie_villager_v2\";return MinecraftEntityTypes2})(MinecraftEntityTypes||{});var MinecraftFeatureTypes=(MinecraftFeatureTypes2=>{MinecraftFeatureTypes2[\"AncientCity\"]=\"minecraft:ancient_city\";MinecraftFeatureTypes2[\"BastionRemnant\"]=\"minecraft:bastion_remnant\";MinecraftFeatureTypes2[\"BuriedTreasure\"]=\"minecraft:buried_treasure\";MinecraftFeatureTypes2[\"EndCity\"]=\"minecraft:end_city\";MinecraftFeatureTypes2[\"Fortress\"]=\"minecraft:fortress\";MinecraftFeatureTypes2[\"Mansion\"]=\"minecraft:mansion\";MinecraftFeatureTypes2[\"Mineshaft\"]=\"minecraft:mineshaft\";MinecraftFeatureTypes2[\"Monument\"]=\"minecraft:monument\";MinecraftFeatureTypes2[\"PillagerOutpost\"]=\"minecraft:pillager_outpost\";MinecraftFeatureTypes2[\"RuinedPortal\"]=\"minecraft:ruined_portal\";MinecraftFeatureTypes2[\"Ruins\"]=\"minecraft:ruins\";MinecraftFeatureTypes2[\"Shipwreck\"]=\"minecraft:shipwreck\";MinecraftFeatureTypes2[\"Stronghold\"]=\"minecraft:stronghold\";MinecraftFeatureTypes2[\"Temple\"]=\"minecraft:temple\";MinecraftFeatureTypes2[\"TrailRuins\"]=\"minecraft:trail_ruins\";MinecraftFeatureTypes2[\"TrialChambers\"]=\"minecraft:trial_chambers\";MinecraftFeatureTypes2[\"Village\"]=\"minecraft:village\";return MinecraftFeatureTypes2})(MinecraftFeatureTypes||{});var MinecraftItemTypes=(MinecraftItemTypes2=>{MinecraftItemTypes2[\"AcaciaBoat\"]=\"minecraft:acacia_boat\";MinecraftItemTypes2[\"AcaciaButton\"]=\"minecraft:acacia_button\";MinecraftItemTypes2[\"AcaciaChestBoat\"]=\"minecraft:acacia_chest_boat\";MinecraftItemTypes2[\"AcaciaDoor\"]=\"minecraft:acacia_door\";MinecraftItemTypes2[\"AcaciaFence\"]=\"minecraft:acacia_fence\";MinecraftItemTypes2[\"AcaciaFenceGate\"]=\"minecraft:acacia_fence_gate\";MinecraftItemTypes2[\"AcaciaHangingSign\"]=\"minecraft:acacia_hanging_sign\";MinecraftItemTypes2[\"AcaciaLeaves\"]=\"minecraft:acacia_leaves\";MinecraftItemTypes2[\"AcaciaLog\"]=\"minecraft:acacia_log\";MinecraftItemTypes2[\"AcaciaPlanks\"]=\"minecraft:acacia_planks\";MinecraftItemTypes2[\"AcaciaPressurePlate\"]=\"minecraft:acacia_pressure_plate\";MinecraftItemTypes2[\"AcaciaSapling\"]=\"minecraft:acacia_sapling\";MinecraftItemTypes2[\"AcaciaSign\"]=\"minecraft:acacia_sign\";MinecraftItemTypes2[\"AcaciaSlab\"]=\"minecraft:acacia_slab\";MinecraftItemTypes2[\"AcaciaStairs\"]=\"minecraft:acacia_stairs\";MinecraftItemTypes2[\"AcaciaTrapdoor\"]=\"minecraft:acacia_trapdoor\";MinecraftItemTypes2[\"AcaciaWood\"]=\"minecraft:acacia_wood\";MinecraftItemTypes2[\"ActivatorRail\"]=\"minecraft:activator_rail\";MinecraftItemTypes2[\"Air\"]=\"minecraft:air\";MinecraftItemTypes2[\"AllaySpawnEgg\"]=\"minecraft:allay_spawn_egg\";MinecraftItemTypes2[\"Allium\"]=\"minecraft:allium\";MinecraftItemTypes2[\"Allow\"]=\"minecraft:allow\";MinecraftItemTypes2[\"AmethystBlock\"]=\"minecraft:amethyst_block\";MinecraftItemTypes2[\"AmethystCluster\"]=\"minecraft:amethyst_cluster\";MinecraftItemTypes2[\"AmethystShard\"]=\"minecraft:amethyst_shard\";MinecraftItemTypes2[\"AncientDebris\"]=\"minecraft:ancient_debris\";MinecraftItemTypes2[\"Andesite\"]=\"minecraft:andesite\";MinecraftItemTypes2[\"AndesiteStairs\"]=\"minecraft:andesite_stairs\";MinecraftItemTypes2[\"AnglerPotterySherd\"]=\"minecraft:angler_pottery_sherd\";MinecraftItemTypes2[\"Anvil\"]=\"minecraft:anvil\";MinecraftItemTypes2[\"Apple\"]=\"minecraft:apple\";MinecraftItemTypes2[\"ArcherPotterySherd\"]=\"minecraft:archer_pottery_sherd\";MinecraftItemTypes2[\"ArmadilloScute\"]=\"minecraft:armadillo_scute\";MinecraftItemTypes2[\"ArmadilloSpawnEgg\"]=\"minecraft:armadillo_spawn_egg\";MinecraftItemTypes2[\"ArmorStand\"]=\"minecraft:armor_stand\";MinecraftItemTypes2[\"ArmsUpPotterySherd\"]=\"minecraft:arms_up_pottery_sherd\";MinecraftItemTypes2[\"Arrow\"]=\"minecraft:arrow\";MinecraftItemTypes2[\"AxolotlBucket\"]=\"minecraft:axolotl_bucket\";MinecraftItemTypes2[\"AxolotlSpawnEgg\"]=\"minecraft:axolotl_spawn_egg\";MinecraftItemTypes2[\"Azalea\"]=\"minecraft:azalea\";MinecraftItemTypes2[\"AzaleaLeaves\"]=\"minecraft:azalea_leaves\";MinecraftItemTypes2[\"AzaleaLeavesFlowered\"]=\"minecraft:azalea_leaves_flowered\";MinecraftItemTypes2[\"AzureBluet\"]=\"minecraft:azure_bluet\";MinecraftItemTypes2[\"BakedPotato\"]=\"minecraft:baked_potato\";MinecraftItemTypes2[\"Bamboo\"]=\"minecraft:bamboo\";MinecraftItemTypes2[\"BambooBlock\"]=\"minecraft:bamboo_block\";MinecraftItemTypes2[\"BambooButton\"]=\"minecraft:bamboo_button\";MinecraftItemTypes2[\"BambooChestRaft\"]=\"minecraft:bamboo_chest_raft\";MinecraftItemTypes2[\"BambooDoor\"]=\"minecraft:bamboo_door\";MinecraftItemTypes2[\"BambooFence\"]=\"minecraft:bamboo_fence\";MinecraftItemTypes2[\"BambooFenceGate\"]=\"minecraft:bamboo_fence_gate\";MinecraftItemTypes2[\"BambooHangingSign\"]=\"minecraft:bamboo_hanging_sign\";MinecraftItemTypes2[\"BambooMosaic\"]=\"minecraft:bamboo_mosaic\";MinecraftItemTypes2[\"BambooMosaicSlab\"]=\"minecraft:bamboo_mosaic_slab\";MinecraftItemTypes2[\"BambooMosaicStairs\"]=\"minecraft:bamboo_mosaic_stairs\";MinecraftItemTypes2[\"BambooPlanks\"]=\"minecraft:bamboo_planks\";MinecraftItemTypes2[\"BambooPressurePlate\"]=\"minecraft:bamboo_pressure_plate\";MinecraftItemTypes2[\"BambooRaft\"]=\"minecraft:bamboo_raft\";MinecraftItemTypes2[\"BambooSign\"]=\"minecraft:bamboo_sign\";MinecraftItemTypes2[\"BambooSlab\"]=\"minecraft:bamboo_slab\";MinecraftItemTypes2[\"BambooStairs\"]=\"minecraft:bamboo_stairs\";MinecraftItemTypes2[\"BambooTrapdoor\"]=\"minecraft:bamboo_trapdoor\";MinecraftItemTypes2[\"Banner\"]=\"minecraft:banner\";MinecraftItemTypes2[\"BannerPattern\"]=\"minecraft:banner_pattern\";MinecraftItemTypes2[\"Barrel\"]=\"minecraft:barrel\";MinecraftItemTypes2[\"Barrier\"]=\"minecraft:barrier\";MinecraftItemTypes2[\"Basalt\"]=\"minecraft:basalt\";MinecraftItemTypes2[\"BatSpawnEgg\"]=\"minecraft:bat_spawn_egg\";MinecraftItemTypes2[\"Beacon\"]=\"minecraft:beacon\";MinecraftItemTypes2[\"Bed\"]=\"minecraft:bed\";MinecraftItemTypes2[\"Bedrock\"]=\"minecraft:bedrock\";MinecraftItemTypes2[\"BeeNest\"]=\"minecraft:bee_nest\";MinecraftItemTypes2[\"BeeSpawnEgg\"]=\"minecraft:bee_spawn_egg\";MinecraftItemTypes2[\"Beef\"]=\"minecraft:beef\";MinecraftItemTypes2[\"Beehive\"]=\"minecraft:beehive\";MinecraftItemTypes2[\"Beetroot\"]=\"minecraft:beetroot\";MinecraftItemTypes2[\"BeetrootSeeds\"]=\"minecraft:beetroot_seeds\";MinecraftItemTypes2[\"BeetrootSoup\"]=\"minecraft:beetroot_soup\";MinecraftItemTypes2[\"Bell\"]=\"minecraft:bell\";MinecraftItemTypes2[\"BigDripleaf\"]=\"minecraft:big_dripleaf\";MinecraftItemTypes2[\"BirchBoat\"]=\"minecraft:birch_boat\";MinecraftItemTypes2[\"BirchButton\"]=\"minecraft:birch_button\";MinecraftItemTypes2[\"BirchChestBoat\"]=\"minecraft:birch_chest_boat\";MinecraftItemTypes2[\"BirchDoor\"]=\"minecraft:birch_door\";MinecraftItemTypes2[\"BirchFence\"]=\"minecraft:birch_fence\";MinecraftItemTypes2[\"BirchFenceGate\"]=\"minecraft:birch_fence_gate\";MinecraftItemTypes2[\"BirchHangingSign\"]=\"minecraft:birch_hanging_sign\";MinecraftItemTypes2[\"BirchLeaves\"]=\"minecraft:birch_leaves\";MinecraftItemTypes2[\"BirchLog\"]=\"minecraft:birch_log\";MinecraftItemTypes2[\"BirchPlanks\"]=\"minecraft:birch_planks\";MinecraftItemTypes2[\"BirchPressurePlate\"]=\"minecraft:birch_pressure_plate\";MinecraftItemTypes2[\"BirchSapling\"]=\"minecraft:birch_sapling\";MinecraftItemTypes2[\"BirchSign\"]=\"minecraft:birch_sign\";MinecraftItemTypes2[\"BirchSlab\"]=\"minecraft:birch_slab\";MinecraftItemTypes2[\"BirchStairs\"]=\"minecraft:birch_stairs\";MinecraftItemTypes2[\"BirchTrapdoor\"]=\"minecraft:birch_trapdoor\";MinecraftItemTypes2[\"BirchWood\"]=\"minecraft:birch_wood\";MinecraftItemTypes2[\"BlackCandle\"]=\"minecraft:black_candle\";MinecraftItemTypes2[\"BlackCarpet\"]=\"minecraft:black_carpet\";MinecraftItemTypes2[\"BlackConcrete\"]=\"minecraft:black_concrete\";MinecraftItemTypes2[\"BlackConcretePowder\"]=\"minecraft:black_concrete_powder\";MinecraftItemTypes2[\"BlackDye\"]=\"minecraft:black_dye\";MinecraftItemTypes2[\"BlackGlazedTerracotta\"]=\"minecraft:black_glazed_terracotta\";MinecraftItemTypes2[\"BlackShulkerBox\"]=\"minecraft:black_shulker_box\";MinecraftItemTypes2[\"BlackStainedGlass\"]=\"minecraft:black_stained_glass\";MinecraftItemTypes2[\"BlackStainedGlassPane\"]=\"minecraft:black_stained_glass_pane\";MinecraftItemTypes2[\"BlackTerracotta\"]=\"minecraft:black_terracotta\";MinecraftItemTypes2[\"BlackWool\"]=\"minecraft:black_wool\";MinecraftItemTypes2[\"Blackstone\"]=\"minecraft:blackstone\";MinecraftItemTypes2[\"BlackstoneSlab\"]=\"minecraft:blackstone_slab\";MinecraftItemTypes2[\"BlackstoneStairs\"]=\"minecraft:blackstone_stairs\";MinecraftItemTypes2[\"BlackstoneWall\"]=\"minecraft:blackstone_wall\";MinecraftItemTypes2[\"BladePotterySherd\"]=\"minecraft:blade_pottery_sherd\";MinecraftItemTypes2[\"BlastFurnace\"]=\"minecraft:blast_furnace\";MinecraftItemTypes2[\"BlazePowder\"]=\"minecraft:blaze_powder\";MinecraftItemTypes2[\"BlazeRod\"]=\"minecraft:blaze_rod\";MinecraftItemTypes2[\"BlazeSpawnEgg\"]=\"minecraft:blaze_spawn_egg\";MinecraftItemTypes2[\"BlueCandle\"]=\"minecraft:blue_candle\";MinecraftItemTypes2[\"BlueCarpet\"]=\"minecraft:blue_carpet\";MinecraftItemTypes2[\"BlueConcrete\"]=\"minecraft:blue_concrete\";MinecraftItemTypes2[\"BlueConcretePowder\"]=\"minecraft:blue_concrete_powder\";MinecraftItemTypes2[\"BlueDye\"]=\"minecraft:blue_dye\";MinecraftItemTypes2[\"BlueGlazedTerracotta\"]=\"minecraft:blue_glazed_terracotta\";MinecraftItemTypes2[\"BlueIce\"]=\"minecraft:blue_ice\";MinecraftItemTypes2[\"BlueOrchid\"]=\"minecraft:blue_orchid\";MinecraftItemTypes2[\"BlueShulkerBox\"]=\"minecraft:blue_shulker_box\";MinecraftItemTypes2[\"BlueStainedGlass\"]=\"minecraft:blue_stained_glass\";MinecraftItemTypes2[\"BlueStainedGlassPane\"]=\"minecraft:blue_stained_glass_pane\";MinecraftItemTypes2[\"BlueTerracotta\"]=\"minecraft:blue_terracotta\";MinecraftItemTypes2[\"BlueWool\"]=\"minecraft:blue_wool\";MinecraftItemTypes2[\"Boat\"]=\"minecraft:boat\";MinecraftItemTypes2[\"BoggedSpawnEgg\"]=\"minecraft:bogged_spawn_egg\";MinecraftItemTypes2[\"BoltArmorTrimSmithingTemplate\"]=\"minecraft:bolt_armor_trim_smithing_template\";MinecraftItemTypes2[\"Bone\"]=\"minecraft:bone\";MinecraftItemTypes2[\"BoneBlock\"]=\"minecraft:bone_block\";MinecraftItemTypes2[\"BoneMeal\"]=\"minecraft:bone_meal\";MinecraftItemTypes2[\"Book\"]=\"minecraft:book\";MinecraftItemTypes2[\"Bookshelf\"]=\"minecraft:bookshelf\";MinecraftItemTypes2[\"BorderBlock\"]=\"minecraft:border_block\";MinecraftItemTypes2[\"BordureIndentedBannerPattern\"]=\"minecraft:bordure_indented_banner_pattern\";MinecraftItemTypes2[\"Bow\"]=\"minecraft:bow\";MinecraftItemTypes2[\"Bowl\"]=\"minecraft:bowl\";MinecraftItemTypes2[\"BrainCoral\"]=\"minecraft:brain_coral\";MinecraftItemTypes2[\"BrainCoralBlock\"]=\"minecraft:brain_coral_block\";MinecraftItemTypes2[\"BrainCoralFan\"]=\"minecraft:brain_coral_fan\";MinecraftItemTypes2[\"Bread\"]=\"minecraft:bread\";MinecraftItemTypes2[\"BreezeRod\"]=\"minecraft:breeze_rod\";MinecraftItemTypes2[\"BreezeSpawnEgg\"]=\"minecraft:breeze_spawn_egg\";MinecraftItemTypes2[\"BrewerPotterySherd\"]=\"minecraft:brewer_pottery_sherd\";MinecraftItemTypes2[\"BrewingStand\"]=\"minecraft:brewing_stand\";MinecraftItemTypes2[\"Brick\"]=\"minecraft:brick\";MinecraftItemTypes2[\"BrickBlock\"]=\"minecraft:brick_block\";MinecraftItemTypes2[\"BrickSlab\"]=\"minecraft:brick_slab\";MinecraftItemTypes2[\"BrickStairs\"]=\"minecraft:brick_stairs\";MinecraftItemTypes2[\"BrownCandle\"]=\"minecraft:brown_candle\";MinecraftItemTypes2[\"BrownCarpet\"]=\"minecraft:brown_carpet\";MinecraftItemTypes2[\"BrownConcrete\"]=\"minecraft:brown_concrete\";MinecraftItemTypes2[\"BrownConcretePowder\"]=\"minecraft:brown_concrete_powder\";MinecraftItemTypes2[\"BrownDye\"]=\"minecraft:brown_dye\";MinecraftItemTypes2[\"BrownGlazedTerracotta\"]=\"minecraft:brown_glazed_terracotta\";MinecraftItemTypes2[\"BrownMushroom\"]=\"minecraft:brown_mushroom\";MinecraftItemTypes2[\"BrownMushroomBlock\"]=\"minecraft:brown_mushroom_block\";MinecraftItemTypes2[\"BrownShulkerBox\"]=\"minecraft:brown_shulker_box\";MinecraftItemTypes2[\"BrownStainedGlass\"]=\"minecraft:brown_stained_glass\";MinecraftItemTypes2[\"BrownStainedGlassPane\"]=\"minecraft:brown_stained_glass_pane\";MinecraftItemTypes2[\"BrownTerracotta\"]=\"minecraft:brown_terracotta\";MinecraftItemTypes2[\"BrownWool\"]=\"minecraft:brown_wool\";MinecraftItemTypes2[\"Brush\"]=\"minecraft:brush\";MinecraftItemTypes2[\"BubbleCoral\"]=\"minecraft:bubble_coral\";MinecraftItemTypes2[\"BubbleCoralBlock\"]=\"minecraft:bubble_coral_block\";MinecraftItemTypes2[\"BubbleCoralFan\"]=\"minecraft:bubble_coral_fan\";MinecraftItemTypes2[\"Bucket\"]=\"minecraft:bucket\";MinecraftItemTypes2[\"BuddingAmethyst\"]=\"minecraft:budding_amethyst\";MinecraftItemTypes2[\"BurnPotterySherd\"]=\"minecraft:burn_pottery_sherd\";MinecraftItemTypes2[\"Cactus\"]=\"minecraft:cactus\";MinecraftItemTypes2[\"Cake\"]=\"minecraft:cake\";MinecraftItemTypes2[\"Calcite\"]=\"minecraft:calcite\";MinecraftItemTypes2[\"CalibratedSculkSensor\"]=\"minecraft:calibrated_sculk_sensor\";MinecraftItemTypes2[\"CamelSpawnEgg\"]=\"minecraft:camel_spawn_egg\";MinecraftItemTypes2[\"Campfire\"]=\"minecraft:campfire\";MinecraftItemTypes2[\"Candle\"]=\"minecraft:candle\";MinecraftItemTypes2[\"Carpet\"]=\"minecraft:carpet\";MinecraftItemTypes2[\"Carrot\"]=\"minecraft:carrot\";MinecraftItemTypes2[\"CarrotOnAStick\"]=\"minecraft:carrot_on_a_stick\";MinecraftItemTypes2[\"CartographyTable\"]=\"minecraft:cartography_table\";MinecraftItemTypes2[\"CarvedPumpkin\"]=\"minecraft:carved_pumpkin\";MinecraftItemTypes2[\"CatSpawnEgg\"]=\"minecraft:cat_spawn_egg\";MinecraftItemTypes2[\"Cauldron\"]=\"minecraft:cauldron\";MinecraftItemTypes2[\"CaveSpiderSpawnEgg\"]=\"minecraft:cave_spider_spawn_egg\";MinecraftItemTypes2[\"Chain\"]=\"minecraft:chain\";MinecraftItemTypes2[\"ChainCommandBlock\"]=\"minecraft:chain_command_block\";MinecraftItemTypes2[\"ChainmailBoots\"]=\"minecraft:chainmail_boots\";MinecraftItemTypes2[\"ChainmailChestplate\"]=\"minecraft:chainmail_chestplate\";MinecraftItemTypes2[\"ChainmailHelmet\"]=\"minecraft:chainmail_helmet\";MinecraftItemTypes2[\"ChainmailLeggings\"]=\"minecraft:chainmail_leggings\";MinecraftItemTypes2[\"Charcoal\"]=\"minecraft:charcoal\";MinecraftItemTypes2[\"CherryBoat\"]=\"minecraft:cherry_boat\";MinecraftItemTypes2[\"CherryButton\"]=\"minecraft:cherry_button\";MinecraftItemTypes2[\"CherryChestBoat\"]=\"minecraft:cherry_chest_boat\";MinecraftItemTypes2[\"CherryDoor\"]=\"minecraft:cherry_door\";MinecraftItemTypes2[\"CherryFence\"]=\"minecraft:cherry_fence\";MinecraftItemTypes2[\"CherryFenceGate\"]=\"minecraft:cherry_fence_gate\";MinecraftItemTypes2[\"CherryHangingSign\"]=\"minecraft:cherry_hanging_sign\";MinecraftItemTypes2[\"CherryLeaves\"]=\"minecraft:cherry_leaves\";MinecraftItemTypes2[\"CherryLog\"]=\"minecraft:cherry_log\";MinecraftItemTypes2[\"CherryPlanks\"]=\"minecraft:cherry_planks\";MinecraftItemTypes2[\"CherryPressurePlate\"]=\"minecraft:cherry_pressure_plate\";MinecraftItemTypes2[\"CherrySapling\"]=\"minecraft:cherry_sapling\";MinecraftItemTypes2[\"CherrySign\"]=\"minecraft:cherry_sign\";MinecraftItemTypes2[\"CherrySlab\"]=\"minecraft:cherry_slab\";MinecraftItemTypes2[\"CherryStairs\"]=\"minecraft:cherry_stairs\";MinecraftItemTypes2[\"CherryTrapdoor\"]=\"minecraft:cherry_trapdoor\";MinecraftItemTypes2[\"CherryWood\"]=\"minecraft:cherry_wood\";MinecraftItemTypes2[\"Chest\"]=\"minecraft:chest\";MinecraftItemTypes2[\"ChestBoat\"]=\"minecraft:chest_boat\";MinecraftItemTypes2[\"ChestMinecart\"]=\"minecraft:chest_minecart\";MinecraftItemTypes2[\"Chicken\"]=\"minecraft:chicken\";MinecraftItemTypes2[\"ChickenSpawnEgg\"]=\"minecraft:chicken_spawn_egg\";MinecraftItemTypes2[\"ChiseledBookshelf\"]=\"minecraft:chiseled_bookshelf\";MinecraftItemTypes2[\"ChiseledCopper\"]=\"minecraft:chiseled_copper\";MinecraftItemTypes2[\"ChiseledDeepslate\"]=\"minecraft:chiseled_deepslate\";MinecraftItemTypes2[\"ChiseledNetherBricks\"]=\"minecraft:chiseled_nether_bricks\";MinecraftItemTypes2[\"ChiseledPolishedBlackstone\"]=\"minecraft:chiseled_polished_blackstone\";MinecraftItemTypes2[\"ChiseledTuff\"]=\"minecraft:chiseled_tuff\";MinecraftItemTypes2[\"ChiseledTuffBricks\"]=\"minecraft:chiseled_tuff_bricks\";MinecraftItemTypes2[\"ChorusFlower\"]=\"minecraft:chorus_flower\";MinecraftItemTypes2[\"ChorusFruit\"]=\"minecraft:chorus_fruit\";MinecraftItemTypes2[\"ChorusPlant\"]=\"minecraft:chorus_plant\";MinecraftItemTypes2[\"Clay\"]=\"minecraft:clay\";MinecraftItemTypes2[\"ClayBall\"]=\"minecraft:clay_ball\";MinecraftItemTypes2[\"Clock\"]=\"minecraft:clock\";MinecraftItemTypes2[\"Coal\"]=\"minecraft:coal\";MinecraftItemTypes2[\"CoalBlock\"]=\"minecraft:coal_block\";MinecraftItemTypes2[\"CoalOre\"]=\"minecraft:coal_ore\";MinecraftItemTypes2[\"CoastArmorTrimSmithingTemplate\"]=\"minecraft:coast_armor_trim_smithing_template\";MinecraftItemTypes2[\"CobbledDeepslate\"]=\"minecraft:cobbled_deepslate\";MinecraftItemTypes2[\"CobbledDeepslateSlab\"]=\"minecraft:cobbled_deepslate_slab\";MinecraftItemTypes2[\"CobbledDeepslateStairs\"]=\"minecraft:cobbled_deepslate_stairs\";MinecraftItemTypes2[\"CobbledDeepslateWall\"]=\"minecraft:cobbled_deepslate_wall\";MinecraftItemTypes2[\"Cobblestone\"]=\"minecraft:cobblestone\";MinecraftItemTypes2[\"CobblestoneSlab\"]=\"minecraft:cobblestone_slab\";MinecraftItemTypes2[\"CobblestoneWall\"]=\"minecraft:cobblestone_wall\";MinecraftItemTypes2[\"CocoaBeans\"]=\"minecraft:cocoa_beans\";MinecraftItemTypes2[\"Cod\"]=\"minecraft:cod\";MinecraftItemTypes2[\"CodBucket\"]=\"minecraft:cod_bucket\";MinecraftItemTypes2[\"CodSpawnEgg\"]=\"minecraft:cod_spawn_egg\";MinecraftItemTypes2[\"CommandBlock\"]=\"minecraft:command_block\";MinecraftItemTypes2[\"CommandBlockMinecart\"]=\"minecraft:command_block_minecart\";MinecraftItemTypes2[\"Comparator\"]=\"minecraft:comparator\";MinecraftItemTypes2[\"Compass\"]=\"minecraft:compass\";MinecraftItemTypes2[\"Composter\"]=\"minecraft:composter\";MinecraftItemTypes2[\"Concrete\"]=\"minecraft:concrete\";MinecraftItemTypes2[\"ConcretePowder\"]=\"minecraft:concrete_powder\";MinecraftItemTypes2[\"Conduit\"]=\"minecraft:conduit\";MinecraftItemTypes2[\"CookedBeef\"]=\"minecraft:cooked_beef\";MinecraftItemTypes2[\"CookedChicken\"]=\"minecraft:cooked_chicken\";MinecraftItemTypes2[\"CookedCod\"]=\"minecraft:cooked_cod\";MinecraftItemTypes2[\"CookedMutton\"]=\"minecraft:cooked_mutton\";MinecraftItemTypes2[\"CookedPorkchop\"]=\"minecraft:cooked_porkchop\";MinecraftItemTypes2[\"CookedRabbit\"]=\"minecraft:cooked_rabbit\";MinecraftItemTypes2[\"CookedSalmon\"]=\"minecraft:cooked_salmon\";MinecraftItemTypes2[\"Cookie\"]=\"minecraft:cookie\";MinecraftItemTypes2[\"CopperBlock\"]=\"minecraft:copper_block\";MinecraftItemTypes2[\"CopperBulb\"]=\"minecraft:copper_bulb\";MinecraftItemTypes2[\"CopperDoor\"]=\"minecraft:copper_door\";MinecraftItemTypes2[\"CopperGrate\"]=\"minecraft:copper_grate\";MinecraftItemTypes2[\"CopperIngot\"]=\"minecraft:copper_ingot\";MinecraftItemTypes2[\"CopperOre\"]=\"minecraft:copper_ore\";MinecraftItemTypes2[\"CopperTrapdoor\"]=\"minecraft:copper_trapdoor\";MinecraftItemTypes2[\"Coral\"]=\"minecraft:coral\";MinecraftItemTypes2[\"CoralBlock\"]=\"minecraft:coral_block\";MinecraftItemTypes2[\"CoralFan\"]=\"minecraft:coral_fan\";MinecraftItemTypes2[\"CoralFanDead\"]=\"minecraft:coral_fan_dead\";MinecraftItemTypes2[\"Cornflower\"]=\"minecraft:cornflower\";MinecraftItemTypes2[\"CowSpawnEgg\"]=\"minecraft:cow_spawn_egg\";MinecraftItemTypes2[\"CrackedDeepslateBricks\"]=\"minecraft:cracked_deepslate_bricks\";MinecraftItemTypes2[\"CrackedDeepslateTiles\"]=\"minecraft:cracked_deepslate_tiles\";MinecraftItemTypes2[\"CrackedNetherBricks\"]=\"minecraft:cracked_nether_bricks\";MinecraftItemTypes2[\"CrackedPolishedBlackstoneBricks\"]=\"minecraft:cracked_polished_blackstone_bricks\";MinecraftItemTypes2[\"Crafter\"]=\"minecraft:crafter\";MinecraftItemTypes2[\"CraftingTable\"]=\"minecraft:crafting_table\";MinecraftItemTypes2[\"CreeperBannerPattern\"]=\"minecraft:creeper_banner_pattern\";MinecraftItemTypes2[\"CreeperSpawnEgg\"]=\"minecraft:creeper_spawn_egg\";MinecraftItemTypes2[\"CrimsonButton\"]=\"minecraft:crimson_button\";MinecraftItemTypes2[\"CrimsonDoor\"]=\"minecraft:crimson_door\";MinecraftItemTypes2[\"CrimsonFence\"]=\"minecraft:crimson_fence\";MinecraftItemTypes2[\"CrimsonFenceGate\"]=\"minecraft:crimson_fence_gate\";MinecraftItemTypes2[\"CrimsonFungus\"]=\"minecraft:crimson_fungus\";MinecraftItemTypes2[\"CrimsonHangingSign\"]=\"minecraft:crimson_hanging_sign\";MinecraftItemTypes2[\"CrimsonHyphae\"]=\"minecraft:crimson_hyphae\";MinecraftItemTypes2[\"CrimsonNylium\"]=\"minecraft:crimson_nylium\";MinecraftItemTypes2[\"CrimsonPlanks\"]=\"minecraft:crimson_planks\";MinecraftItemTypes2[\"CrimsonPressurePlate\"]=\"minecraft:crimson_pressure_plate\";MinecraftItemTypes2[\"CrimsonRoots\"]=\"minecraft:crimson_roots\";MinecraftItemTypes2[\"CrimsonSign\"]=\"minecraft:crimson_sign\";MinecraftItemTypes2[\"CrimsonSlab\"]=\"minecraft:crimson_slab\";MinecraftItemTypes2[\"CrimsonStairs\"]=\"minecraft:crimson_stairs\";MinecraftItemTypes2[\"CrimsonStem\"]=\"minecraft:crimson_stem\";MinecraftItemTypes2[\"CrimsonTrapdoor\"]=\"minecraft:crimson_trapdoor\";MinecraftItemTypes2[\"Crossbow\"]=\"minecraft:crossbow\";MinecraftItemTypes2[\"CryingObsidian\"]=\"minecraft:crying_obsidian\";MinecraftItemTypes2[\"CutCopper\"]=\"minecraft:cut_copper\";MinecraftItemTypes2[\"CutCopperSlab\"]=\"minecraft:cut_copper_slab\";MinecraftItemTypes2[\"CutCopperStairs\"]=\"minecraft:cut_copper_stairs\";MinecraftItemTypes2[\"CyanCandle\"]=\"minecraft:cyan_candle\";MinecraftItemTypes2[\"CyanCarpet\"]=\"minecraft:cyan_carpet\";MinecraftItemTypes2[\"CyanConcrete\"]=\"minecraft:cyan_concrete\";MinecraftItemTypes2[\"CyanConcretePowder\"]=\"minecraft:cyan_concrete_powder\";MinecraftItemTypes2[\"CyanDye\"]=\"minecraft:cyan_dye\";MinecraftItemTypes2[\"CyanGlazedTerracotta\"]=\"minecraft:cyan_glazed_terracotta\";MinecraftItemTypes2[\"CyanShulkerBox\"]=\"minecraft:cyan_shulker_box\";MinecraftItemTypes2[\"CyanStainedGlass\"]=\"minecraft:cyan_stained_glass\";MinecraftItemTypes2[\"CyanStainedGlassPane\"]=\"minecraft:cyan_stained_glass_pane\";MinecraftItemTypes2[\"CyanTerracotta\"]=\"minecraft:cyan_terracotta\";MinecraftItemTypes2[\"CyanWool\"]=\"minecraft:cyan_wool\";MinecraftItemTypes2[\"DangerPotterySherd\"]=\"minecraft:danger_pottery_sherd\";MinecraftItemTypes2[\"DarkOakBoat\"]=\"minecraft:dark_oak_boat\";MinecraftItemTypes2[\"DarkOakButton\"]=\"minecraft:dark_oak_button\";MinecraftItemTypes2[\"DarkOakChestBoat\"]=\"minecraft:dark_oak_chest_boat\";MinecraftItemTypes2[\"DarkOakDoor\"]=\"minecraft:dark_oak_door\";MinecraftItemTypes2[\"DarkOakFence\"]=\"minecraft:dark_oak_fence\";MinecraftItemTypes2[\"DarkOakFenceGate\"]=\"minecraft:dark_oak_fence_gate\";MinecraftItemTypes2[\"DarkOakHangingSign\"]=\"minecraft:dark_oak_hanging_sign\";MinecraftItemTypes2[\"DarkOakLeaves\"]=\"minecraft:dark_oak_leaves\";MinecraftItemTypes2[\"DarkOakLog\"]=\"minecraft:dark_oak_log\";MinecraftItemTypes2[\"DarkOakPlanks\"]=\"minecraft:dark_oak_planks\";MinecraftItemTypes2[\"DarkOakPressurePlate\"]=\"minecraft:dark_oak_pressure_plate\";MinecraftItemTypes2[\"DarkOakSapling\"]=\"minecraft:dark_oak_sapling\";MinecraftItemTypes2[\"DarkOakSign\"]=\"minecraft:dark_oak_sign\";MinecraftItemTypes2[\"DarkOakSlab\"]=\"minecraft:dark_oak_slab\";MinecraftItemTypes2[\"DarkOakStairs\"]=\"minecraft:dark_oak_stairs\";MinecraftItemTypes2[\"DarkOakTrapdoor\"]=\"minecraft:dark_oak_trapdoor\";MinecraftItemTypes2[\"DarkOakWood\"]=\"minecraft:dark_oak_wood\";MinecraftItemTypes2[\"DarkPrismarineStairs\"]=\"minecraft:dark_prismarine_stairs\";MinecraftItemTypes2[\"DaylightDetector\"]=\"minecraft:daylight_detector\";MinecraftItemTypes2[\"DeadBrainCoral\"]=\"minecraft:dead_brain_coral\";MinecraftItemTypes2[\"DeadBrainCoralBlock\"]=\"minecraft:dead_brain_coral_block\";MinecraftItemTypes2[\"DeadBrainCoralFan\"]=\"minecraft:dead_brain_coral_fan\";MinecraftItemTypes2[\"DeadBubbleCoral\"]=\"minecraft:dead_bubble_coral\";MinecraftItemTypes2[\"DeadBubbleCoralBlock\"]=\"minecraft:dead_bubble_coral_block\";MinecraftItemTypes2[\"DeadBubbleCoralFan\"]=\"minecraft:dead_bubble_coral_fan\";MinecraftItemTypes2[\"DeadFireCoral\"]=\"minecraft:dead_fire_coral\";MinecraftItemTypes2[\"DeadFireCoralBlock\"]=\"minecraft:dead_fire_coral_block\";MinecraftItemTypes2[\"DeadFireCoralFan\"]=\"minecraft:dead_fire_coral_fan\";MinecraftItemTypes2[\"DeadHornCoral\"]=\"minecraft:dead_horn_coral\";MinecraftItemTypes2[\"DeadHornCoralBlock\"]=\"minecraft:dead_horn_coral_block\";MinecraftItemTypes2[\"DeadHornCoralFan\"]=\"minecraft:dead_horn_coral_fan\";MinecraftItemTypes2[\"DeadTubeCoral\"]=\"minecraft:dead_tube_coral\";MinecraftItemTypes2[\"DeadTubeCoralBlock\"]=\"minecraft:dead_tube_coral_block\";MinecraftItemTypes2[\"DeadTubeCoralFan\"]=\"minecraft:dead_tube_coral_fan\";MinecraftItemTypes2[\"Deadbush\"]=\"minecraft:deadbush\";MinecraftItemTypes2[\"DecoratedPot\"]=\"minecraft:decorated_pot\";MinecraftItemTypes2[\"Deepslate\"]=\"minecraft:deepslate\";MinecraftItemTypes2[\"DeepslateBrickSlab\"]=\"minecraft:deepslate_brick_slab\";MinecraftItemTypes2[\"DeepslateBrickStairs\"]=\"minecraft:deepslate_brick_stairs\";MinecraftItemTypes2[\"DeepslateBrickWall\"]=\"minecraft:deepslate_brick_wall\";MinecraftItemTypes2[\"DeepslateBricks\"]=\"minecraft:deepslate_bricks\";MinecraftItemTypes2[\"DeepslateCoalOre\"]=\"minecraft:deepslate_coal_ore\";MinecraftItemTypes2[\"DeepslateCopperOre\"]=\"minecraft:deepslate_copper_ore\";MinecraftItemTypes2[\"DeepslateDiamondOre\"]=\"minecraft:deepslate_diamond_ore\";MinecraftItemTypes2[\"DeepslateEmeraldOre\"]=\"minecraft:deepslate_emerald_ore\";MinecraftItemTypes2[\"DeepslateGoldOre\"]=\"minecraft:deepslate_gold_ore\";MinecraftItemTypes2[\"DeepslateIronOre\"]=\"minecraft:deepslate_iron_ore\";MinecraftItemTypes2[\"DeepslateLapisOre\"]=\"minecraft:deepslate_lapis_ore\";MinecraftItemTypes2[\"DeepslateRedstoneOre\"]=\"minecraft:deepslate_redstone_ore\";MinecraftItemTypes2[\"DeepslateTileSlab\"]=\"minecraft:deepslate_tile_slab\";MinecraftItemTypes2[\"DeepslateTileStairs\"]=\"minecraft:deepslate_tile_stairs\";MinecraftItemTypes2[\"DeepslateTileWall\"]=\"minecraft:deepslate_tile_wall\";MinecraftItemTypes2[\"DeepslateTiles\"]=\"minecraft:deepslate_tiles\";MinecraftItemTypes2[\"Deny\"]=\"minecraft:deny\";MinecraftItemTypes2[\"DetectorRail\"]=\"minecraft:detector_rail\";MinecraftItemTypes2[\"Diamond\"]=\"minecraft:diamond\";MinecraftItemTypes2[\"DiamondAxe\"]=\"minecraft:diamond_axe\";MinecraftItemTypes2[\"DiamondBlock\"]=\"minecraft:diamond_block\";MinecraftItemTypes2[\"DiamondBoots\"]=\"minecraft:diamond_boots\";MinecraftItemTypes2[\"DiamondChestplate\"]=\"minecraft:diamond_chestplate\";MinecraftItemTypes2[\"DiamondHelmet\"]=\"minecraft:diamond_helmet\";MinecraftItemTypes2[\"DiamondHoe\"]=\"minecraft:diamond_hoe\";MinecraftItemTypes2[\"DiamondHorseArmor\"]=\"minecraft:diamond_horse_armor\";MinecraftItemTypes2[\"DiamondLeggings\"]=\"minecraft:diamond_leggings\";MinecraftItemTypes2[\"DiamondOre\"]=\"minecraft:diamond_ore\";MinecraftItemTypes2[\"DiamondPickaxe\"]=\"minecraft:diamond_pickaxe\";MinecraftItemTypes2[\"DiamondShovel\"]=\"minecraft:diamond_shovel\";MinecraftItemTypes2[\"DiamondSword\"]=\"minecraft:diamond_sword\";MinecraftItemTypes2[\"Diorite\"]=\"minecraft:diorite\";MinecraftItemTypes2[\"DioriteStairs\"]=\"minecraft:diorite_stairs\";MinecraftItemTypes2[\"Dirt\"]=\"minecraft:dirt\";MinecraftItemTypes2[\"DirtWithRoots\"]=\"minecraft:dirt_with_roots\";MinecraftItemTypes2[\"DiscFragment5\"]=\"minecraft:disc_fragment_5\";MinecraftItemTypes2[\"Dispenser\"]=\"minecraft:dispenser\";MinecraftItemTypes2[\"DolphinSpawnEgg\"]=\"minecraft:dolphin_spawn_egg\";MinecraftItemTypes2[\"DonkeySpawnEgg\"]=\"minecraft:donkey_spawn_egg\";MinecraftItemTypes2[\"DoublePlant\"]=\"minecraft:double_plant\";MinecraftItemTypes2[\"DragonBreath\"]=\"minecraft:dragon_breath\";MinecraftItemTypes2[\"DragonEgg\"]=\"minecraft:dragon_egg\";MinecraftItemTypes2[\"DriedKelp\"]=\"minecraft:dried_kelp\";MinecraftItemTypes2[\"DriedKelpBlock\"]=\"minecraft:dried_kelp_block\";MinecraftItemTypes2[\"DripstoneBlock\"]=\"minecraft:dripstone_block\";MinecraftItemTypes2[\"Dropper\"]=\"minecraft:dropper\";MinecraftItemTypes2[\"DrownedSpawnEgg\"]=\"minecraft:drowned_spawn_egg\";MinecraftItemTypes2[\"DuneArmorTrimSmithingTemplate\"]=\"minecraft:dune_armor_trim_smithing_template\";MinecraftItemTypes2[\"Dye\"]=\"minecraft:dye\";MinecraftItemTypes2[\"EchoShard\"]=\"minecraft:echo_shard\";MinecraftItemTypes2[\"Egg\"]=\"minecraft:egg\";MinecraftItemTypes2[\"ElderGuardianSpawnEgg\"]=\"minecraft:elder_guardian_spawn_egg\";MinecraftItemTypes2[\"Elytra\"]=\"minecraft:elytra\";MinecraftItemTypes2[\"Emerald\"]=\"minecraft:emerald\";MinecraftItemTypes2[\"EmeraldBlock\"]=\"minecraft:emerald_block\";MinecraftItemTypes2[\"EmeraldOre\"]=\"minecraft:emerald_ore\";MinecraftItemTypes2[\"EmptyMap\"]=\"minecraft:empty_map\";MinecraftItemTypes2[\"EnchantedBook\"]=\"minecraft:enchanted_book\";MinecraftItemTypes2[\"EnchantedGoldenApple\"]=\"minecraft:enchanted_golden_apple\";MinecraftItemTypes2[\"EnchantingTable\"]=\"minecraft:enchanting_table\";MinecraftItemTypes2[\"EndBrickStairs\"]=\"minecraft:end_brick_stairs\";MinecraftItemTypes2[\"EndBricks\"]=\"minecraft:end_bricks\";MinecraftItemTypes2[\"EndCrystal\"]=\"minecraft:end_crystal\";MinecraftItemTypes2[\"EndPortalFrame\"]=\"minecraft:end_portal_frame\";MinecraftItemTypes2[\"EndRod\"]=\"minecraft:end_rod\";MinecraftItemTypes2[\"EndStone\"]=\"minecraft:end_stone\";MinecraftItemTypes2[\"EnderChest\"]=\"minecraft:ender_chest\";MinecraftItemTypes2[\"EnderDragonSpawnEgg\"]=\"minecraft:ender_dragon_spawn_egg\";MinecraftItemTypes2[\"EnderEye\"]=\"minecraft:ender_eye\";MinecraftItemTypes2[\"EnderPearl\"]=\"minecraft:ender_pearl\";MinecraftItemTypes2[\"EndermanSpawnEgg\"]=\"minecraft:enderman_spawn_egg\";MinecraftItemTypes2[\"EndermiteSpawnEgg\"]=\"minecraft:endermite_spawn_egg\";MinecraftItemTypes2[\"EvokerSpawnEgg\"]=\"minecraft:evoker_spawn_egg\";MinecraftItemTypes2[\"ExperienceBottle\"]=\"minecraft:experience_bottle\";MinecraftItemTypes2[\"ExplorerPotterySherd\"]=\"minecraft:explorer_pottery_sherd\";MinecraftItemTypes2[\"ExposedChiseledCopper\"]=\"minecraft:exposed_chiseled_copper\";MinecraftItemTypes2[\"ExposedCopper\"]=\"minecraft:exposed_copper\";MinecraftItemTypes2[\"ExposedCopperBulb\"]=\"minecraft:exposed_copper_bulb\";MinecraftItemTypes2[\"ExposedCopperDoor\"]=\"minecraft:exposed_copper_door\";MinecraftItemTypes2[\"ExposedCopperGrate\"]=\"minecraft:exposed_copper_grate\";MinecraftItemTypes2[\"ExposedCopperTrapdoor\"]=\"minecraft:exposed_copper_trapdoor\";MinecraftItemTypes2[\"ExposedCutCopper\"]=\"minecraft:exposed_cut_copper\";MinecraftItemTypes2[\"ExposedCutCopperSlab\"]=\"minecraft:exposed_cut_copper_slab\";MinecraftItemTypes2[\"ExposedCutCopperStairs\"]=\"minecraft:exposed_cut_copper_stairs\";MinecraftItemTypes2[\"EyeArmorTrimSmithingTemplate\"]=\"minecraft:eye_armor_trim_smithing_template\";MinecraftItemTypes2[\"Farmland\"]=\"minecraft:farmland\";MinecraftItemTypes2[\"Feather\"]=\"minecraft:feather\";MinecraftItemTypes2[\"Fence\"]=\"minecraft:fence\";MinecraftItemTypes2[\"FenceGate\"]=\"minecraft:fence_gate\";MinecraftItemTypes2[\"FermentedSpiderEye\"]=\"minecraft:fermented_spider_eye\";MinecraftItemTypes2[\"Fern\"]=\"minecraft:fern\";MinecraftItemTypes2[\"FieldMasonedBannerPattern\"]=\"minecraft:field_masoned_banner_pattern\";MinecraftItemTypes2[\"FilledMap\"]=\"minecraft:filled_map\";MinecraftItemTypes2[\"FireCharge\"]=\"minecraft:fire_charge\";MinecraftItemTypes2[\"FireCoral\"]=\"minecraft:fire_coral\";MinecraftItemTypes2[\"FireCoralBlock\"]=\"minecraft:fire_coral_block\";MinecraftItemTypes2[\"FireCoralFan\"]=\"minecraft:fire_coral_fan\";MinecraftItemTypes2[\"FireworkRocket\"]=\"minecraft:firework_rocket\";MinecraftItemTypes2[\"FireworkStar\"]=\"minecraft:firework_star\";MinecraftItemTypes2[\"FishingRod\"]=\"minecraft:fishing_rod\";MinecraftItemTypes2[\"FletchingTable\"]=\"minecraft:fletching_table\";MinecraftItemTypes2[\"Flint\"]=\"minecraft:flint\";MinecraftItemTypes2[\"FlintAndSteel\"]=\"minecraft:flint_and_steel\";MinecraftItemTypes2[\"FlowArmorTrimSmithingTemplate\"]=\"minecraft:flow_armor_trim_smithing_template\";MinecraftItemTypes2[\"FlowBannerPattern\"]=\"minecraft:flow_banner_pattern\";MinecraftItemTypes2[\"FlowPotterySherd\"]=\"minecraft:flow_pottery_sherd\";MinecraftItemTypes2[\"FlowerBannerPattern\"]=\"minecraft:flower_banner_pattern\";MinecraftItemTypes2[\"FlowerPot\"]=\"minecraft:flower_pot\";MinecraftItemTypes2[\"FloweringAzalea\"]=\"minecraft:flowering_azalea\";MinecraftItemTypes2[\"FoxSpawnEgg\"]=\"minecraft:fox_spawn_egg\";MinecraftItemTypes2[\"Frame\"]=\"minecraft:frame\";MinecraftItemTypes2[\"FriendPotterySherd\"]=\"minecraft:friend_pottery_sherd\";MinecraftItemTypes2[\"FrogSpawn\"]=\"minecraft:frog_spawn\";MinecraftItemTypes2[\"FrogSpawnEgg\"]=\"minecraft:frog_spawn_egg\";MinecraftItemTypes2[\"FrostedIce\"]=\"minecraft:frosted_ice\";MinecraftItemTypes2[\"Furnace\"]=\"minecraft:furnace\";MinecraftItemTypes2[\"GhastSpawnEgg\"]=\"minecraft:ghast_spawn_egg\";MinecraftItemTypes2[\"GhastTear\"]=\"minecraft:ghast_tear\";MinecraftItemTypes2[\"GildedBlackstone\"]=\"minecraft:gilded_blackstone\";MinecraftItemTypes2[\"Glass\"]=\"minecraft:glass\";MinecraftItemTypes2[\"GlassBottle\"]=\"minecraft:glass_bottle\";MinecraftItemTypes2[\"GlassPane\"]=\"minecraft:glass_pane\";MinecraftItemTypes2[\"GlisteringMelonSlice\"]=\"minecraft:glistering_melon_slice\";MinecraftItemTypes2[\"GlobeBannerPattern\"]=\"minecraft:globe_banner_pattern\";MinecraftItemTypes2[\"GlowBerries\"]=\"minecraft:glow_berries\";MinecraftItemTypes2[\"GlowFrame\"]=\"minecraft:glow_frame\";MinecraftItemTypes2[\"GlowInkSac\"]=\"minecraft:glow_ink_sac\";MinecraftItemTypes2[\"GlowLichen\"]=\"minecraft:glow_lichen\";MinecraftItemTypes2[\"GlowSquidSpawnEgg\"]=\"minecraft:glow_squid_spawn_egg\";MinecraftItemTypes2[\"Glowstone\"]=\"minecraft:glowstone\";MinecraftItemTypes2[\"GlowstoneDust\"]=\"minecraft:glowstone_dust\";MinecraftItemTypes2[\"GoatHorn\"]=\"minecraft:goat_horn\";MinecraftItemTypes2[\"GoatSpawnEgg\"]=\"minecraft:goat_spawn_egg\";MinecraftItemTypes2[\"GoldBlock\"]=\"minecraft:gold_block\";MinecraftItemTypes2[\"GoldIngot\"]=\"minecraft:gold_ingot\";MinecraftItemTypes2[\"GoldNugget\"]=\"minecraft:gold_nugget\";MinecraftItemTypes2[\"GoldOre\"]=\"minecraft:gold_ore\";MinecraftItemTypes2[\"GoldenApple\"]=\"minecraft:golden_apple\";MinecraftItemTypes2[\"GoldenAxe\"]=\"minecraft:golden_axe\";MinecraftItemTypes2[\"GoldenBoots\"]=\"minecraft:golden_boots\";MinecraftItemTypes2[\"GoldenCarrot\"]=\"minecraft:golden_carrot\";MinecraftItemTypes2[\"GoldenChestplate\"]=\"minecraft:golden_chestplate\";MinecraftItemTypes2[\"GoldenHelmet\"]=\"minecraft:golden_helmet\";MinecraftItemTypes2[\"GoldenHoe\"]=\"minecraft:golden_hoe\";MinecraftItemTypes2[\"GoldenHorseArmor\"]=\"minecraft:golden_horse_armor\";MinecraftItemTypes2[\"GoldenLeggings\"]=\"minecraft:golden_leggings\";MinecraftItemTypes2[\"GoldenPickaxe\"]=\"minecraft:golden_pickaxe\";MinecraftItemTypes2[\"GoldenRail\"]=\"minecraft:golden_rail\";MinecraftItemTypes2[\"GoldenShovel\"]=\"minecraft:golden_shovel\";MinecraftItemTypes2[\"GoldenSword\"]=\"minecraft:golden_sword\";MinecraftItemTypes2[\"Granite\"]=\"minecraft:granite\";MinecraftItemTypes2[\"GraniteStairs\"]=\"minecraft:granite_stairs\";MinecraftItemTypes2[\"GrassBlock\"]=\"minecraft:grass_block\";MinecraftItemTypes2[\"GrassPath\"]=\"minecraft:grass_path\";MinecraftItemTypes2[\"Gravel\"]=\"minecraft:gravel\";MinecraftItemTypes2[\"GrayCandle\"]=\"minecraft:gray_candle\";MinecraftItemTypes2[\"GrayCarpet\"]=\"minecraft:gray_carpet\";MinecraftItemTypes2[\"GrayConcrete\"]=\"minecraft:gray_concrete\";MinecraftItemTypes2[\"GrayConcretePowder\"]=\"minecraft:gray_concrete_powder\";MinecraftItemTypes2[\"GrayDye\"]=\"minecraft:gray_dye\";MinecraftItemTypes2[\"GrayGlazedTerracotta\"]=\"minecraft:gray_glazed_terracotta\";MinecraftItemTypes2[\"GrayShulkerBox\"]=\"minecraft:gray_shulker_box\";MinecraftItemTypes2[\"GrayStainedGlass\"]=\"minecraft:gray_stained_glass\";MinecraftItemTypes2[\"GrayStainedGlassPane\"]=\"minecraft:gray_stained_glass_pane\";MinecraftItemTypes2[\"GrayTerracotta\"]=\"minecraft:gray_terracotta\";MinecraftItemTypes2[\"GrayWool\"]=\"minecraft:gray_wool\";MinecraftItemTypes2[\"GreenCandle\"]=\"minecraft:green_candle\";MinecraftItemTypes2[\"GreenCarpet\"]=\"minecraft:green_carpet\";MinecraftItemTypes2[\"GreenConcrete\"]=\"minecraft:green_concrete\";MinecraftItemTypes2[\"GreenConcretePowder\"]=\"minecraft:green_concrete_powder\";MinecraftItemTypes2[\"GreenDye\"]=\"minecraft:green_dye\";MinecraftItemTypes2[\"GreenGlazedTerracotta\"]=\"minecraft:green_glazed_terracotta\";MinecraftItemTypes2[\"GreenShulkerBox\"]=\"minecraft:green_shulker_box\";MinecraftItemTypes2[\"GreenStainedGlass\"]=\"minecraft:green_stained_glass\";MinecraftItemTypes2[\"GreenStainedGlassPane\"]=\"minecraft:green_stained_glass_pane\";MinecraftItemTypes2[\"GreenTerracotta\"]=\"minecraft:green_terracotta\";MinecraftItemTypes2[\"GreenWool\"]=\"minecraft:green_wool\";MinecraftItemTypes2[\"Grindstone\"]=\"minecraft:grindstone\";MinecraftItemTypes2[\"GuardianSpawnEgg\"]=\"minecraft:guardian_spawn_egg\";MinecraftItemTypes2[\"Gunpowder\"]=\"minecraft:gunpowder\";MinecraftItemTypes2[\"GusterBannerPattern\"]=\"minecraft:guster_banner_pattern\";MinecraftItemTypes2[\"GusterPotterySherd\"]=\"minecraft:guster_pottery_sherd\";MinecraftItemTypes2[\"HangingRoots\"]=\"minecraft:hanging_roots\";MinecraftItemTypes2[\"HardStainedGlass\"]=\"minecraft:hard_stained_glass\";MinecraftItemTypes2[\"HardStainedGlassPane\"]=\"minecraft:hard_stained_glass_pane\";MinecraftItemTypes2[\"HardenedClay\"]=\"minecraft:hardened_clay\";MinecraftItemTypes2[\"HayBlock\"]=\"minecraft:hay_block\";MinecraftItemTypes2[\"HeartOfTheSea\"]=\"minecraft:heart_of_the_sea\";MinecraftItemTypes2[\"HeartPotterySherd\"]=\"minecraft:heart_pottery_sherd\";MinecraftItemTypes2[\"HeartbreakPotterySherd\"]=\"minecraft:heartbreak_pottery_sherd\";MinecraftItemTypes2[\"HeavyCore\"]=\"minecraft:heavy_core\";MinecraftItemTypes2[\"HeavyWeightedPressurePlate\"]=\"minecraft:heavy_weighted_pressure_plate\";MinecraftItemTypes2[\"HoglinSpawnEgg\"]=\"minecraft:hoglin_spawn_egg\";MinecraftItemTypes2[\"HoneyBlock\"]=\"minecraft:honey_block\";MinecraftItemTypes2[\"HoneyBottle\"]=\"minecraft:honey_bottle\";MinecraftItemTypes2[\"Honeycomb\"]=\"minecraft:honeycomb\";MinecraftItemTypes2[\"HoneycombBlock\"]=\"minecraft:honeycomb_block\";MinecraftItemTypes2[\"Hopper\"]=\"minecraft:hopper\";MinecraftItemTypes2[\"HopperMinecart\"]=\"minecraft:hopper_minecart\";MinecraftItemTypes2[\"HornCoral\"]=\"minecraft:horn_coral\";MinecraftItemTypes2[\"HornCoralBlock\"]=\"minecraft:horn_coral_block\";MinecraftItemTypes2[\"HornCoralFan\"]=\"minecraft:horn_coral_fan\";MinecraftItemTypes2[\"HorseSpawnEgg\"]=\"minecraft:horse_spawn_egg\";MinecraftItemTypes2[\"HostArmorTrimSmithingTemplate\"]=\"minecraft:host_armor_trim_smithing_template\";MinecraftItemTypes2[\"HowlPotterySherd\"]=\"minecraft:howl_pottery_sherd\";MinecraftItemTypes2[\"HuskSpawnEgg\"]=\"minecraft:husk_spawn_egg\";MinecraftItemTypes2[\"Ice\"]=\"minecraft:ice\";MinecraftItemTypes2[\"InfestedDeepslate\"]=\"minecraft:infested_deepslate\";MinecraftItemTypes2[\"InkSac\"]=\"minecraft:ink_sac\";MinecraftItemTypes2[\"IronAxe\"]=\"minecraft:iron_axe\";MinecraftItemTypes2[\"IronBars\"]=\"minecraft:iron_bars\";MinecraftItemTypes2[\"IronBlock\"]=\"minecraft:iron_block\";MinecraftItemTypes2[\"IronBoots\"]=\"minecraft:iron_boots\";MinecraftItemTypes2[\"IronChestplate\"]=\"minecraft:iron_chestplate\";MinecraftItemTypes2[\"IronDoor\"]=\"minecraft:iron_door\";MinecraftItemTypes2[\"IronGolemSpawnEgg\"]=\"minecraft:iron_golem_spawn_egg\";MinecraftItemTypes2[\"IronHelmet\"]=\"minecraft:iron_helmet\";MinecraftItemTypes2[\"IronHoe\"]=\"minecraft:iron_hoe\";MinecraftItemTypes2[\"IronHorseArmor\"]=\"minecraft:iron_horse_armor\";MinecraftItemTypes2[\"IronIngot\"]=\"minecraft:iron_ingot\";MinecraftItemTypes2[\"IronLeggings\"]=\"minecraft:iron_leggings\";MinecraftItemTypes2[\"IronNugget\"]=\"minecraft:iron_nugget\";MinecraftItemTypes2[\"IronOre\"]=\"minecraft:iron_ore\";MinecraftItemTypes2[\"IronPickaxe\"]=\"minecraft:iron_pickaxe\";MinecraftItemTypes2[\"IronShovel\"]=\"minecraft:iron_shovel\";MinecraftItemTypes2[\"IronSword\"]=\"minecraft:iron_sword\";MinecraftItemTypes2[\"IronTrapdoor\"]=\"minecraft:iron_trapdoor\";MinecraftItemTypes2[\"Jigsaw\"]=\"minecraft:jigsaw\";MinecraftItemTypes2[\"Jukebox\"]=\"minecraft:jukebox\";MinecraftItemTypes2[\"JungleBoat\"]=\"minecraft:jungle_boat\";MinecraftItemTypes2[\"JungleButton\"]=\"minecraft:jungle_button\";MinecraftItemTypes2[\"JungleChestBoat\"]=\"minecraft:jungle_chest_boat\";MinecraftItemTypes2[\"JungleDoor\"]=\"minecraft:jungle_door\";MinecraftItemTypes2[\"JungleFence\"]=\"minecraft:jungle_fence\";MinecraftItemTypes2[\"JungleFenceGate\"]=\"minecraft:jungle_fence_gate\";MinecraftItemTypes2[\"JungleHangingSign\"]=\"minecraft:jungle_hanging_sign\";MinecraftItemTypes2[\"JungleLeaves\"]=\"minecraft:jungle_leaves\";MinecraftItemTypes2[\"JungleLog\"]=\"minecraft:jungle_log\";MinecraftItemTypes2[\"JunglePlanks\"]=\"minecraft:jungle_planks\";MinecraftItemTypes2[\"JunglePressurePlate\"]=\"minecraft:jungle_pressure_plate\";MinecraftItemTypes2[\"JungleSapling\"]=\"minecraft:jungle_sapling\";MinecraftItemTypes2[\"JungleSign\"]=\"minecraft:jungle_sign\";MinecraftItemTypes2[\"JungleSlab\"]=\"minecraft:jungle_slab\";MinecraftItemTypes2[\"JungleStairs\"]=\"minecraft:jungle_stairs\";MinecraftItemTypes2[\"JungleTrapdoor\"]=\"minecraft:jungle_trapdoor\";MinecraftItemTypes2[\"JungleWood\"]=\"minecraft:jungle_wood\";MinecraftItemTypes2[\"Kelp\"]=\"minecraft:kelp\";MinecraftItemTypes2[\"Ladder\"]=\"minecraft:ladder\";MinecraftItemTypes2[\"Lantern\"]=\"minecraft:lantern\";MinecraftItemTypes2[\"LapisBlock\"]=\"minecraft:lapis_block\";MinecraftItemTypes2[\"LapisLazuli\"]=\"minecraft:lapis_lazuli\";MinecraftItemTypes2[\"LapisOre\"]=\"minecraft:lapis_ore\";MinecraftItemTypes2[\"LargeAmethystBud\"]=\"minecraft:large_amethyst_bud\";MinecraftItemTypes2[\"LargeFern\"]=\"minecraft:large_fern\";MinecraftItemTypes2[\"LavaBucket\"]=\"minecraft:lava_bucket\";MinecraftItemTypes2[\"Lead\"]=\"minecraft:lead\";MinecraftItemTypes2[\"Leather\"]=\"minecraft:leather\";MinecraftItemTypes2[\"LeatherBoots\"]=\"minecraft:leather_boots\";MinecraftItemTypes2[\"LeatherChestplate\"]=\"minecraft:leather_chestplate\";MinecraftItemTypes2[\"LeatherHelmet\"]=\"minecraft:leather_helmet\";MinecraftItemTypes2[\"LeatherHorseArmor\"]=\"minecraft:leather_horse_armor\";MinecraftItemTypes2[\"LeatherLeggings\"]=\"minecraft:leather_leggings\";MinecraftItemTypes2[\"Leaves\"]=\"minecraft:leaves\";MinecraftItemTypes2[\"Leaves2\"]=\"minecraft:leaves2\";MinecraftItemTypes2[\"Lectern\"]=\"minecraft:lectern\";MinecraftItemTypes2[\"Lever\"]=\"minecraft:lever\";MinecraftItemTypes2[\"LightBlock\"]=\"minecraft:light_block\";MinecraftItemTypes2[\"LightBlueCandle\"]=\"minecraft:light_blue_candle\";MinecraftItemTypes2[\"LightBlueCarpet\"]=\"minecraft:light_blue_carpet\";MinecraftItemTypes2[\"LightBlueConcrete\"]=\"minecraft:light_blue_concrete\";MinecraftItemTypes2[\"LightBlueConcretePowder\"]=\"minecraft:light_blue_concrete_powder\";MinecraftItemTypes2[\"LightBlueDye\"]=\"minecraft:light_blue_dye\";MinecraftItemTypes2[\"LightBlueGlazedTerracotta\"]=\"minecraft:light_blue_glazed_terracotta\";MinecraftItemTypes2[\"LightBlueShulkerBox\"]=\"minecraft:light_blue_shulker_box\";MinecraftItemTypes2[\"LightBlueStainedGlass\"]=\"minecraft:light_blue_stained_glass\";MinecraftItemTypes2[\"LightBlueStainedGlassPane\"]=\"minecraft:light_blue_stained_glass_pane\";MinecraftItemTypes2[\"LightBlueTerracotta\"]=\"minecraft:light_blue_terracotta\";MinecraftItemTypes2[\"LightBlueWool\"]=\"minecraft:light_blue_wool\";MinecraftItemTypes2[\"LightGrayCandle\"]=\"minecraft:light_gray_candle\";MinecraftItemTypes2[\"LightGrayCarpet\"]=\"minecraft:light_gray_carpet\";MinecraftItemTypes2[\"LightGrayConcrete\"]=\"minecraft:light_gray_concrete\";MinecraftItemTypes2[\"LightGrayConcretePowder\"]=\"minecraft:light_gray_concrete_powder\";MinecraftItemTypes2[\"LightGrayDye\"]=\"minecraft:light_gray_dye\";MinecraftItemTypes2[\"LightGrayShulkerBox\"]=\"minecraft:light_gray_shulker_box\";MinecraftItemTypes2[\"LightGrayStainedGlass\"]=\"minecraft:light_gray_stained_glass\";MinecraftItemTypes2[\"LightGrayStainedGlassPane\"]=\"minecraft:light_gray_stained_glass_pane\";MinecraftItemTypes2[\"LightGrayTerracotta\"]=\"minecraft:light_gray_terracotta\";MinecraftItemTypes2[\"LightGrayWool\"]=\"minecraft:light_gray_wool\";MinecraftItemTypes2[\"LightWeightedPressurePlate\"]=\"minecraft:light_weighted_pressure_plate\";MinecraftItemTypes2[\"LightningRod\"]=\"minecraft:lightning_rod\";MinecraftItemTypes2[\"Lilac\"]=\"minecraft:lilac\";MinecraftItemTypes2[\"LilyOfTheValley\"]=\"minecraft:lily_of_the_valley\";MinecraftItemTypes2[\"LimeCandle\"]=\"minecraft:lime_candle\";MinecraftItemTypes2[\"LimeCarpet\"]=\"minecraft:lime_carpet\";MinecraftItemTypes2[\"LimeConcrete\"]=\"minecraft:lime_concrete\";MinecraftItemTypes2[\"LimeConcretePowder\"]=\"minecraft:lime_concrete_powder\";MinecraftItemTypes2[\"LimeDye\"]=\"minecraft:lime_dye\";MinecraftItemTypes2[\"LimeGlazedTerracotta\"]=\"minecraft:lime_glazed_terracotta\";MinecraftItemTypes2[\"LimeShulkerBox\"]=\"minecraft:lime_shulker_box\";MinecraftItemTypes2[\"LimeStainedGlass\"]=\"minecraft:lime_stained_glass\";MinecraftItemTypes2[\"LimeStainedGlassPane\"]=\"minecraft:lime_stained_glass_pane\";MinecraftItemTypes2[\"LimeTerracotta\"]=\"minecraft:lime_terracotta\";MinecraftItemTypes2[\"LimeWool\"]=\"minecraft:lime_wool\";MinecraftItemTypes2[\"LingeringPotion\"]=\"minecraft:lingering_potion\";MinecraftItemTypes2[\"LitPumpkin\"]=\"minecraft:lit_pumpkin\";MinecraftItemTypes2[\"LlamaSpawnEgg\"]=\"minecraft:llama_spawn_egg\";MinecraftItemTypes2[\"Lodestone\"]=\"minecraft:lodestone\";MinecraftItemTypes2[\"LodestoneCompass\"]=\"minecraft:lodestone_compass\";MinecraftItemTypes2[\"Log\"]=\"minecraft:log\";MinecraftItemTypes2[\"Log2\"]=\"minecraft:log2\";MinecraftItemTypes2[\"Loom\"]=\"minecraft:loom\";MinecraftItemTypes2[\"Mace\"]=\"minecraft:mace\";MinecraftItemTypes2[\"MagentaCandle\"]=\"minecraft:magenta_candle\";MinecraftItemTypes2[\"MagentaCarpet\"]=\"minecraft:magenta_carpet\";MinecraftItemTypes2[\"MagentaConcrete\"]=\"minecraft:magenta_concrete\";MinecraftItemTypes2[\"MagentaConcretePowder\"]=\"minecraft:magenta_concrete_powder\";MinecraftItemTypes2[\"MagentaDye\"]=\"minecraft:magenta_dye\";MinecraftItemTypes2[\"MagentaGlazedTerracotta\"]=\"minecraft:magenta_glazed_terracotta\";MinecraftItemTypes2[\"MagentaShulkerBox\"]=\"minecraft:magenta_shulker_box\";MinecraftItemTypes2[\"MagentaStainedGlass\"]=\"minecraft:magenta_stained_glass\";MinecraftItemTypes2[\"MagentaStainedGlassPane\"]=\"minecraft:magenta_stained_glass_pane\";MinecraftItemTypes2[\"MagentaTerracotta\"]=\"minecraft:magenta_terracotta\";MinecraftItemTypes2[\"MagentaWool\"]=\"minecraft:magenta_wool\";MinecraftItemTypes2[\"Magma\"]=\"minecraft:magma\";MinecraftItemTypes2[\"MagmaCream\"]=\"minecraft:magma_cream\";MinecraftItemTypes2[\"MagmaCubeSpawnEgg\"]=\"minecraft:magma_cube_spawn_egg\";MinecraftItemTypes2[\"MangroveBoat\"]=\"minecraft:mangrove_boat\";MinecraftItemTypes2[\"MangroveButton\"]=\"minecraft:mangrove_button\";MinecraftItemTypes2[\"MangroveChestBoat\"]=\"minecraft:mangrove_chest_boat\";MinecraftItemTypes2[\"MangroveDoor\"]=\"minecraft:mangrove_door\";MinecraftItemTypes2[\"MangroveFence\"]=\"minecraft:mangrove_fence\";MinecraftItemTypes2[\"MangroveFenceGate\"]=\"minecraft:mangrove_fence_gate\";MinecraftItemTypes2[\"MangroveHangingSign\"]=\"minecraft:mangrove_hanging_sign\";MinecraftItemTypes2[\"MangroveLeaves\"]=\"minecraft:mangrove_leaves\";MinecraftItemTypes2[\"MangroveLog\"]=\"minecraft:mangrove_log\";MinecraftItemTypes2[\"MangrovePlanks\"]=\"minecraft:mangrove_planks\";MinecraftItemTypes2[\"MangrovePressurePlate\"]=\"minecraft:mangrove_pressure_plate\";MinecraftItemTypes2[\"MangrovePropagule\"]=\"minecraft:mangrove_propagule\";MinecraftItemTypes2[\"MangroveRoots\"]=\"minecraft:mangrove_roots\";MinecraftItemTypes2[\"MangroveSign\"]=\"minecraft:mangrove_sign\";MinecraftItemTypes2[\"MangroveSlab\"]=\"minecraft:mangrove_slab\";MinecraftItemTypes2[\"MangroveStairs\"]=\"minecraft:mangrove_stairs\";MinecraftItemTypes2[\"MangroveTrapdoor\"]=\"minecraft:mangrove_trapdoor\";MinecraftItemTypes2[\"MangroveWood\"]=\"minecraft:mangrove_wood\";MinecraftItemTypes2[\"MediumAmethystBud\"]=\"minecraft:medium_amethyst_bud\";MinecraftItemTypes2[\"MelonBlock\"]=\"minecraft:melon_block\";MinecraftItemTypes2[\"MelonSeeds\"]=\"minecraft:melon_seeds\";MinecraftItemTypes2[\"MelonSlice\"]=\"minecraft:melon_slice\";MinecraftItemTypes2[\"MilkBucket\"]=\"minecraft:milk_bucket\";MinecraftItemTypes2[\"Minecart\"]=\"minecraft:minecart\";MinecraftItemTypes2[\"MinerPotterySherd\"]=\"minecraft:miner_pottery_sherd\";MinecraftItemTypes2[\"MobSpawner\"]=\"minecraft:mob_spawner\";MinecraftItemTypes2[\"MojangBannerPattern\"]=\"minecraft:mojang_banner_pattern\";MinecraftItemTypes2[\"MonsterEgg\"]=\"minecraft:monster_egg\";MinecraftItemTypes2[\"MooshroomSpawnEgg\"]=\"minecraft:mooshroom_spawn_egg\";MinecraftItemTypes2[\"MossBlock\"]=\"minecraft:moss_block\";MinecraftItemTypes2[\"MossCarpet\"]=\"minecraft:moss_carpet\";MinecraftItemTypes2[\"MossyCobblestone\"]=\"minecraft:mossy_cobblestone\";MinecraftItemTypes2[\"MossyCobblestoneStairs\"]=\"minecraft:mossy_cobblestone_stairs\";MinecraftItemTypes2[\"MossyStoneBrickStairs\"]=\"minecraft:mossy_stone_brick_stairs\";MinecraftItemTypes2[\"MournerPotterySherd\"]=\"minecraft:mourner_pottery_sherd\";MinecraftItemTypes2[\"Mud\"]=\"minecraft:mud\";MinecraftItemTypes2[\"MudBrickSlab\"]=\"minecraft:mud_brick_slab\";MinecraftItemTypes2[\"MudBrickStairs\"]=\"minecraft:mud_brick_stairs\";MinecraftItemTypes2[\"MudBrickWall\"]=\"minecraft:mud_brick_wall\";MinecraftItemTypes2[\"MudBricks\"]=\"minecraft:mud_bricks\";MinecraftItemTypes2[\"MuddyMangroveRoots\"]=\"minecraft:muddy_mangrove_roots\";MinecraftItemTypes2[\"MuleSpawnEgg\"]=\"minecraft:mule_spawn_egg\";MinecraftItemTypes2[\"MushroomStew\"]=\"minecraft:mushroom_stew\";MinecraftItemTypes2[\"MusicDisc11\"]=\"minecraft:music_disc_11\";MinecraftItemTypes2[\"MusicDisc13\"]=\"minecraft:music_disc_13\";MinecraftItemTypes2[\"MusicDisc5\"]=\"minecraft:music_disc_5\";MinecraftItemTypes2[\"MusicDiscBlocks\"]=\"minecraft:music_disc_blocks\";MinecraftItemTypes2[\"MusicDiscCat\"]=\"minecraft:music_disc_cat\";MinecraftItemTypes2[\"MusicDiscChirp\"]=\"minecraft:music_disc_chirp\";MinecraftItemTypes2[\"MusicDiscCreator\"]=\"minecraft:music_disc_creator\";MinecraftItemTypes2[\"MusicDiscCreatorMusicBox\"]=\"minecraft:music_disc_creator_music_box\";MinecraftItemTypes2[\"MusicDiscFar\"]=\"minecraft:music_disc_far\";MinecraftItemTypes2[\"MusicDiscMall\"]=\"minecraft:music_disc_mall\";MinecraftItemTypes2[\"MusicDiscMellohi\"]=\"minecraft:music_disc_mellohi\";MinecraftItemTypes2[\"MusicDiscOtherside\"]=\"minecraft:music_disc_otherside\";MinecraftItemTypes2[\"MusicDiscPigstep\"]=\"minecraft:music_disc_pigstep\";MinecraftItemTypes2[\"MusicDiscPrecipice\"]=\"minecraft:music_disc_precipice\";MinecraftItemTypes2[\"MusicDiscRelic\"]=\"minecraft:music_disc_relic\";MinecraftItemTypes2[\"MusicDiscStal\"]=\"minecraft:music_disc_stal\";MinecraftItemTypes2[\"MusicDiscStrad\"]=\"minecraft:music_disc_strad\";MinecraftItemTypes2[\"MusicDiscWait\"]=\"minecraft:music_disc_wait\";MinecraftItemTypes2[\"MusicDiscWard\"]=\"minecraft:music_disc_ward\";MinecraftItemTypes2[\"Mutton\"]=\"minecraft:mutton\";MinecraftItemTypes2[\"Mycelium\"]=\"minecraft:mycelium\";MinecraftItemTypes2[\"NameTag\"]=\"minecraft:name_tag\";MinecraftItemTypes2[\"NautilusShell\"]=\"minecraft:nautilus_shell\";MinecraftItemTypes2[\"NetherBrick\"]=\"minecraft:nether_brick\";MinecraftItemTypes2[\"NetherBrickFence\"]=\"minecraft:nether_brick_fence\";MinecraftItemTypes2[\"NetherBrickSlab\"]=\"minecraft:nether_brick_slab\";MinecraftItemTypes2[\"NetherBrickStairs\"]=\"minecraft:nether_brick_stairs\";MinecraftItemTypes2[\"NetherGoldOre\"]=\"minecraft:nether_gold_ore\";MinecraftItemTypes2[\"NetherSprouts\"]=\"minecraft:nether_sprouts\";MinecraftItemTypes2[\"NetherStar\"]=\"minecraft:nether_star\";MinecraftItemTypes2[\"NetherWart\"]=\"minecraft:nether_wart\";MinecraftItemTypes2[\"NetherWartBlock\"]=\"minecraft:nether_wart_block\";MinecraftItemTypes2[\"Netherbrick\"]=\"minecraft:netherbrick\";MinecraftItemTypes2[\"NetheriteAxe\"]=\"minecraft:netherite_axe\";MinecraftItemTypes2[\"NetheriteBlock\"]=\"minecraft:netherite_block\";MinecraftItemTypes2[\"NetheriteBoots\"]=\"minecraft:netherite_boots\";MinecraftItemTypes2[\"NetheriteChestplate\"]=\"minecraft:netherite_chestplate\";MinecraftItemTypes2[\"NetheriteHelmet\"]=\"minecraft:netherite_helmet\";MinecraftItemTypes2[\"NetheriteHoe\"]=\"minecraft:netherite_hoe\";MinecraftItemTypes2[\"NetheriteIngot\"]=\"minecraft:netherite_ingot\";MinecraftItemTypes2[\"NetheriteLeggings\"]=\"minecraft:netherite_leggings\";MinecraftItemTypes2[\"NetheritePickaxe\"]=\"minecraft:netherite_pickaxe\";MinecraftItemTypes2[\"NetheriteScrap\"]=\"minecraft:netherite_scrap\";MinecraftItemTypes2[\"NetheriteShovel\"]=\"minecraft:netherite_shovel\";MinecraftItemTypes2[\"NetheriteSword\"]=\"minecraft:netherite_sword\";MinecraftItemTypes2[\"NetheriteUpgradeSmithingTemplate\"]=\"minecraft:netherite_upgrade_smithing_template\";MinecraftItemTypes2[\"Netherrack\"]=\"minecraft:netherrack\";MinecraftItemTypes2[\"NormalStoneStairs\"]=\"minecraft:normal_stone_stairs\";MinecraftItemTypes2[\"Noteblock\"]=\"minecraft:noteblock\";MinecraftItemTypes2[\"OakBoat\"]=\"minecraft:oak_boat\";MinecraftItemTypes2[\"OakChestBoat\"]=\"minecraft:oak_chest_boat\";MinecraftItemTypes2[\"OakFence\"]=\"minecraft:oak_fence\";MinecraftItemTypes2[\"OakHangingSign\"]=\"minecraft:oak_hanging_sign\";MinecraftItemTypes2[\"OakLeaves\"]=\"minecraft:oak_leaves\";MinecraftItemTypes2[\"OakLog\"]=\"minecraft:oak_log\";MinecraftItemTypes2[\"OakPlanks\"]=\"minecraft:oak_planks\";MinecraftItemTypes2[\"OakSapling\"]=\"minecraft:oak_sapling\";MinecraftItemTypes2[\"OakSign\"]=\"minecraft:oak_sign\";MinecraftItemTypes2[\"OakSlab\"]=\"minecraft:oak_slab\";MinecraftItemTypes2[\"OakStairs\"]=\"minecraft:oak_stairs\";MinecraftItemTypes2[\"OakWood\"]=\"minecraft:oak_wood\";MinecraftItemTypes2[\"Observer\"]=\"minecraft:observer\";MinecraftItemTypes2[\"Obsidian\"]=\"minecraft:obsidian\";MinecraftItemTypes2[\"OcelotSpawnEgg\"]=\"minecraft:ocelot_spawn_egg\";MinecraftItemTypes2[\"OchreFroglight\"]=\"minecraft:ochre_froglight\";MinecraftItemTypes2[\"OminousBottle\"]=\"minecraft:ominous_bottle\";MinecraftItemTypes2[\"OminousTrialKey\"]=\"minecraft:ominous_trial_key\";MinecraftItemTypes2[\"OrangeCandle\"]=\"minecraft:orange_candle\";MinecraftItemTypes2[\"OrangeCarpet\"]=\"minecraft:orange_carpet\";MinecraftItemTypes2[\"OrangeConcrete\"]=\"minecraft:orange_concrete\";MinecraftItemTypes2[\"OrangeConcretePowder\"]=\"minecraft:orange_concrete_powder\";MinecraftItemTypes2[\"OrangeDye\"]=\"minecraft:orange_dye\";MinecraftItemTypes2[\"OrangeGlazedTerracotta\"]=\"minecraft:orange_glazed_terracotta\";MinecraftItemTypes2[\"OrangeShulkerBox\"]=\"minecraft:orange_shulker_box\";MinecraftItemTypes2[\"OrangeStainedGlass\"]=\"minecraft:orange_stained_glass\";MinecraftItemTypes2[\"OrangeStainedGlassPane\"]=\"minecraft:orange_stained_glass_pane\";MinecraftItemTypes2[\"OrangeTerracotta\"]=\"minecraft:orange_terracotta\";MinecraftItemTypes2[\"OrangeTulip\"]=\"minecraft:orange_tulip\";MinecraftItemTypes2[\"OrangeWool\"]=\"minecraft:orange_wool\";MinecraftItemTypes2[\"OxeyeDaisy\"]=\"minecraft:oxeye_daisy\";MinecraftItemTypes2[\"OxidizedChiseledCopper\"]=\"minecraft:oxidized_chiseled_copper\";MinecraftItemTypes2[\"OxidizedCopper\"]=\"minecraft:oxidized_copper\";MinecraftItemTypes2[\"OxidizedCopperBulb\"]=\"minecraft:oxidized_copper_bulb\";MinecraftItemTypes2[\"OxidizedCopperDoor\"]=\"minecraft:oxidized_copper_door\";MinecraftItemTypes2[\"OxidizedCopperGrate\"]=\"minecraft:oxidized_copper_grate\";MinecraftItemTypes2[\"OxidizedCopperTrapdoor\"]=\"minecraft:oxidized_copper_trapdoor\";MinecraftItemTypes2[\"OxidizedCutCopper\"]=\"minecraft:oxidized_cut_copper\";MinecraftItemTypes2[\"OxidizedCutCopperSlab\"]=\"minecraft:oxidized_cut_copper_slab\";MinecraftItemTypes2[\"OxidizedCutCopperStairs\"]=\"minecraft:oxidized_cut_copper_stairs\";MinecraftItemTypes2[\"PackedIce\"]=\"minecraft:packed_ice\";MinecraftItemTypes2[\"PackedMud\"]=\"minecraft:packed_mud\";MinecraftItemTypes2[\"Painting\"]=\"minecraft:painting\";MinecraftItemTypes2[\"PandaSpawnEgg\"]=\"minecraft:panda_spawn_egg\";MinecraftItemTypes2[\"Paper\"]=\"minecraft:paper\";MinecraftItemTypes2[\"ParrotSpawnEgg\"]=\"minecraft:parrot_spawn_egg\";MinecraftItemTypes2[\"PearlescentFroglight\"]=\"minecraft:pearlescent_froglight\";MinecraftItemTypes2[\"Peony\"]=\"minecraft:peony\";MinecraftItemTypes2[\"PetrifiedOakSlab\"]=\"minecraft:petrified_oak_slab\";MinecraftItemTypes2[\"PhantomMembrane\"]=\"minecraft:phantom_membrane\";MinecraftItemTypes2[\"PhantomSpawnEgg\"]=\"minecraft:phantom_spawn_egg\";MinecraftItemTypes2[\"PigSpawnEgg\"]=\"minecraft:pig_spawn_egg\";MinecraftItemTypes2[\"PiglinBannerPattern\"]=\"minecraft:piglin_banner_pattern\";MinecraftItemTypes2[\"PiglinBruteSpawnEgg\"]=\"minecraft:piglin_brute_spawn_egg\";MinecraftItemTypes2[\"PiglinSpawnEgg\"]=\"minecraft:piglin_spawn_egg\";MinecraftItemTypes2[\"PillagerSpawnEgg\"]=\"minecraft:pillager_spawn_egg\";MinecraftItemTypes2[\"PinkCandle\"]=\"minecraft:pink_candle\";MinecraftItemTypes2[\"PinkCarpet\"]=\"minecraft:pink_carpet\";MinecraftItemTypes2[\"PinkConcrete\"]=\"minecraft:pink_concrete\";MinecraftItemTypes2[\"PinkConcretePowder\"]=\"minecraft:pink_concrete_powder\";MinecraftItemTypes2[\"PinkDye\"]=\"minecraft:pink_dye\";MinecraftItemTypes2[\"PinkGlazedTerracotta\"]=\"minecraft:pink_glazed_terracotta\";MinecraftItemTypes2[\"PinkPetals\"]=\"minecraft:pink_petals\";MinecraftItemTypes2[\"PinkShulkerBox\"]=\"minecraft:pink_shulker_box\";MinecraftItemTypes2[\"PinkStainedGlass\"]=\"minecraft:pink_stained_glass\";MinecraftItemTypes2[\"PinkStainedGlassPane\"]=\"minecraft:pink_stained_glass_pane\";MinecraftItemTypes2[\"PinkTerracotta\"]=\"minecraft:pink_terracotta\";MinecraftItemTypes2[\"PinkTulip\"]=\"minecraft:pink_tulip\";MinecraftItemTypes2[\"PinkWool\"]=\"minecraft:pink_wool\";MinecraftItemTypes2[\"Piston\"]=\"minecraft:piston\";MinecraftItemTypes2[\"PitcherPlant\"]=\"minecraft:pitcher_plant\";MinecraftItemTypes2[\"PitcherPod\"]=\"minecraft:pitcher_pod\";MinecraftItemTypes2[\"Planks\"]=\"minecraft:planks\";MinecraftItemTypes2[\"PlentyPotterySherd\"]=\"minecraft:plenty_pottery_sherd\";MinecraftItemTypes2[\"Podzol\"]=\"minecraft:podzol\";MinecraftItemTypes2[\"PointedDripstone\"]=\"minecraft:pointed_dripstone\";MinecraftItemTypes2[\"PoisonousPotato\"]=\"minecraft:poisonous_potato\";MinecraftItemTypes2[\"PolarBearSpawnEgg\"]=\"minecraft:polar_bear_spawn_egg\";MinecraftItemTypes2[\"PolishedAndesite\"]=\"minecraft:polished_andesite\";MinecraftItemTypes2[\"PolishedAndesiteStairs\"]=\"minecraft:polished_andesite_stairs\";MinecraftItemTypes2[\"PolishedBasalt\"]=\"minecraft:polished_basalt\";MinecraftItemTypes2[\"PolishedBlackstone\"]=\"minecraft:polished_blackstone\";MinecraftItemTypes2[\"PolishedBlackstoneBrickSlab\"]=\"minecraft:polished_blackstone_brick_slab\";MinecraftItemTypes2[\"PolishedBlackstoneBrickStairs\"]=\"minecraft:polished_blackstone_brick_stairs\";MinecraftItemTypes2[\"PolishedBlackstoneBrickWall\"]=\"minecraft:polished_blackstone_brick_wall\";MinecraftItemTypes2[\"PolishedBlackstoneBricks\"]=\"minecraft:polished_blackstone_bricks\";MinecraftItemTypes2[\"PolishedBlackstoneButton\"]=\"minecraft:polished_blackstone_button\";MinecraftItemTypes2[\"PolishedBlackstonePressurePlate\"]=\"minecraft:polished_blackstone_pressure_plate\";MinecraftItemTypes2[\"PolishedBlackstoneSlab\"]=\"minecraft:polished_blackstone_slab\";MinecraftItemTypes2[\"PolishedBlackstoneStairs\"]=\"minecraft:polished_blackstone_stairs\";MinecraftItemTypes2[\"PolishedBlackstoneWall\"]=\"minecraft:polished_blackstone_wall\";MinecraftItemTypes2[\"PolishedDeepslate\"]=\"minecraft:polished_deepslate\";MinecraftItemTypes2[\"PolishedDeepslateSlab\"]=\"minecraft:polished_deepslate_slab\";MinecraftItemTypes2[\"PolishedDeepslateStairs\"]=\"minecraft:polished_deepslate_stairs\";MinecraftItemTypes2[\"PolishedDeepslateWall\"]=\"minecraft:polished_deepslate_wall\";MinecraftItemTypes2[\"PolishedDiorite\"]=\"minecraft:polished_diorite\";MinecraftItemTypes2[\"PolishedDioriteStairs\"]=\"minecraft:polished_diorite_stairs\";MinecraftItemTypes2[\"PolishedGranite\"]=\"minecraft:polished_granite\";MinecraftItemTypes2[\"PolishedGraniteStairs\"]=\"minecraft:polished_granite_stairs\";MinecraftItemTypes2[\"PolishedTuff\"]=\"minecraft:polished_tuff\";MinecraftItemTypes2[\"PolishedTuffSlab\"]=\"minecraft:polished_tuff_slab\";MinecraftItemTypes2[\"PolishedTuffStairs\"]=\"minecraft:polished_tuff_stairs\";MinecraftItemTypes2[\"PolishedTuffWall\"]=\"minecraft:polished_tuff_wall\";MinecraftItemTypes2[\"PoppedChorusFruit\"]=\"minecraft:popped_chorus_fruit\";MinecraftItemTypes2[\"Poppy\"]=\"minecraft:poppy\";MinecraftItemTypes2[\"Porkchop\"]=\"minecraft:porkchop\";MinecraftItemTypes2[\"Potato\"]=\"minecraft:potato\";MinecraftItemTypes2[\"Potion\"]=\"minecraft:potion\";MinecraftItemTypes2[\"PowderSnowBucket\"]=\"minecraft:powder_snow_bucket\";MinecraftItemTypes2[\"Prismarine\"]=\"minecraft:prismarine\";MinecraftItemTypes2[\"PrismarineBricksStairs\"]=\"minecraft:prismarine_bricks_stairs\";MinecraftItemTypes2[\"PrismarineCrystals\"]=\"minecraft:prismarine_crystals\";MinecraftItemTypes2[\"PrismarineShard\"]=\"minecraft:prismarine_shard\";MinecraftItemTypes2[\"PrismarineStairs\"]=\"minecraft:prismarine_stairs\";MinecraftItemTypes2[\"PrizePotterySherd\"]=\"minecraft:prize_pottery_sherd\";MinecraftItemTypes2[\"Pufferfish\"]=\"minecraft:pufferfish\";MinecraftItemTypes2[\"PufferfishBucket\"]=\"minecraft:pufferfish_bucket\";MinecraftItemTypes2[\"PufferfishSpawnEgg\"]=\"minecraft:pufferfish_spawn_egg\";MinecraftItemTypes2[\"Pumpkin\"]=\"minecraft:pumpkin\";MinecraftItemTypes2[\"PumpkinPie\"]=\"minecraft:pumpkin_pie\";MinecraftItemTypes2[\"PumpkinSeeds\"]=\"minecraft:pumpkin_seeds\";MinecraftItemTypes2[\"PurpleCandle\"]=\"minecraft:purple_candle\";MinecraftItemTypes2[\"PurpleCarpet\"]=\"minecraft:purple_carpet\";MinecraftItemTypes2[\"PurpleConcrete\"]=\"minecraft:purple_concrete\";MinecraftItemTypes2[\"PurpleConcretePowder\"]=\"minecraft:purple_concrete_powder\";MinecraftItemTypes2[\"PurpleDye\"]=\"minecraft:purple_dye\";MinecraftItemTypes2[\"PurpleGlazedTerracotta\"]=\"minecraft:purple_glazed_terracotta\";MinecraftItemTypes2[\"PurpleShulkerBox\"]=\"minecraft:purple_shulker_box\";MinecraftItemTypes2[\"PurpleStainedGlass\"]=\"minecraft:purple_stained_glass\";MinecraftItemTypes2[\"PurpleStainedGlassPane\"]=\"minecraft:purple_stained_glass_pane\";MinecraftItemTypes2[\"PurpleTerracotta\"]=\"minecraft:purple_terracotta\";MinecraftItemTypes2[\"PurpleWool\"]=\"minecraft:purple_wool\";MinecraftItemTypes2[\"PurpurBlock\"]=\"minecraft:purpur_block\";MinecraftItemTypes2[\"PurpurStairs\"]=\"minecraft:purpur_stairs\";MinecraftItemTypes2[\"Quartz\"]=\"minecraft:quartz\";MinecraftItemTypes2[\"QuartzBlock\"]=\"minecraft:quartz_block\";MinecraftItemTypes2[\"QuartzBricks\"]=\"minecraft:quartz_bricks\";MinecraftItemTypes2[\"QuartzOre\"]=\"minecraft:quartz_ore\";MinecraftItemTypes2[\"QuartzSlab\"]=\"minecraft:quartz_slab\";MinecraftItemTypes2[\"QuartzStairs\"]=\"minecraft:quartz_stairs\";MinecraftItemTypes2[\"Rabbit\"]=\"minecraft:rabbit\";MinecraftItemTypes2[\"RabbitFoot\"]=\"minecraft:rabbit_foot\";MinecraftItemTypes2[\"RabbitHide\"]=\"minecraft:rabbit_hide\";MinecraftItemTypes2[\"RabbitSpawnEgg\"]=\"minecraft:rabbit_spawn_egg\";MinecraftItemTypes2[\"RabbitStew\"]=\"minecraft:rabbit_stew\";MinecraftItemTypes2[\"Rail\"]=\"minecraft:rail\";MinecraftItemTypes2[\"RaiserArmorTrimSmithingTemplate\"]=\"minecraft:raiser_armor_trim_smithing_template\";MinecraftItemTypes2[\"RavagerSpawnEgg\"]=\"minecraft:ravager_spawn_egg\";MinecraftItemTypes2[\"RawCopper\"]=\"minecraft:raw_copper\";MinecraftItemTypes2[\"RawCopperBlock\"]=\"minecraft:raw_copper_block\";MinecraftItemTypes2[\"RawGold\"]=\"minecraft:raw_gold\";MinecraftItemTypes2[\"RawGoldBlock\"]=\"minecraft:raw_gold_block\";MinecraftItemTypes2[\"RawIron\"]=\"minecraft:raw_iron\";MinecraftItemTypes2[\"RawIronBlock\"]=\"minecraft:raw_iron_block\";MinecraftItemTypes2[\"RecoveryCompass\"]=\"minecraft:recovery_compass\";MinecraftItemTypes2[\"RedCandle\"]=\"minecraft:red_candle\";MinecraftItemTypes2[\"RedCarpet\"]=\"minecraft:red_carpet\";MinecraftItemTypes2[\"RedConcrete\"]=\"minecraft:red_concrete\";MinecraftItemTypes2[\"RedConcretePowder\"]=\"minecraft:red_concrete_powder\";MinecraftItemTypes2[\"RedDye\"]=\"minecraft:red_dye\";MinecraftItemTypes2[\"RedFlower\"]=\"minecraft:red_flower\";MinecraftItemTypes2[\"RedGlazedTerracotta\"]=\"minecraft:red_glazed_terracotta\";MinecraftItemTypes2[\"RedMushroom\"]=\"minecraft:red_mushroom\";MinecraftItemTypes2[\"RedMushroomBlock\"]=\"minecraft:red_mushroom_block\";MinecraftItemTypes2[\"RedNetherBrick\"]=\"minecraft:red_nether_brick\";MinecraftItemTypes2[\"RedNetherBrickStairs\"]=\"minecraft:red_nether_brick_stairs\";MinecraftItemTypes2[\"RedSandstone\"]=\"minecraft:red_sandstone\";MinecraftItemTypes2[\"RedSandstoneStairs\"]=\"minecraft:red_sandstone_stairs\";MinecraftItemTypes2[\"RedShulkerBox\"]=\"minecraft:red_shulker_box\";MinecraftItemTypes2[\"RedStainedGlass\"]=\"minecraft:red_stained_glass\";MinecraftItemTypes2[\"RedStainedGlassPane\"]=\"minecraft:red_stained_glass_pane\";MinecraftItemTypes2[\"RedTerracotta\"]=\"minecraft:red_terracotta\";MinecraftItemTypes2[\"RedTulip\"]=\"minecraft:red_tulip\";MinecraftItemTypes2[\"RedWool\"]=\"minecraft:red_wool\";MinecraftItemTypes2[\"Redstone\"]=\"minecraft:redstone\";MinecraftItemTypes2[\"RedstoneBlock\"]=\"minecraft:redstone_block\";MinecraftItemTypes2[\"RedstoneLamp\"]=\"minecraft:redstone_lamp\";MinecraftItemTypes2[\"RedstoneOre\"]=\"minecraft:redstone_ore\";MinecraftItemTypes2[\"RedstoneTorch\"]=\"minecraft:redstone_torch\";MinecraftItemTypes2[\"ReinforcedDeepslate\"]=\"minecraft:reinforced_deepslate\";MinecraftItemTypes2[\"Repeater\"]=\"minecraft:repeater\";MinecraftItemTypes2[\"RepeatingCommandBlock\"]=\"minecraft:repeating_command_block\";MinecraftItemTypes2[\"RespawnAnchor\"]=\"minecraft:respawn_anchor\";MinecraftItemTypes2[\"RibArmorTrimSmithingTemplate\"]=\"minecraft:rib_armor_trim_smithing_template\";MinecraftItemTypes2[\"RoseBush\"]=\"minecraft:rose_bush\";MinecraftItemTypes2[\"RottenFlesh\"]=\"minecraft:rotten_flesh\";MinecraftItemTypes2[\"Saddle\"]=\"minecraft:saddle\";MinecraftItemTypes2[\"Salmon\"]=\"minecraft:salmon\";MinecraftItemTypes2[\"SalmonBucket\"]=\"minecraft:salmon_bucket\";MinecraftItemTypes2[\"SalmonSpawnEgg\"]=\"minecraft:salmon_spawn_egg\";MinecraftItemTypes2[\"Sand\"]=\"minecraft:sand\";MinecraftItemTypes2[\"Sandstone\"]=\"minecraft:sandstone\";MinecraftItemTypes2[\"SandstoneSlab\"]=\"minecraft:sandstone_slab\";MinecraftItemTypes2[\"SandstoneStairs\"]=\"minecraft:sandstone_stairs\";MinecraftItemTypes2[\"Sapling\"]=\"minecraft:sapling\";MinecraftItemTypes2[\"Scaffolding\"]=\"minecraft:scaffolding\";MinecraftItemTypes2[\"ScrapePotterySherd\"]=\"minecraft:scrape_pottery_sherd\";MinecraftItemTypes2[\"Sculk\"]=\"minecraft:sculk\";MinecraftItemTypes2[\"SculkCatalyst\"]=\"minecraft:sculk_catalyst\";MinecraftItemTypes2[\"SculkSensor\"]=\"minecraft:sculk_sensor\";MinecraftItemTypes2[\"SculkShrieker\"]=\"minecraft:sculk_shrieker\";MinecraftItemTypes2[\"SculkVein\"]=\"minecraft:sculk_vein\";MinecraftItemTypes2[\"SeaLantern\"]=\"minecraft:sea_lantern\";MinecraftItemTypes2[\"SeaPickle\"]=\"minecraft:sea_pickle\";MinecraftItemTypes2[\"Seagrass\"]=\"minecraft:seagrass\";MinecraftItemTypes2[\"SentryArmorTrimSmithingTemplate\"]=\"minecraft:sentry_armor_trim_smithing_template\";MinecraftItemTypes2[\"ShaperArmorTrimSmithingTemplate\"]=\"minecraft:shaper_armor_trim_smithing_template\";MinecraftItemTypes2[\"SheafPotterySherd\"]=\"minecraft:sheaf_pottery_sherd\";MinecraftItemTypes2[\"Shears\"]=\"minecraft:shears\";MinecraftItemTypes2[\"SheepSpawnEgg\"]=\"minecraft:sheep_spawn_egg\";MinecraftItemTypes2[\"ShelterPotterySherd\"]=\"minecraft:shelter_pottery_sherd\";MinecraftItemTypes2[\"Shield\"]=\"minecraft:shield\";MinecraftItemTypes2[\"ShortGrass\"]=\"minecraft:short_grass\";MinecraftItemTypes2[\"Shroomlight\"]=\"minecraft:shroomlight\";MinecraftItemTypes2[\"ShulkerBox\"]=\"minecraft:shulker_box\";MinecraftItemTypes2[\"ShulkerShell\"]=\"minecraft:shulker_shell\";MinecraftItemTypes2[\"ShulkerSpawnEgg\"]=\"minecraft:shulker_spawn_egg\";MinecraftItemTypes2[\"SilenceArmorTrimSmithingTemplate\"]=\"minecraft:silence_armor_trim_smithing_template\";MinecraftItemTypes2[\"SilverGlazedTerracotta\"]=\"minecraft:silver_glazed_terracotta\";MinecraftItemTypes2[\"SilverfishSpawnEgg\"]=\"minecraft:silverfish_spawn_egg\";MinecraftItemTypes2[\"SkeletonHorseSpawnEgg\"]=\"minecraft:skeleton_horse_spawn_egg\";MinecraftItemTypes2[\"SkeletonSpawnEgg\"]=\"minecraft:skeleton_spawn_egg\";MinecraftItemTypes2[\"Skull\"]=\"minecraft:skull\";MinecraftItemTypes2[\"SkullBannerPattern\"]=\"minecraft:skull_banner_pattern\";MinecraftItemTypes2[\"SkullPotterySherd\"]=\"minecraft:skull_pottery_sherd\";MinecraftItemTypes2[\"Slime\"]=\"minecraft:slime\";MinecraftItemTypes2[\"SlimeBall\"]=\"minecraft:slime_ball\";MinecraftItemTypes2[\"SlimeSpawnEgg\"]=\"minecraft:slime_spawn_egg\";MinecraftItemTypes2[\"SmallAmethystBud\"]=\"minecraft:small_amethyst_bud\";MinecraftItemTypes2[\"SmallDripleafBlock\"]=\"minecraft:small_dripleaf_block\";MinecraftItemTypes2[\"SmithingTable\"]=\"minecraft:smithing_table\";MinecraftItemTypes2[\"Smoker\"]=\"minecraft:smoker\";MinecraftItemTypes2[\"SmoothBasalt\"]=\"minecraft:smooth_basalt\";MinecraftItemTypes2[\"SmoothQuartzStairs\"]=\"minecraft:smooth_quartz_stairs\";MinecraftItemTypes2[\"SmoothRedSandstoneStairs\"]=\"minecraft:smooth_red_sandstone_stairs\";MinecraftItemTypes2[\"SmoothSandstoneStairs\"]=\"minecraft:smooth_sandstone_stairs\";MinecraftItemTypes2[\"SmoothStone\"]=\"minecraft:smooth_stone\";MinecraftItemTypes2[\"SmoothStoneSlab\"]=\"minecraft:smooth_stone_slab\";MinecraftItemTypes2[\"SnifferEgg\"]=\"minecraft:sniffer_egg\";MinecraftItemTypes2[\"SnifferSpawnEgg\"]=\"minecraft:sniffer_spawn_egg\";MinecraftItemTypes2[\"SnortPotterySherd\"]=\"minecraft:snort_pottery_sherd\";MinecraftItemTypes2[\"SnoutArmorTrimSmithingTemplate\"]=\"minecraft:snout_armor_trim_smithing_template\";MinecraftItemTypes2[\"Snow\"]=\"minecraft:snow\";MinecraftItemTypes2[\"SnowGolemSpawnEgg\"]=\"minecraft:snow_golem_spawn_egg\";MinecraftItemTypes2[\"SnowLayer\"]=\"minecraft:snow_layer\";MinecraftItemTypes2[\"Snowball\"]=\"minecraft:snowball\";MinecraftItemTypes2[\"SoulCampfire\"]=\"minecraft:soul_campfire\";MinecraftItemTypes2[\"SoulLantern\"]=\"minecraft:soul_lantern\";MinecraftItemTypes2[\"SoulSand\"]=\"minecraft:soul_sand\";MinecraftItemTypes2[\"SoulSoil\"]=\"minecraft:soul_soil\";MinecraftItemTypes2[\"SoulTorch\"]=\"minecraft:soul_torch\";MinecraftItemTypes2[\"SpawnEgg\"]=\"minecraft:spawn_egg\";MinecraftItemTypes2[\"SpiderEye\"]=\"minecraft:spider_eye\";MinecraftItemTypes2[\"SpiderSpawnEgg\"]=\"minecraft:spider_spawn_egg\";MinecraftItemTypes2[\"SpireArmorTrimSmithingTemplate\"]=\"minecraft:spire_armor_trim_smithing_template\";MinecraftItemTypes2[\"SplashPotion\"]=\"minecraft:splash_potion\";MinecraftItemTypes2[\"Sponge\"]=\"minecraft:sponge\";MinecraftItemTypes2[\"SporeBlossom\"]=\"minecraft:spore_blossom\";MinecraftItemTypes2[\"SpruceBoat\"]=\"minecraft:spruce_boat\";MinecraftItemTypes2[\"SpruceButton\"]=\"minecraft:spruce_button\";MinecraftItemTypes2[\"SpruceChestBoat\"]=\"minecraft:spruce_chest_boat\";MinecraftItemTypes2[\"SpruceDoor\"]=\"minecraft:spruce_door\";MinecraftItemTypes2[\"SpruceFence\"]=\"minecraft:spruce_fence\";MinecraftItemTypes2[\"SpruceFenceGate\"]=\"minecraft:spruce_fence_gate\";MinecraftItemTypes2[\"SpruceHangingSign\"]=\"minecraft:spruce_hanging_sign\";MinecraftItemTypes2[\"SpruceLeaves\"]=\"minecraft:spruce_leaves\";MinecraftItemTypes2[\"SpruceLog\"]=\"minecraft:spruce_log\";MinecraftItemTypes2[\"SprucePlanks\"]=\"minecraft:spruce_planks\";MinecraftItemTypes2[\"SprucePressurePlate\"]=\"minecraft:spruce_pressure_plate\";MinecraftItemTypes2[\"SpruceSapling\"]=\"minecraft:spruce_sapling\";MinecraftItemTypes2[\"SpruceSign\"]=\"minecraft:spruce_sign\";MinecraftItemTypes2[\"SpruceSlab\"]=\"minecraft:spruce_slab\";MinecraftItemTypes2[\"SpruceStairs\"]=\"minecraft:spruce_stairs\";MinecraftItemTypes2[\"SpruceTrapdoor\"]=\"minecraft:spruce_trapdoor\";MinecraftItemTypes2[\"SpruceWood\"]=\"minecraft:spruce_wood\";MinecraftItemTypes2[\"Spyglass\"]=\"minecraft:spyglass\";MinecraftItemTypes2[\"SquidSpawnEgg\"]=\"minecraft:squid_spawn_egg\";MinecraftItemTypes2[\"StainedGlass\"]=\"minecraft:stained_glass\";MinecraftItemTypes2[\"StainedGlassPane\"]=\"minecraft:stained_glass_pane\";MinecraftItemTypes2[\"StainedHardenedClay\"]=\"minecraft:stained_hardened_clay\";MinecraftItemTypes2[\"Stick\"]=\"minecraft:stick\";MinecraftItemTypes2[\"StickyPiston\"]=\"minecraft:sticky_piston\";MinecraftItemTypes2[\"Stone\"]=\"minecraft:stone\";MinecraftItemTypes2[\"StoneAxe\"]=\"minecraft:stone_axe\";MinecraftItemTypes2[\"StoneBlockSlab\"]=\"minecraft:stone_block_slab\";MinecraftItemTypes2[\"StoneBlockSlab2\"]=\"minecraft:stone_block_slab2\";MinecraftItemTypes2[\"StoneBlockSlab3\"]=\"minecraft:stone_block_slab3\";MinecraftItemTypes2[\"StoneBlockSlab4\"]=\"minecraft:stone_block_slab4\";MinecraftItemTypes2[\"StoneBrickSlab\"]=\"minecraft:stone_brick_slab\";MinecraftItemTypes2[\"StoneBrickStairs\"]=\"minecraft:stone_brick_stairs\";MinecraftItemTypes2[\"StoneButton\"]=\"minecraft:stone_button\";MinecraftItemTypes2[\"StoneHoe\"]=\"minecraft:stone_hoe\";MinecraftItemTypes2[\"StonePickaxe\"]=\"minecraft:stone_pickaxe\";MinecraftItemTypes2[\"StonePressurePlate\"]=\"minecraft:stone_pressure_plate\";MinecraftItemTypes2[\"StoneShovel\"]=\"minecraft:stone_shovel\";MinecraftItemTypes2[\"StoneStairs\"]=\"minecraft:stone_stairs\";MinecraftItemTypes2[\"StoneSword\"]=\"minecraft:stone_sword\";MinecraftItemTypes2[\"Stonebrick\"]=\"minecraft:stonebrick\";MinecraftItemTypes2[\"StonecutterBlock\"]=\"minecraft:stonecutter_block\";MinecraftItemTypes2[\"StraySpawnEgg\"]=\"minecraft:stray_spawn_egg\";MinecraftItemTypes2[\"StriderSpawnEgg\"]=\"minecraft:strider_spawn_egg\";MinecraftItemTypes2[\"String\"]=\"minecraft:string\";MinecraftItemTypes2[\"StrippedAcaciaLog\"]=\"minecraft:stripped_acacia_log\";MinecraftItemTypes2[\"StrippedAcaciaWood\"]=\"minecraft:stripped_acacia_wood\";MinecraftItemTypes2[\"StrippedBambooBlock\"]=\"minecraft:stripped_bamboo_block\";MinecraftItemTypes2[\"StrippedBirchLog\"]=\"minecraft:stripped_birch_log\";MinecraftItemTypes2[\"StrippedBirchWood\"]=\"minecraft:stripped_birch_wood\";MinecraftItemTypes2[\"StrippedCherryLog\"]=\"minecraft:stripped_cherry_log\";MinecraftItemTypes2[\"StrippedCherryWood\"]=\"minecraft:stripped_cherry_wood\";MinecraftItemTypes2[\"StrippedCrimsonHyphae\"]=\"minecraft:stripped_crimson_hyphae\";MinecraftItemTypes2[\"StrippedCrimsonStem\"]=\"minecraft:stripped_crimson_stem\";MinecraftItemTypes2[\"StrippedDarkOakLog\"]=\"minecraft:stripped_dark_oak_log\";MinecraftItemTypes2[\"StrippedDarkOakWood\"]=\"minecraft:stripped_dark_oak_wood\";MinecraftItemTypes2[\"StrippedJungleLog\"]=\"minecraft:stripped_jungle_log\";MinecraftItemTypes2[\"StrippedJungleWood\"]=\"minecraft:stripped_jungle_wood\";MinecraftItemTypes2[\"StrippedMangroveLog\"]=\"minecraft:stripped_mangrove_log\";MinecraftItemTypes2[\"StrippedMangroveWood\"]=\"minecraft:stripped_mangrove_wood\";MinecraftItemTypes2[\"StrippedOakLog\"]=\"minecraft:stripped_oak_log\";MinecraftItemTypes2[\"StrippedOakWood\"]=\"minecraft:stripped_oak_wood\";MinecraftItemTypes2[\"StrippedSpruceLog\"]=\"minecraft:stripped_spruce_log\";MinecraftItemTypes2[\"StrippedSpruceWood\"]=\"minecraft:stripped_spruce_wood\";MinecraftItemTypes2[\"StrippedWarpedHyphae\"]=\"minecraft:stripped_warped_hyphae\";MinecraftItemTypes2[\"StrippedWarpedStem\"]=\"minecraft:stripped_warped_stem\";MinecraftItemTypes2[\"StructureBlock\"]=\"minecraft:structure_block\";MinecraftItemTypes2[\"StructureVoid\"]=\"minecraft:structure_void\";MinecraftItemTypes2[\"Sugar\"]=\"minecraft:sugar\";MinecraftItemTypes2[\"SugarCane\"]=\"minecraft:sugar_cane\";MinecraftItemTypes2[\"Sunflower\"]=\"minecraft:sunflower\";MinecraftItemTypes2[\"SuspiciousGravel\"]=\"minecraft:suspicious_gravel\";MinecraftItemTypes2[\"SuspiciousSand\"]=\"minecraft:suspicious_sand\";MinecraftItemTypes2[\"SuspiciousStew\"]=\"minecraft:suspicious_stew\";MinecraftItemTypes2[\"SweetBerries\"]=\"minecraft:sweet_berries\";MinecraftItemTypes2[\"TadpoleBucket\"]=\"minecraft:tadpole_bucket\";MinecraftItemTypes2[\"TadpoleSpawnEgg\"]=\"minecraft:tadpole_spawn_egg\";MinecraftItemTypes2[\"TallGrass\"]=\"minecraft:tall_grass\";MinecraftItemTypes2[\"Tallgrass\"]=\"minecraft:tallgrass\";MinecraftItemTypes2[\"Target\"]=\"minecraft:target\";MinecraftItemTypes2[\"TideArmorTrimSmithingTemplate\"]=\"minecraft:tide_armor_trim_smithing_template\";MinecraftItemTypes2[\"TintedGlass\"]=\"minecraft:tinted_glass\";MinecraftItemTypes2[\"Tnt\"]=\"minecraft:tnt\";MinecraftItemTypes2[\"TntMinecart\"]=\"minecraft:tnt_minecart\";MinecraftItemTypes2[\"Torch\"]=\"minecraft:torch\";MinecraftItemTypes2[\"Torchflower\"]=\"minecraft:torchflower\";MinecraftItemTypes2[\"TorchflowerSeeds\"]=\"minecraft:torchflower_seeds\";MinecraftItemTypes2[\"TotemOfUndying\"]=\"minecraft:totem_of_undying\";MinecraftItemTypes2[\"TraderLlamaSpawnEgg\"]=\"minecraft:trader_llama_spawn_egg\";MinecraftItemTypes2[\"Trapdoor\"]=\"minecraft:trapdoor\";MinecraftItemTypes2[\"TrappedChest\"]=\"minecraft:trapped_chest\";MinecraftItemTypes2[\"TrialKey\"]=\"minecraft:trial_key\";MinecraftItemTypes2[\"TrialSpawner\"]=\"minecraft:trial_spawner\";MinecraftItemTypes2[\"Trident\"]=\"minecraft:trident\";MinecraftItemTypes2[\"TripwireHook\"]=\"minecraft:tripwire_hook\";MinecraftItemTypes2[\"TropicalFish\"]=\"minecraft:tropical_fish\";MinecraftItemTypes2[\"TropicalFishBucket\"]=\"minecraft:tropical_fish_bucket\";MinecraftItemTypes2[\"TropicalFishSpawnEgg\"]=\"minecraft:tropical_fish_spawn_egg\";MinecraftItemTypes2[\"TubeCoral\"]=\"minecraft:tube_coral\";MinecraftItemTypes2[\"TubeCoralBlock\"]=\"minecraft:tube_coral_block\";MinecraftItemTypes2[\"TubeCoralFan\"]=\"minecraft:tube_coral_fan\";MinecraftItemTypes2[\"Tuff\"]=\"minecraft:tuff\";MinecraftItemTypes2[\"TuffBrickSlab\"]=\"minecraft:tuff_brick_slab\";MinecraftItemTypes2[\"TuffBrickStairs\"]=\"minecraft:tuff_brick_stairs\";MinecraftItemTypes2[\"TuffBrickWall\"]=\"minecraft:tuff_brick_wall\";MinecraftItemTypes2[\"TuffBricks\"]=\"minecraft:tuff_bricks\";MinecraftItemTypes2[\"TuffSlab\"]=\"minecraft:tuff_slab\";MinecraftItemTypes2[\"TuffStairs\"]=\"minecraft:tuff_stairs\";MinecraftItemTypes2[\"TuffWall\"]=\"minecraft:tuff_wall\";MinecraftItemTypes2[\"TurtleEgg\"]=\"minecraft:turtle_egg\";MinecraftItemTypes2[\"TurtleHelmet\"]=\"minecraft:turtle_helmet\";MinecraftItemTypes2[\"TurtleScute\"]=\"minecraft:turtle_scute\";MinecraftItemTypes2[\"TurtleSpawnEgg\"]=\"minecraft:turtle_spawn_egg\";MinecraftItemTypes2[\"TwistingVines\"]=\"minecraft:twisting_vines\";MinecraftItemTypes2[\"UndyedShulkerBox\"]=\"minecraft:undyed_shulker_box\";MinecraftItemTypes2[\"Vault\"]=\"minecraft:vault\";MinecraftItemTypes2[\"VerdantFroglight\"]=\"minecraft:verdant_froglight\";MinecraftItemTypes2[\"VexArmorTrimSmithingTemplate\"]=\"minecraft:vex_armor_trim_smithing_template\";MinecraftItemTypes2[\"VexSpawnEgg\"]=\"minecraft:vex_spawn_egg\";MinecraftItemTypes2[\"VillagerSpawnEgg\"]=\"minecraft:villager_spawn_egg\";MinecraftItemTypes2[\"VindicatorSpawnEgg\"]=\"minecraft:vindicator_spawn_egg\";MinecraftItemTypes2[\"Vine\"]=\"minecraft:vine\";MinecraftItemTypes2[\"WanderingTraderSpawnEgg\"]=\"minecraft:wandering_trader_spawn_egg\";MinecraftItemTypes2[\"WardArmorTrimSmithingTemplate\"]=\"minecraft:ward_armor_trim_smithing_template\";MinecraftItemTypes2[\"WardenSpawnEgg\"]=\"minecraft:warden_spawn_egg\";MinecraftItemTypes2[\"WarpedButton\"]=\"minecraft:warped_button\";MinecraftItemTypes2[\"WarpedDoor\"]=\"minecraft:warped_door\";MinecraftItemTypes2[\"WarpedFence\"]=\"minecraft:warped_fence\";MinecraftItemTypes2[\"WarpedFenceGate\"]=\"minecraft:warped_fence_gate\";MinecraftItemTypes2[\"WarpedFungus\"]=\"minecraft:warped_fungus\";MinecraftItemTypes2[\"WarpedFungusOnAStick\"]=\"minecraft:warped_fungus_on_a_stick\";MinecraftItemTypes2[\"WarpedHangingSign\"]=\"minecraft:warped_hanging_sign\";MinecraftItemTypes2[\"WarpedHyphae\"]=\"minecraft:warped_hyphae\";MinecraftItemTypes2[\"WarpedNylium\"]=\"minecraft:warped_nylium\";MinecraftItemTypes2[\"WarpedPlanks\"]=\"minecraft:warped_planks\";MinecraftItemTypes2[\"WarpedPressurePlate\"]=\"minecraft:warped_pressure_plate\";MinecraftItemTypes2[\"WarpedRoots\"]=\"minecraft:warped_roots\";MinecraftItemTypes2[\"WarpedSign\"]=\"minecraft:warped_sign\";MinecraftItemTypes2[\"WarpedSlab\"]=\"minecraft:warped_slab\";MinecraftItemTypes2[\"WarpedStairs\"]=\"minecraft:warped_stairs\";MinecraftItemTypes2[\"WarpedStem\"]=\"minecraft:warped_stem\";MinecraftItemTypes2[\"WarpedTrapdoor\"]=\"minecraft:warped_trapdoor\";MinecraftItemTypes2[\"WarpedWartBlock\"]=\"minecraft:warped_wart_block\";MinecraftItemTypes2[\"WaterBucket\"]=\"minecraft:water_bucket\";MinecraftItemTypes2[\"Waterlily\"]=\"minecraft:waterlily\";MinecraftItemTypes2[\"WaxedChiseledCopper\"]=\"minecraft:waxed_chiseled_copper\";MinecraftItemTypes2[\"WaxedCopper\"]=\"minecraft:waxed_copper\";MinecraftItemTypes2[\"WaxedCopperBulb\"]=\"minecraft:waxed_copper_bulb\";MinecraftItemTypes2[\"WaxedCopperDoor\"]=\"minecraft:waxed_copper_door\";MinecraftItemTypes2[\"WaxedCopperGrate\"]=\"minecraft:waxed_copper_grate\";MinecraftItemTypes2[\"WaxedCopperTrapdoor\"]=\"minecraft:waxed_copper_trapdoor\";MinecraftItemTypes2[\"WaxedCutCopper\"]=\"minecraft:waxed_cut_copper\";MinecraftItemTypes2[\"WaxedCutCopperSlab\"]=\"minecraft:waxed_cut_copper_slab\";MinecraftItemTypes2[\"WaxedCutCopperStairs\"]=\"minecraft:waxed_cut_copper_stairs\";MinecraftItemTypes2[\"WaxedExposedChiseledCopper\"]=\"minecraft:waxed_exposed_chiseled_copper\";MinecraftItemTypes2[\"WaxedExposedCopper\"]=\"minecraft:waxed_exposed_copper\";MinecraftItemTypes2[\"WaxedExposedCopperBulb\"]=\"minecraft:waxed_exposed_copper_bulb\";MinecraftItemTypes2[\"WaxedExposedCopperDoor\"]=\"minecraft:waxed_exposed_copper_door\";MinecraftItemTypes2[\"WaxedExposedCopperGrate\"]=\"minecraft:waxed_exposed_copper_grate\";MinecraftItemTypes2[\"WaxedExposedCopperTrapdoor\"]=\"minecraft:waxed_exposed_copper_trapdoor\";MinecraftItemTypes2[\"WaxedExposedCutCopper\"]=\"minecraft:waxed_exposed_cut_copper\";MinecraftItemTypes2[\"WaxedExposedCutCopperSlab\"]=\"minecraft:waxed_exposed_cut_copper_slab\";MinecraftItemTypes2[\"WaxedExposedCutCopperStairs\"]=\"minecraft:waxed_exposed_cut_copper_stairs\";MinecraftItemTypes2[\"WaxedOxidizedChiseledCopper\"]=\"minecraft:waxed_oxidized_chiseled_copper\";MinecraftItemTypes2[\"WaxedOxidizedCopper\"]=\"minecraft:waxed_oxidized_copper\";MinecraftItemTypes2[\"WaxedOxidizedCopperBulb\"]=\"minecraft:waxed_oxidized_copper_bulb\";MinecraftItemTypes2[\"WaxedOxidizedCopperDoor\"]=\"minecraft:waxed_oxidized_copper_door\";MinecraftItemTypes2[\"WaxedOxidizedCopperGrate\"]=\"minecraft:waxed_oxidized_copper_grate\";MinecraftItemTypes2[\"WaxedOxidizedCopperTrapdoor\"]=\"minecraft:waxed_oxidized_copper_trapdoor\";MinecraftItemTypes2[\"WaxedOxidizedCutCopper\"]=\"minecraft:waxed_oxidized_cut_copper\";MinecraftItemTypes2[\"WaxedOxidizedCutCopperSlab\"]=\"minecraft:waxed_oxidized_cut_copper_slab\";MinecraftItemTypes2[\"WaxedOxidizedCutCopperStairs\"]=\"minecraft:waxed_oxidized_cut_copper_stairs\";MinecraftItemTypes2[\"WaxedWeatheredChiseledCopper\"]=\"minecraft:waxed_weathered_chiseled_copper\";MinecraftItemTypes2[\"WaxedWeatheredCopper\"]=\"minecraft:waxed_weathered_copper\";MinecraftItemTypes2[\"WaxedWeatheredCopperBulb\"]=\"minecraft:waxed_weathered_copper_bulb\";MinecraftItemTypes2[\"WaxedWeatheredCopperDoor\"]=\"minecraft:waxed_weathered_copper_door\";MinecraftItemTypes2[\"WaxedWeatheredCopperGrate\"]=\"minecraft:waxed_weathered_copper_grate\";MinecraftItemTypes2[\"WaxedWeatheredCopperTrapdoor\"]=\"minecraft:waxed_weathered_copper_trapdoor\";MinecraftItemTypes2[\"WaxedWeatheredCutCopper\"]=\"minecraft:waxed_weathered_cut_copper\";MinecraftItemTypes2[\"WaxedWeatheredCutCopperSlab\"]=\"minecraft:waxed_weathered_cut_copper_slab\";MinecraftItemTypes2[\"WaxedWeatheredCutCopperStairs\"]=\"minecraft:waxed_weathered_cut_copper_stairs\";MinecraftItemTypes2[\"WayfinderArmorTrimSmithingTemplate\"]=\"minecraft:wayfinder_armor_trim_smithing_template\";MinecraftItemTypes2[\"WeatheredChiseledCopper\"]=\"minecraft:weathered_chiseled_copper\";MinecraftItemTypes2[\"WeatheredCopper\"]=\"minecraft:weathered_copper\";MinecraftItemTypes2[\"WeatheredCopperBulb\"]=\"minecraft:weathered_copper_bulb\";MinecraftItemTypes2[\"WeatheredCopperDoor\"]=\"minecraft:weathered_copper_door\";MinecraftItemTypes2[\"WeatheredCopperGrate\"]=\"minecraft:weathered_copper_grate\";MinecraftItemTypes2[\"WeatheredCopperTrapdoor\"]=\"minecraft:weathered_copper_trapdoor\";MinecraftItemTypes2[\"WeatheredCutCopper\"]=\"minecraft:weathered_cut_copper\";MinecraftItemTypes2[\"WeatheredCutCopperSlab\"]=\"minecraft:weathered_cut_copper_slab\";MinecraftItemTypes2[\"WeatheredCutCopperStairs\"]=\"minecraft:weathered_cut_copper_stairs\";MinecraftItemTypes2[\"Web\"]=\"minecraft:web\";MinecraftItemTypes2[\"WeepingVines\"]=\"minecraft:weeping_vines\";MinecraftItemTypes2[\"Wheat\"]=\"minecraft:wheat\";MinecraftItemTypes2[\"WheatSeeds\"]=\"minecraft:wheat_seeds\";MinecraftItemTypes2[\"WhiteCandle\"]=\"minecraft:white_candle\";MinecraftItemTypes2[\"WhiteCarpet\"]=\"minecraft:white_carpet\";MinecraftItemTypes2[\"WhiteConcrete\"]=\"minecraft:white_concrete\";MinecraftItemTypes2[\"WhiteConcretePowder\"]=\"minecraft:white_concrete_powder\";MinecraftItemTypes2[\"WhiteDye\"]=\"minecraft:white_dye\";MinecraftItemTypes2[\"WhiteGlazedTerracotta\"]=\"minecraft:white_glazed_terracotta\";MinecraftItemTypes2[\"WhiteShulkerBox\"]=\"minecraft:white_shulker_box\";MinecraftItemTypes2[\"WhiteStainedGlass\"]=\"minecraft:white_stained_glass\";MinecraftItemTypes2[\"WhiteStainedGlassPane\"]=\"minecraft:white_stained_glass_pane\";MinecraftItemTypes2[\"WhiteTerracotta\"]=\"minecraft:white_terracotta\";MinecraftItemTypes2[\"WhiteTulip\"]=\"minecraft:white_tulip\";MinecraftItemTypes2[\"WhiteWool\"]=\"minecraft:white_wool\";MinecraftItemTypes2[\"WildArmorTrimSmithingTemplate\"]=\"minecraft:wild_armor_trim_smithing_template\";MinecraftItemTypes2[\"WindCharge\"]=\"minecraft:wind_charge\";MinecraftItemTypes2[\"WitchSpawnEgg\"]=\"minecraft:witch_spawn_egg\";MinecraftItemTypes2[\"WitherRose\"]=\"minecraft:wither_rose\";MinecraftItemTypes2[\"WitherSkeletonSpawnEgg\"]=\"minecraft:wither_skeleton_spawn_egg\";MinecraftItemTypes2[\"WitherSpawnEgg\"]=\"minecraft:wither_spawn_egg\";MinecraftItemTypes2[\"WolfArmor\"]=\"minecraft:wolf_armor\";MinecraftItemTypes2[\"WolfSpawnEgg\"]=\"minecraft:wolf_spawn_egg\";MinecraftItemTypes2[\"Wood\"]=\"minecraft:wood\";MinecraftItemTypes2[\"WoodenAxe\"]=\"minecraft:wooden_axe\";MinecraftItemTypes2[\"WoodenButton\"]=\"minecraft:wooden_button\";MinecraftItemTypes2[\"WoodenDoor\"]=\"minecraft:wooden_door\";MinecraftItemTypes2[\"WoodenHoe\"]=\"minecraft:wooden_hoe\";MinecraftItemTypes2[\"WoodenPickaxe\"]=\"minecraft:wooden_pickaxe\";MinecraftItemTypes2[\"WoodenPressurePlate\"]=\"minecraft:wooden_pressure_plate\";MinecraftItemTypes2[\"WoodenShovel\"]=\"minecraft:wooden_shovel\";MinecraftItemTypes2[\"WoodenSlab\"]=\"minecraft:wooden_slab\";MinecraftItemTypes2[\"WoodenSword\"]=\"minecraft:wooden_sword\";MinecraftItemTypes2[\"Wool\"]=\"minecraft:wool\";MinecraftItemTypes2[\"WritableBook\"]=\"minecraft:writable_book\";MinecraftItemTypes2[\"YellowCandle\"]=\"minecraft:yellow_candle\";MinecraftItemTypes2[\"YellowCarpet\"]=\"minecraft:yellow_carpet\";MinecraftItemTypes2[\"YellowConcrete\"]=\"minecraft:yellow_concrete\";MinecraftItemTypes2[\"YellowConcretePowder\"]=\"minecraft:yellow_concrete_powder\";MinecraftItemTypes2[\"YellowDye\"]=\"minecraft:yellow_dye\";MinecraftItemTypes2[\"YellowFlower\"]=\"minecraft:yellow_flower\";MinecraftItemTypes2[\"YellowGlazedTerracotta\"]=\"minecraft:yellow_glazed_terracotta\";MinecraftItemTypes2[\"YellowShulkerBox\"]=\"minecraft:yellow_shulker_box\";MinecraftItemTypes2[\"YellowStainedGlass\"]=\"minecraft:yellow_stained_glass\";MinecraftItemTypes2[\"YellowStainedGlassPane\"]=\"minecraft:yellow_stained_glass_pane\";MinecraftItemTypes2[\"YellowTerracotta\"]=\"minecraft:yellow_terracotta\";MinecraftItemTypes2[\"YellowWool\"]=\"minecraft:yellow_wool\";MinecraftItemTypes2[\"ZoglinSpawnEgg\"]=\"minecraft:zoglin_spawn_egg\";MinecraftItemTypes2[\"ZombieHorseSpawnEgg\"]=\"minecraft:zombie_horse_spawn_egg\";MinecraftItemTypes2[\"ZombiePigmanSpawnEgg\"]=\"minecraft:zombie_pigman_spawn_egg\";MinecraftItemTypes2[\"ZombieSpawnEgg\"]=\"minecraft:zombie_spawn_egg\";MinecraftItemTypes2[\"ZombieVillagerSpawnEgg\"]=\"minecraft:zombie_villager_spawn_egg\";return MinecraftItemTypes2})(MinecraftItemTypes||{});export{MinecraftBiomeTypes,MinecraftBlockTypes,MinecraftCameraPresetsTypes,MinecraftCooldownCategoryTypes,MinecraftDimensionTypes,MinecraftEffectTypes,MinecraftEnchantmentTypes,MinecraftEntityTypes,MinecraftFeatureTypes,MinecraftItemTypes};\n","import {\n  ItemComponentTypes,\n  type ItemDurabilityComponent,\n  type ItemStack,\n} from \"@minecraft/server\"\n\nimport { MinecraftEnchantmentTypes } from \"@minecraft/vanilla-data\"\nimport { withProbability } from \"../../util/math\"\nimport { WrappedItemStack } from \"./WrappedItemStack.class\"\n\nexport class ItemStackWithDurability extends WrappedItemStack {\n  constructor(itemStack: ItemStack) {\n    if (!ItemStackWithDurability.match(itemStack))\n      throw new TypeError(\n        `The \"${itemStack.typeId}\" doesn't have the \"${ItemComponentTypes.Durability}\" component.`\n      )\n\n    super(itemStack)\n  }\n\n  static match(itemStack) {\n    return itemStack.hasComponent(\"minecraft:durability\")\n  }\n\n  get damage() {\n    return (\n      this.components.get(\n        ItemComponentTypes.Durability\n      ) as ItemDurabilityComponent\n    ).damage\n  }\n  set damage(value) {\n    ;(\n      this.components.get(\n        ItemComponentTypes.Durability\n      ) as ItemDurabilityComponent\n    ).damage = value < 0 ? 0 : value\n  }\n  get maxDurability() {\n    return (\n      this.components.get(\n        ItemComponentTypes.Durability\n      ) as ItemDurabilityComponent\n    ).maxDurability\n  }\n  get durability() {\n    return this.maxDurability - this.damage\n  }\n  set durability(value) {\n    this.damage += this.durability - value\n  }\n\n  applyDamage(damage: number) {\n    const unbreakingLevel = this.enchants.getEnchantment(\n      MinecraftEnchantmentTypes.Unbreaking\n    )?.level\n    const probability =\n      (\n        this.components.get(\n          ItemComponentTypes.Durability\n        ) as ItemDurabilityComponent\n      ).getDamageChance(unbreakingLevel) / 100\n\n    for (let i = 0; i < damage; i++) {\n      if (withProbability(probability)) this.durability -= 1\n    }\n\n    return this\n  }\n}\n","import type { MinecraftItemTypes } from \"@minecraft/vanilla-data\"\n\nimport type { ILootTableItemConfig } from \"@/lib/wrapper/LootTable.class\"\n\nexport type ItemDropConfig = {\n  item_id: MinecraftItemTypes\n  default_range?: [number, number] // default [1, 1]\n  max_amount?: number // default Number.POSITIVE_INFINITY\n  xp_range?: [number, number] // default [0, 0]\n  damage?: number // default 1\n}\n\nexport enum FortuneRules {\n  // 掉落一个权重为 2，每级增加一个掉落上限，权重为 1\n  Ore = 0,\n  // 掉落一个权重为 1，每级增加一个掉落上限，权重为 1，但不超过某上限\n  Melon = 1,\n  // 是否掉落有一固定概率\n  // 如果判定掉落，每级增加两个掉落上限，权重为 1\n  Grass = 2,\n  // 掉落一个权重为 1，每级增加两个掉落上限，权重为 1\n  Flower = 3,\n  // 固定掉落一个\n  // 额外掉落上限初始为 3，每级增加一个额外掉落上限，额外掉落服从 B(n, 4 / 7)\n  Crop = 4,\n  // 使用自定义的战利品表\n  Custom = 5,\n}\n\nexport type BlockDropsConfigOption = {\n  // necessary if the fortune rule is custom\n  custom?: Record<\n    \"0\" | \"1\" | \"2\" | \"3\",\n    Array<ILootTableItemConfig<ItemDropConfig[]>>\n  >\n}\n\nexport type BlockDropsConfig = Array<{\n  // when dig with item\n  // use \"<empty>\" for empty-handed\n  // use \"<default>\" if none of the other items meet the requirements\n  dig_by:\n    | MinecraftItemTypes\n    | Array<MinecraftItemTypes | \"<empty>\">\n    | {\n        item_group: string\n      }\n    | \"<empty>\"\n    | \"<default>\"\n\n  // the raw resource that drop\n  // default to use the block item (if has)\n  raw?: ItemDropConfig\n\n  // for ore like\n  // refined resource\n  refined?: ItemDropConfig\n\n  // for crop like\n  // seend resource, default to use raw resource\n  seed?: ItemDropConfig\n  // immature resource, default to use seed resource\n  immature?: ItemDropConfig\n\n  // the rule template for fortune enchantment\n  fortune_rule?: FortuneRules\n\n  option?: BlockDropsConfigOption\n}>\n\nexport type BlockConfig = {\n  drops: BlockDropsConfig\n}\n","import type { BlockConfig } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: \"<default>\",\n\n      raw: {\n        item_id: \"minecraft:acacia_log\",\n      },\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport type { BlockConfig } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.WOODEN_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:amethyst_block\",\n      },\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport type { BlockConfig } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.WOODEN_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:amethyst_shard\",\n        default_range: [4, 4],\n      },\n\n      fortune_rule: \"ore\",\n    },\n    {\n      dig_by: \"<default>\",\n\n      raw: {\n        item_id: \"minecraft:amethyst_shard\",\n        default_range: [2, 2],\n      },\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport type { BlockConfig } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.DIAMOND_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:ancient_debris\",\n      },\n      refined: {\n        item_id: \"minecraft:netherite_scrap\",\n      },\n    },\n  ],\n} as BlockConfig\n","import type { BlockConfig } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: \"<default>\",\n\n      raw: {\n        item_id: \"minecraft:birch_log\",\n      },\n    },\n  ],\n} as BlockConfig\n","import type { BlockConfig } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: \"<default>\",\n\n      raw: {\n        item_id: \"minecraft:cherry_log\",\n      },\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport { type BlockConfig, FortuneRules } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.WOODEN_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:coal\",\n        xp_range: [0, 2],\n      },\n\n      fortune_rule: FortuneRules.Ore,\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport { type BlockConfig, FortuneRules } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.STONE_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:raw_copper\",\n        default_range: [2, 5],\n      },\n      refined: {\n        item_id: \"minecraft:copper_ingot\",\n      },\n\n      fortune_rule: FortuneRules.Ore,\n    },\n  ],\n} as BlockConfig\n","import type { BlockConfig } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: \"<default>\",\n\n      raw: {\n        item_id: \"minecraft:crimson_stem\",\n      },\n    },\n  ],\n} as BlockConfig\n","import type { BlockConfig } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: \"<default>\",\n\n      raw: {\n        item_id: \"minecraft:dark_oak_log\",\n      },\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport type { BlockConfig } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.WOODEN_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:cobbled_deepslate\",\n      },\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport { type BlockConfig, FortuneRules } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.WOODEN_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:coal\",\n        xp_range: [0, 2],\n      },\n\n      fortune_rule: FortuneRules.Ore,\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport { type BlockConfig, FortuneRules } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.STONE_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:raw_copper\",\n        default_range: [2, 5],\n      },\n      refined: {\n        item_id: \"minecraft:copper_ingot\",\n      },\n\n      fortune_rule: FortuneRules.Ore,\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport { type BlockConfig, FortuneRules } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.IRON_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:diamond\",\n        xp_range: [3, 7],\n      },\n\n      fortune_rule: FortuneRules.Ore,\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport { type BlockConfig, FortuneRules } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.IRON_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:emerald\",\n        xp_range: [3, 7],\n      },\n\n      fortune_rule: FortuneRules.Ore,\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport { type BlockConfig, FortuneRules } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.IRON_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:raw_gold\",\n      },\n      refined: {\n        item_id: \"minecraft:gold_ingot\",\n      },\n\n      fortune_rule: FortuneRules.Ore,\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport { type BlockConfig, FortuneRules } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.STONE_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:raw_iron\",\n      },\n      refined: {\n        item_id: \"minecraft:iron_ingot\",\n      },\n\n      fortune_rule: FortuneRules.Ore,\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport { type BlockConfig, FortuneRules } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.STONE_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:lapis_lazuli\",\n        default_range: [4, 9],\n        xp_range: [2, 5],\n      },\n\n      fortune_rule: FortuneRules.Ore,\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport { type BlockConfig, FortuneRules } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.IRON_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:redstone\",\n        default_range: [4, 5],\n        xp_range: [1, 5],\n      },\n\n      fortune_rule: FortuneRules.Melon,\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport { type BlockConfig, FortuneRules } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.IRON_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:diamond\",\n        xp_range: [3, 7],\n      },\n\n      fortune_rule: FortuneRules.Ore,\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport { type BlockConfig, FortuneRules } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.IRON_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:emerald\",\n        xp_range: [3, 7],\n      },\n\n      fortune_rule: FortuneRules.Ore,\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport { type BlockConfig, FortuneRules } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.IRON_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:raw_gold\",\n      },\n      refined: {\n        item_id: \"minecraft:gold_ingot\",\n      },\n\n      fortune_rule: FortuneRules.Ore,\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport { type BlockConfig, FortuneRules } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.STONE_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:raw_iron\",\n      },\n      refined: {\n        item_id: \"minecraft:iron_ingot\",\n      },\n\n      fortune_rule: FortuneRules.Ore,\n    },\n  ],\n} as BlockConfig\n","import type { BlockConfig } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: \"<default>\",\n\n      raw: {\n        item_id: \"minecraft:jungle_log\",\n      },\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport { type BlockConfig, FortuneRules } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.STONE_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:lapis_lazuli\",\n        default_range: [4, 9],\n        xp_range: [2, 5],\n      },\n\n      fortune_rule: FortuneRules.Ore,\n    },\n  ],\n} as BlockConfig\n","import type { BlockConfig } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: \"<default>\",\n\n      raw: {\n        item_id: \"minecraft:mangrove_log\",\n      },\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport { type BlockConfig, FortuneRules } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.WOODEN_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:gold_nugget\",\n        default_range: [2, 6],\n        xp_range: [0, 1],\n      },\n      refined: {\n        item_id: \"minecraft:gold_ingot\",\n      },\n\n      fortune_rule: FortuneRules.Ore,\n    },\n  ],\n} as BlockConfig\n","import type { BlockConfig } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: \"<default>\",\n\n      raw: {\n        item_id: \"minecraft:oak_log\",\n      },\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport type { BlockConfig } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.DIAMOND_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:obsidian\",\n      },\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport { type BlockConfig, FortuneRules } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.WOODEN_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:quartz\",\n        xp_range: [2, 5],\n      },\n\n      fortune_rule: FortuneRules.Ore,\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport { type BlockConfig, FortuneRules } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.IRON_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:redstone\",\n        default_range: [4, 5],\n        xp_range: [1, 5],\n      },\n\n      fortune_rule: FortuneRules.Melon,\n    },\n  ],\n} as BlockConfig\n","import type { BlockConfig } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: \"<default>\",\n\n      raw: {\n        item_id: \"minecraft:spruce_log\",\n      },\n    },\n  ],\n} as BlockConfig\n","import { ItemTypeGroups } from \"@/lib/wrapper/item/index\"\nimport type { BlockConfig } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: ItemTypeGroups.WOODEN_PICKAXE_OR_UPPER.toArray(),\n\n      raw: {\n        item_id: \"minecraft:cobblestone\",\n      },\n      refined: {\n        item_id: \"minecraft:smooth_stone\",\n      },\n    },\n  ],\n} as BlockConfig\n","import type { BlockConfig } from \"./types\"\n\nexport default {\n  drops: [\n    {\n      dig_by: \"<default>\",\n\n      raw: {\n        item_id: \"minecraft:warped_stem\",\n      },\n    },\n  ],\n} as BlockConfig\n","// This file is automatically generated.\nimport acaciaLog from \"./acacia_log.json\"\nimport amethystBlock from \"./amethyst_block.json\"\nimport amethystCluster from \"./amethyst_cluster.json\"\nimport ancientDebris from \"./ancient_debris.json\"\nimport birchLog from \"./birch_log.json\"\nimport cherryLog from \"./cherry_log.json\"\nimport coalOre from \"./coal_ore.json\"\nimport copperOre from \"./copper_ore.json\"\nimport crimsonStem from \"./crimson_stem.json\"\nimport darkOakLog from \"./dark_oak_log.json\"\nimport deepslate from \"./deepslate.json\"\nimport deepslateCoalOre from \"./deepslate_coal_ore.json\"\nimport deepslateCopperOre from \"./deepslate_copper_ore.json\"\nimport deepslateDiamondOre from \"./deepslate_diamond_ore.json\"\nimport deepslateEmeraldOre from \"./deepslate_emerald_ore.json\"\nimport deepslateGoldOre from \"./deepslate_gold_ore.json\"\nimport deepslateIronOre from \"./deepslate_iron_ore.json\"\nimport deepslateLapisOre from \"./deepslate_lapis_ore.json\"\nimport deepslateRedstoneOre from \"./deepslate_redstone_ore.json\"\nimport diamondOre from \"./diamond_ore.json\"\nimport emeraldOre from \"./emerald_ore.json\"\nimport goldOre from \"./gold_ore.json\"\nimport ironOre from \"./iron_ore.json\"\nimport jungleLog from \"./jungle_log.json\"\nimport lapisOre from \"./lapis_ore.json\"\nimport mangroveLog from \"./mangrove_log.json\"\nimport netherGoldOre from \"./nether_gold_ore.json\"\nimport oakLog from \"./oak_log.json\"\nimport obsidian from \"./obsidian.json\"\nimport quartzOre from \"./quartz_ore.json\"\nimport redstoneOre from \"./redstone_ore.json\"\nimport spruceLog from \"./spruce_log.json\"\nimport stone from \"./stone.json\"\nimport type { BlockConfig } from \"./types\"\nimport warpedStem from \"./warped_stem.json\"\n\nexport default {\n  acacia_log: acaciaLog,\n  amethyst_block: amethystBlock,\n  amethyst_cluster: amethystCluster,\n  ancient_debris: ancientDebris,\n  birch_log: birchLog,\n  cherry_log: cherryLog,\n  coal_ore: coalOre,\n  copper_ore: copperOre,\n  crimson_stem: crimsonStem,\n  dark_oak_log: darkOakLog,\n  deepslate: deepslate,\n  deepslate_coal_ore: deepslateCoalOre,\n  deepslate_copper_ore: deepslateCopperOre,\n  deepslate_diamond_ore: deepslateDiamondOre,\n  deepslate_emerald_ore: deepslateEmeraldOre,\n  deepslate_gold_ore: deepslateGoldOre,\n  deepslate_iron_ore: deepslateIronOre,\n  deepslate_lapis_ore: deepslateLapisOre,\n  deepslate_redstone_ore: deepslateRedstoneOre,\n  diamond_ore: diamondOre,\n  emerald_ore: emeraldOre,\n  gold_ore: goldOre,\n  iron_ore: ironOre,\n  jungle_log: jungleLog,\n  lapis_ore: lapisOre,\n  mangrove_log: mangroveLog,\n  nether_gold_ore: netherGoldOre,\n  oak_log: oakLog,\n  obsidian: obsidian,\n  quartz_ore: quartzOre,\n  redstone_ore: redstoneOre,\n  spruce_log: spruceLog,\n  stone: stone,\n  warped_stem: warpedStem,\n} as Record<string, BlockConfig>\n","import type { NumberRange as INumberRange } from \"@minecraft/common\"\n\nimport { range } from \"./util/math\"\n\nexport class NumberRange implements INumberRange {\n  min: number\n  max: number\n  step: number\n\n  constructor(min: number, max: number, step = 1) {\n    this.min = min\n    this.max = max\n    this.step = step\n  }\n  toArray() {\n    return range(this.min, this.max + this.step, this.step)\n  }\n\n  get array() {\n    return this.toArray()\n  }\n\n  includes(n: number) {\n    return this.array.includes(n)\n  }\n\n  [Symbol.iterator]() {\n    return this.array.values()\n  }\n}\n","import { withProbability } from \"../util/math\"\n\nexport interface ILootTableItemConfig<T> {\n  weight: number\n  value: T\n}\n\nexport class LootTable<T = number> {\n  constructor(items: Array<ILootTableItemConfig<T>>) {\n    if (items) {\n      for (const item of items) this.addItem(item)\n    }\n  }\n\n  table = new Set<ILootTableItemConfig<T>>()\n  totalWeight = 0\n\n  addItem(item: ILootTableItemConfig<T>) {\n    this.table.add(item)\n    this.totalWeight += item.weight\n  }\n\n  getResult() {\n    let total = 0\n    for (const { weight, value } of this.table) {\n      if (withProbability(weight / (this.totalWeight - total))) return value\n      total += weight\n    }\n\n    throw new Error(\"Unexpected error.\")\n  }\n\n  [Symbol.iterator]() {\n    return this.table[Symbol.iterator]()\n  }\n}\n","import {\n  type BlockDropsConfig,\n  type BlockDropsConfigOption,\n  FortuneRules,\n  type ItemDropConfig,\n} from \"@/data/block/types\"\nimport { BlockPermutation } from \"@minecraft/server\"\nimport type { MinecraftItemTypes } from \"@minecraft/vanilla-data\"\n\nimport BlockDefinition from \"../../../data/block/index\"\nimport { NumberRange } from \"../../NumberRange.class\"\nimport { removeMinecraftNamespace } from \"../../util/game\"\nimport { binomialDistribution, range } from \"../../util/math\"\nimport { LootTable } from \"../LootTable.class\"\n\nclass DropItem {\n  itemId: MinecraftItemTypes\n  range: NumberRange\n  amountLootTable: LootTable\n  maxAmount: number\n  xpRange: NumberRange\n  damage: number\n\n  constructor({\n    item_id: itemId,\n    default_range: defaultRange = [1, 1],\n    max_amount: maxAmount = Number.POSITIVE_INFINITY,\n    xp_range: xpRange = [0, 0],\n    damage = 1,\n  }: ItemDropConfig) {\n    this.itemId = itemId\n    this.range = new NumberRange(...defaultRange)\n    this.amountLootTable = new LootTable(this.range.toArray())\n    this.maxAmount = maxAmount\n    this.xpRange = new NumberRange(...xpRange)\n    this.damage = damage\n  }\n\n  getResult(): Array<{\n    itemId: MinecraftItemTypes\n    amount: number\n    xp?: number\n    damage?: number\n  }> {\n    return [\n      {\n        itemId: this.itemId,\n        amount: Math.min(this.amountLootTable.getResult(), this.maxAmount),\n        xp: new LootTable(this.xpRange.toArray()).getResult(),\n        damage: this.damage,\n      },\n    ]\n  }\n}\n\nclass DropItemGroup {\n  items: DropItem[]\n\n  constructor(group: ItemDropConfig[]) {\n    this.items = group.map((e) => new DropItem(e))\n  }\n  getResult() {\n    const output: ReturnType<DropItem[\"getResult\"]> = []\n\n    for (const item of this.items) output.push(...item.getResult())\n\n    return output\n  }\n}\n\nexport class BlockDrops {\n  blockTypeId: string\n  drops: BlockDropsConfig\n\n  blockItem: DropItem\n  rawResource: DropItem\n  refinedResource: DropItem | undefined\n  seedResource: DropItem\n  immatureResource: DropItem\n\n  fortuneRule: BlockDropsConfig[number][\"fortune_rule\"]\n\n  custumLootTables: BlockDropsConfigOption[\"custom\"]\n\n  constructor(\n    blockTypeId: string,\n    useItem: MinecraftItemTypes | \"<empty>\" = \"<empty>\"\n  ) {\n    const identifier = removeMinecraftNamespace(blockTypeId)\n    const drops = BlockDefinition[identifier]?.drops\n\n    if (!drops) throw new Error(`Block ${identifier} has not been supported.`)\n\n    this.blockTypeId = blockTypeId\n    this.drops = drops\n\n    const dropConfig = this.getDropConfig(useItem)\n    if (!dropConfig) {\n      throw new Error(`Couldn't find drop config when dig with ${useItem}`)\n    }\n\n    this.blockItem = new DropItem({\n      item_id: BlockPermutation.resolve(this.blockTypeId).getItemStack()\n        ?.typeId as MinecraftItemTypes,\n    })\n    this.rawResource = dropConfig.raw\n      ? new DropItem(dropConfig.raw)\n      : this.blockItem\n\n    // for ore like\n    this.refinedResource =\n      dropConfig.refined && new DropItem(dropConfig.refined)\n\n    // for crop like\n    this.seedResource = dropConfig.seed\n      ? new DropItem(dropConfig.seed)\n      : this.rawResource\n    this.immatureResource = dropConfig.immature\n      ? new DropItem(dropConfig.immature)\n      : this.seedResource\n\n    this.fortuneRule = dropConfig.fortune_rule\n\n    // only work with custom rule\n    if (this.fortuneRule === FortuneRules.Custom) {\n      if (!dropConfig.option?.custom)\n        throw new Error(\n          \"You must provide a custom loot table for the custom fortune rule.\"\n        )\n\n      this.custumLootTables = dropConfig.option.custom\n    }\n  }\n\n  getDropConfig(useItem: MinecraftItemTypes | \"<empty>\") {\n    return (\n      this.drops.find((e) => {\n        const digBy = e.dig_by\n        if (Array.isArray(digBy)) return digBy.includes(useItem)\n        if (typeof digBy === \"string\") return digBy === useItem\n      }) ?? this.drops.find((e) => e.dig_by === \"<default>\")\n    )\n  }\n\n  getDrops({ withFortune = 0, withSilkTouch = false, immature = false } = {}) {\n    if (withFortune && withSilkTouch)\n      throw new Error(\"Could not call with both fortune and silk_touch.\")\n\n    if (immature) {\n      return this.immatureResource.getResult()\n    }\n    if (withSilkTouch) {\n      return this.blockItem.getResult()\n    }\n    if (withFortune !== 0 && this.fortuneRule !== undefined) {\n      const level = withFortune\n\n      switch (this.fortuneRule) {\n        case FortuneRules.Ore: {\n          const rawResource = this.rawResource.getResult()[0]\n\n          const lootTable = new LootTable([\n            ...range(2, level + 2).map((i) => ({\n              weight: 1,\n              value: i,\n            })),\n            {\n              weight: 2,\n              value: 1,\n            },\n          ])\n          rawResource.amount *= lootTable.getResult()\n\n          return [rawResource]\n        }\n        case FortuneRules.Melon: {\n          const rawResource = this.rawResource.getResult()[0]\n\n          const lootTable = new LootTable([\n            ...this.rawResource.amountLootTable,\n            ...range(1, level + 1).map((i) => ({\n              weight: 1,\n              value: Math.min(\n                this.rawResource.maxAmount,\n                this.rawResource.range.max + i\n              ),\n            })),\n          ])\n          rawResource.amount = lootTable.getResult()\n\n          return [rawResource]\n        }\n        case FortuneRules.Grass: {\n          const rawResource = this.rawResource.getResult()[0]\n\n          if (rawResource.amount === 0) return [rawResource]\n\n          const lootTable = new LootTable(range(1, level * 2 + 2))\n          rawResource.amount = lootTable.getResult()\n          return [rawResource]\n        }\n        case FortuneRules.Flower: {\n          const rawResource = this.rawResource.getResult()[0]\n\n          const lootTable = new LootTable(range(1, level * 2 + 2))\n          rawResource.amount = lootTable.getResult()\n\n          return [rawResource]\n        }\n        case FortuneRules.Crop: {\n          const rawResource = this.rawResource.getResult()[0]\n\n          const distribution = binomialDistribution(level + 3, 4 / 7)\n          const lootTable = new LootTable(\n            range(0, level + 4).map((i) => ({\n              weight: distribution(i),\n              value: i,\n            }))\n          )\n\n          return [\n            rawResource,\n            {\n              // TODO: use class\n              itemId: this.seedResource.itemId,\n              amount: lootTable.getResult(),\n            },\n          ]\n        }\n        case FortuneRules.Custom: {\n          const lootTable = new LootTable<ItemDropConfig[]>(\n            this.custumLootTables![`${level}` as \"0\" | \"1\" | \"2\" | \"3\"]\n          )\n          const customItemDrop = new DropItemGroup(lootTable.getResult())\n          return customItemDrop.getResult()\n        }\n      }\n    }\n\n    return this.rawResource.getResult()\n  }\n}\n","import {\n  type Block,\n  BlockPermutation,\n  BlockVolume,\n  ItemStack,\n} from \"@minecraft/server\"\nimport type {\n  MinecraftBlockTypes,\n  MinecraftItemTypes,\n} from \"@minecraft/vanilla-data\"\n\nimport {\n  BlockLocation,\n  type Direction,\n  type Location,\n  LocationUtils,\n} from \"../../location/index\"\nimport { WrapperTemplate } from \"../WrapperTemplate.class\"\nimport { WrappedItemStack } from \"../item/index\"\nimport { BlockDrops } from \"./BlockDrops.class\"\n\nexport class WrappedBlock extends WrapperTemplate {\n  _block: Block\n  type: Block[\"type\"]\n  typeId: MinecraftBlockTypes\n  location: BlockLocation\n  dimension: Block[\"dimension\"]\n  permutation: Block[\"permutation\"]\n\n  constructor(block: Block) {\n    super()\n\n    this._block = block\n\n    this.type = block.type\n    this.typeId = block.typeId as MinecraftBlockTypes\n    this.location = BlockLocation.create(block.location)\n    this.dimension = block.dimension\n    this.permutation = block.permutation\n  }\n\n  getOffsetBlock(v: Location | BlockLocation) {\n    const location = this.location.clone().offset(v)\n    return new WrappedBlock(this.dimension.getBlock(location))\n  }\n  getNeighbourBlock(direction: Direction) {\n    const offset = LocationUtils.getDirectionOffset(direction)\n    return this.getOffsetBlock(offset)\n  }\n\n  getState(name: string) {\n    return this.permutation.getState(name)\n  }\n  hasState(name: string) {\n    return !!this.getState(name)\n  }\n  setState(name: string, value: string | number | boolean) {\n    const states = this.permutation.getAllStates()\n    states[name] = value\n    this._block.setPermutation(BlockPermutation.resolve(this.typeId, states))\n  }\n\n  canBeDugBy(itemTypeId: MinecraftItemTypes | \"<empty>\" = \"<empty>\") {\n    return !!new BlockDrops(this.typeId).getDropConfig(itemTypeId)\n  }\n\n  destroy() {\n    this.dimension.fillBlocks(\n      new BlockVolume(this.location, this.location),\n      BlockPermutation.resolve(\"minecraft:air\")\n    )\n  }\n  breakBy(useItemStack: ItemStack | WrappedItemStack) {\n    const drops = new BlockDrops(\n      this.typeId,\n      (useItemStack.typeId as MinecraftItemTypes) ?? \"<empty>\"\n    )\n\n    this.destroy()\n\n    const result = (() => {\n      if (useItemStack) {\n        const item =\n          useItemStack instanceof WrappedItemStack\n            ? useItemStack\n            : new WrappedItemStack(useItemStack)\n        return drops.getDrops({\n          withFortune: item.enchants.getEnchantment(\"fortune\")?.level ?? 0,\n          withSilkTouch: item.enchants.hasEnchantment(\"silk_touch\"),\n        })\n      }\n      return drops.getDrops()\n    })()\n\n    const spawnDrops = () => {\n      for (const drop of result) {\n        this.dimension.spawnItem(\n          new ItemStack(drop.itemId, drop.amount),\n          this.location\n        )\n        if (drop.xp) {\n          while (drop.xp--)\n            this.dimension.spawnEntity(\"minecraft:xp_orb\", this.location)\n        }\n      }\n    }\n\n    const getTotalDamage = () => {\n      let damage = 0\n      for (const drop of result) {\n        if (drop.damage) damage += drop.damage\n      }\n      return damage\n    }\n\n    return { drops: result, spawnDrops, getTotalDamage }\n  }\n}\n","import { WrapperTemplate } from \"../WrapperTemplate.class\"\nimport type { WrappedBlock } from \"./WrappedBlock.class\"\n\nexport class WrappedBlocks extends WrapperTemplate {\n  _blocks: WrappedBlock[]\n\n  constructor(blocks: WrappedBlock[]) {\n    super()\n\n    this._blocks = blocks\n  }\n\n  get _block() {\n    return this._blocks[0]\n  }\n\n  get type() {\n    return this._block.type\n  }\n  get typeId() {\n    return this._block.typeId\n  }\n  get location() {\n    return this._block.location\n  }\n  get dimension() {\n    return this._block.dimension\n  }\n  get permutation() {\n    return this._block.permutation\n  }\n}\n","import type { Block } from \"@minecraft/server\"\n\nimport { type Vector3, Vector3Utils } from \"../../vector/index\"\nimport type { WrappedBlock } from \"./WrappedBlock.class\"\n\nexport class BlockList<T extends Block | WrappedBlock> {\n  constructor(blocks?: T[]) {\n    if (blocks) this.add(...blocks)\n  }\n\n  blocks: T[] = []\n\n  get size() {\n    return this.blocks.length\n  }\n\n  add(...blocks: T[]) {\n    for (const block of blocks) {\n      if (!this.has(block)) this.blocks.push(block)\n    }\n  }\n  has(block: T) {\n    return this.blocks.some(({ location }) =>\n      Vector3Utils.exactEquals(location as Vector3, block.location as Vector3)\n    )\n  }\n\n  shift() {\n    return this.blocks.shift()\n  }\n\n  [Symbol.iterator]() {\n    return this.blocks.values()\n  }\n}\n","import type { Block } from \"@minecraft/server\"\n\nimport { BlockLocation, Directions } from \"../../location/index\"\nimport { WrappedBlock } from \"./WrappedBlock.class\"\nimport { WrappedBlocks } from \"./WrappedBlocks.class\"\n\nimport {\n  COPPER_DOORS,\n  DOORS,\n  WOODEN_DOORS,\n} from \"./BlockTypeGroups.enumeration\"\n\nexport class DoorBlock extends WrappedBlocks {\n  constructor(block: Block) {\n    DoorBlock.assert(block)\n\n    const wrappedBlock =\n      block instanceof WrappedBlock ? block : new WrappedBlock(block)\n\n    const isUpper = wrappedBlock.getState(\"upper_block_bit\")\n    const blocks = [\n      // _lower\n      isUpper ? wrappedBlock.getNeighbourBlock(Directions.Down) : wrappedBlock,\n      // _upper\n      isUpper ? wrappedBlock : wrappedBlock.getNeighbourBlock(Directions.Up),\n    ]\n\n    super(blocks)\n  }\n\n  static match(block) {\n    return DOORS.has(block?.typeId)\n  }\n  static assert(block) {\n    if (DoorBlock.match(block)) return true\n\n    throw new TypeError(`The \"${block.typeId}\" is not a door.`)\n  }\n\n  get _lower() {\n    return this._blocks[0]\n  }\n  get _upper() {\n    return this._blocks[1]\n  }\n\n  get opened() {\n    return this._lower.getState(\"open_bit\")\n  }\n  get facingDirection() {\n    // the direction you are facing when you place the door\n    const directionCode = this._lower.getState(\"direction\")\n    switch (directionCode) {\n      case 0:\n        return Directions.East\n      case 1:\n        return Directions.South\n      case 2:\n        return Directions.West\n      case 3:\n        return Directions.North\n      default:\n        // this branch can't be reached forever\n        throw new Error(\"Unkonw error.\")\n    }\n  }\n  get hingeSide() {\n    return this._upper.getState(\"door_hinge_bit\")\n    // true -> right\n    // false -> left\n  }\n\n  isWooden() {\n    return WOODEN_DOORS.has(this.typeId)\n  }\n  isCopper() {\n    return COPPER_DOORS.has(this.typeId)\n  }\n  isIron() {\n    return !this.canBeOpenedByHand()\n  }\n  canBeOpenedByHand() {\n    return this.isWooden() || this.isCopper()\n  }\n\n  open() {\n    this._lower.setState(\"open_bit\", true)\n  }\n  close() {\n    this._lower.setState(\"open_bit\", false)\n  }\n\n  getRelated({ shouldBeTheSameType = true } = {}) {\n    // 获取可以与该门双开的另一个门和这个门组成的列表\n    const output: DoorBlock[] = [this]\n\n    // 1. 获取另一个门的位置\n    //    根据门的方向和门轴位置确定\n    // e.g. 如果一个门的朝向是东边，门轴在左边（即北边）\n    //      那么另一个门应该位于南边，即 z+1 的位置\n    const facingDirection = this.facingDirection\n    const hingeSide = this.hingeSide\n    const offset = BlockLocation.create({\n      x: Number(\n        facingDirection.isSouth()\n          ? hingeSide || -1\n          : facingDirection.isNorth()\n            ? !hingeSide || -1\n            : 0\n      ),\n      y: 0,\n      z: Number(\n        facingDirection.isEast()\n          ? !hingeSide || -1\n          : facingDirection.isWest()\n            ? hingeSide || -1\n            : 0\n      ),\n    })\n\n    // 2. 进行判断\n    const relatedBlock = this._lower.getOffsetBlock(offset)\n    if (DoorBlock.match(relatedBlock)) {\n      const relatedDoor = new DoorBlock(relatedBlock._block)\n      // 另一扇门应该方向相同，而门轴相反\n      if (\n        relatedDoor.canBeOpenedByHand() &&\n        (shouldBeTheSameType ? relatedDoor.typeId === this.typeId : true) &&\n        relatedDoor.facingDirection.code === facingDirection.code &&\n        relatedDoor.hingeSide === !hingeSide\n      )\n        output.push(relatedDoor)\n    }\n\n    return output\n  }\n}\n","import type { Entity } from \"@minecraft/server\"\nimport type { MinecraftEntityTypes } from \"@minecraft/vanilla-data\"\n\nimport { Directions, Location } from \"../../location/index\"\nimport { removeMinecraftNamespace } from \"../../util/game\"\n\nimport { WrapperTemplate } from \"../WrapperTemplate.class\"\n\nexport class WrappedEntity extends WrapperTemplate {\n  _entity: Entity\n  id: Entity[\"id\"]\n  typeId: MinecraftEntityTypes\n  scoreboardIdentity: Entity[\"scoreboardIdentity\"]\n  components = new Map()\n\n  constructor(entity: Entity) {\n    super()\n\n    this._entity = entity\n\n    this.id = entity.id\n    this.typeId = entity.typeId as MinecraftEntityTypes\n\n    this.scoreboardIdentity = entity.scoreboardIdentity\n\n    const components = entity.getComponents()\n    for (const component of components)\n      this.components.set(removeMinecraftNamespace(component.typeId), component)\n  }\n\n  get nameTag() {\n    return this._entity.nameTag\n  }\n  get location() {\n    return Location.create(this._entity.location)\n  }\n  get dimension() {\n    return this._entity.dimension\n  }\n\n  get isSneaking() {\n    return this._entity.isSneaking\n  }\n\n  getRotation() {\n    return this._entity.getRotation()\n  }\n\n  getFacingDirectionXZ() {\n    const rotation = this.getRotation().y\n\n    if (rotation > -135 && rotation <= -45) return Directions.East\n    if (rotation > -45 && rotation <= 45) return Directions.South\n    if (rotation > 45 && rotation <= 135) return Directions.West\n    if (rotation > 135 || rotation <= -135) return Directions.North\n\n    throw new Error(\"Unexpected error.\")\n  }\n}\n","import {\n  Dimension,\n  Entity,\n  MinecraftDimensionTypes,\n  type Player,\n  world,\n} from \"@minecraft/server\"\n\nimport { BetterConsole } from \"../BetterConsole.class\"\n\ntype CommandConfig = {\n  regex: RegExp\n  runner: (commandString: string, target: Player) => Promise<void>\n}\n\nconst overworld = world.getDimension(MinecraftDimensionTypes.overworld)\n\nconst CUSTOM_COMMAND_SET = new Set<CommandConfig>()\n\nexport class Commands {\n  static run(commandString: string, target: Entity | Dimension = overworld) {\n    if (target instanceof Dimension || target instanceof Entity)\n      return target.runCommand(commandString)\n    throw new TypeError(\"Target must be Entity or Dimension.\")\n  }\n  static async asyncRun(\n    commandString: string,\n    target: Entity | Dimension = overworld\n  ) {\n    if (target instanceof Dimension || target instanceof Entity) {\n      const customCommands = [...CUSTOM_COMMAND_SET]\n        .filter(({ regex }) => regex.test(commandString))\n        .map((e) => e.runner)\n      if (customCommands.length) {\n        for (const runner of customCommands) {\n          // FIXME: enable entity and dimension to be the target\n          await runner(commandString, target)\n        }\n      } else return await target.runCommandAsync(commandString)\n    } else throw new TypeError(\"Target must be Entity or Dimension.\")\n  }\n  static register(\n    prefix: string,\n    command: string,\n    callback: (argv: string[], target: Player) => Promise<void>\n  ) {\n    if (prefix.startsWith(\"/\"))\n      throw new Error(\"Unable to register slash commands.\")\n\n    const regex = new RegExp(`^${prefix}${command}( |$)`)\n    const runner: CommandConfig[\"runner\"] = async (commandString, target) => {\n      const argv = commandString\n        .split(/(\".*?\"|[^\"\\s]+)+(?=\\s*|\\s*$)/g)\n        .filter((e) => e.trim().length > 0)\n      await callback(argv, target)\n    }\n    CUSTOM_COMMAND_SET.add({ regex, runner })\n\n    world.beforeEvents.chatSend.subscribe((event) => {\n      if (regex.test(event.message)) {\n        event.cancel = true\n\n        runner(event.message, event.sender).catch(BetterConsole.error)\n      }\n    })\n  }\n}\n\nexport default Commands\n","import type { Container, ItemStack } from \"@minecraft/server\"\n\nimport { WrapperTemplate } from \"../WrapperTemplate.class\"\n\nexport class WrappedContainer extends WrapperTemplate {\n  _container: Container\n\n  constructor(container: Container) {\n    super()\n\n    this._container = container\n  }\n\n  get size() {\n    return this._container.size\n  }\n  get emptySlotsCount() {\n    return this._container.emptySlotsCount\n  }\n\n  getItem(slot: number) {\n    return this._container.getItem(slot)\n  }\n  setItem(slot: number, itemStack: ItemStack) {\n    return this._container.setItem(slot, itemStack)\n  }\n  tryAddItem(itemStack: ItemStack) {\n    return this._container.addItem(itemStack)\n  }\n}\n","import type { Container, Entity, ItemStack } from \"@minecraft/server\"\n\nimport type { WrappedEntity } from \"../entity\"\nimport { WrappedContainer } from \"./WrappedContainer.class\"\n\nexport class EntityContainer extends WrappedContainer {\n  _entity: Entity\n\n  constructor(entity: Entity | WrappedEntity, container: Container) {\n    super(container)\n\n    this._entity = entity\n  }\n\n  get location() {\n    return this._entity.location\n  }\n  get dimension() {\n    return this._entity.dimension\n  }\n\n  addItem(itemStack: ItemStack) {\n    const remain = this.tryAddItem(itemStack)\n\n    if (remain) this.dimension.spawnItem(remain, this.location)\n  }\n}\n","import {\n  type Entity,\n  GameMode,\n  type ItemStack,\n  type Player,\n} from \"@minecraft/server\"\n\nimport { Commands } from \"../../commands/index\"\nimport { EntityContainer } from \"../container/index\"\nimport { WrappedEntity } from \"./WrappedEntity.class\"\n\nexport class WrappedPlayer extends WrappedEntity {\n  name: Player[\"name\"]\n\n  constructor(player: Player) {\n    super(player)\n\n    this.name = player.name\n  }\n\n  static match(entity: Entity | WrappedEntity) {\n    return entity.typeId === \"minecraft:player\"\n  }\n\n  get _player() {\n    return this._entity as Player\n  }\n\n  get experience() {\n    return this.addExperience(0)\n  }\n  get level() {\n    return this._player.level\n  }\n  get inventory() {\n    return new EntityContainer(this, this.components.get(\"inventory\").container)\n  }\n  get selectedSlotIndex() {\n    return this._player.selectedSlotIndex\n  }\n\n  getGameMode() {\n    const matches: GameMode[] = []\n    each(GameMode, (mode) => {\n      if (this.testGameMode(mode)) matches.push(mode)\n    })\n    return matches[0]\n  }\n  testGameMode(mode: GameMode) {\n    const playersUnderMode = this.dimension.getPlayers({ gameMode: mode })\n    return playersUnderMode.some((player) => player.id === this.id)\n  }\n  setGameMode(mode: GameMode) {\n    if (!Object.values(GameMode).includes(mode))\n      throw new TypeError(\"Unknown gamemode.\")\n    Commands.run(`gamemode ${mode}`, this._player)\n  }\n\n  getMainHandItem() {\n    return this.inventory.getItem(this.selectedSlotIndex)\n  }\n  setMainHandItem(item: ItemStack) {\n    this.inventory.setItem(this.selectedSlotIndex, item)\n  }\n\n  async useItemFromInventory(\n    slot: number,\n    callback: (itemStack: ItemStack | undefined) => Promise<ItemStack>\n  ) {\n    let itemStack = this.inventory.getItem(slot)\n\n    itemStack = await callback(itemStack)\n\n    this.inventory.setItem(slot, itemStack)\n  }\n  async useMainHandItem(\n    callback: (itemStack: ItemStack | undefined) => Promise<ItemStack>\n  ) {\n    await this.useItemFromInventory(this.selectedSlotIndex, callback)\n  }\n\n  addExperience(amount = 0, { useXpOrb = false } = {}): number {\n    let xpAmount = amount\n\n    if (useXpOrb && amount >= 0) {\n      while (xpAmount--)\n        this.dimension.spawnEntity(\"minecraft:xp_orb\", this.location)\n\n      return this.experience\n    }\n\n    return this._player.addExperience(amount)\n  }\n  addLevels(amount = 0) {\n    return this._player.addLevels(amount)\n  }\n}\n","import type { Block, Player } from \"@minecraft/server\"\n\nimport { Directions } from \"../../location/index\"\nimport { WrappedPlayer } from \"../entity/index\"\nimport { WrappedBlock } from \"./WrappedBlock.class\"\n\nimport {\n  COPPER_TRAPDOORS,\n  TRAPDOORS,\n  WOODEN_TRAPDOORS,\n} from \"./BlockTypeGroups.enumeration\"\n\nexport class TrapdoorBlock extends WrappedBlock {\n  constructor(block: Block) {\n    TrapdoorBlock.assert(block)\n\n    super(block)\n  }\n\n  static match(block) {\n    return TRAPDOORS.has(block?.typeId)\n  }\n  static assert(block) {\n    if (TrapdoorBlock.match(block)) return true\n\n    throw new TypeError(`The \"${block.typeId}\" is not a trapdoor.`)\n  }\n\n  get opened() {\n    return this.getState(\"open_bit\")\n  }\n  get facingDirection() {\n    // trapdoor is on the >direction< side of a block\n    const directionCode = this.getState(\"direction\")\n    switch (directionCode) {\n      case 0:\n        return Directions.East\n      case 2:\n        return Directions.South\n      case 1:\n        return Directions.West\n      case 3:\n        return Directions.North\n      default:\n        // this branch can't be reached forever\n        throw new Error(\"Unkonw error.\")\n    }\n  }\n  get upsideOrDown() {\n    return this.getState(\"upside_down_bit\")\n  }\n\n  isWooden() {\n    return WOODEN_TRAPDOORS.has(this.typeId)\n  }\n  isCopper() {\n    return COPPER_TRAPDOORS.has(this.typeId)\n  }\n  isIron() {\n    return !this.canBeOpenedByHand()\n  }\n  canBeOpenedByHand() {\n    return this.isWooden() || this.isCopper()\n  }\n\n  open() {\n    this.setState(\"open_bit\", true)\n  }\n  close() {\n    this.setState(\"open_bit\", false)\n  }\n\n  getRelated(\n    player: Player,\n    { extensive = true, maxLength = 1, shouldBeTheSameType = true } = {}\n  ) {\n    // 获取可以与该活板门双开的另外一些活板门和这个活板门组成的列表\n    const output: TrapdoorBlock[] = [this]\n\n    if (maxLength > 0) {\n      // 1. 获取另一个活板门的位置\n      // e.g. 如果一个活板门位于一个方块的东边\n      //      那么另一个活板门应该位于东边，即 x+1 的位置\n      const relatedBlock = this.getNeighbourBlock(this.facingDirection)\n\n      // 2. 判断是否为相关活板门\n      if (TrapdoorBlock.match(relatedBlock)) {\n        // TODO: refactor _bloc6k\n        const relatedTrapdoor = new TrapdoorBlock(relatedBlock._block)\n        // 方向相反，上下位置相同\n        if (\n          relatedTrapdoor.canBeOpenedByHand() &&\n          (shouldBeTheSameType\n            ? relatedTrapdoor.typeId === this.typeId\n            : true) &&\n          relatedTrapdoor.facingDirection.isOppositeTo(this.facingDirection) &&\n          relatedTrapdoor.upsideOrDown === this.upsideOrDown\n        )\n          output.push(relatedTrapdoor)\n      }\n    }\n\n    if (extensive) {\n      let that: TrapdoorBlock = this\n      let needOpposite = false\n\n      // 仅 maxLength > 1 时才会运行\n      while (--maxLength) {\n        // 3. 获取扩展活板门\n        //    即能与该活板门延伸联动的另一个活板门\n        // @ts-ignore\n        const playerFacing = new WrappedPlayer(player).getFacingDirectionXZ()\n        const extensiveBlock = needOpposite\n          ? that.getNeighbourBlock(playerFacing.getOpposite())\n          : that.getNeighbourBlock(playerFacing)\n\n        if (TrapdoorBlock.match(extensiveBlock)) {\n          const extensiveTrapdoor = new TrapdoorBlock(extensiveBlock._block)\n\n          // 方向相同，上下位置相同\n          if (\n            extensiveTrapdoor.canBeOpenedByHand() &&\n            (shouldBeTheSameType\n              ? extensiveTrapdoor.typeId === this.typeId\n              : true) &&\n            extensiveTrapdoor.facingDirection.equals(this.facingDirection) &&\n            extensiveTrapdoor.upsideOrDown === this.upsideOrDown\n          ) {\n            const result = extensiveTrapdoor.getRelated(player, {\n              extensive: false,\n              maxLength,\n            })\n            if (result.length > 1) {\n              output.push(...result)\n\n              that = extensiveTrapdoor\n              continue\n            }\n          }\n        }\n\n        // 当玩家面对的方向可以联动的活板门数量不足时\n        // 反向查找\n        if (!needOpposite) {\n          needOpposite = true\n          that = this\n          // 因为此变向操纵消耗了一次迭代，故补充一次\n          maxLength++\n        } else {\n          break\n        }\n      }\n    }\n\n    return output\n  }\n}\n","import type { Player, RawMessage } from \"@minecraft/server\"\nimport {\n  type ActionFormData,\n  ActionFormResponse,\n  FormCancelationReason,\n  MessageFormData,\n  MessageFormResponse,\n  type ModalFormData,\n  ModalFormResponse,\n} from \"@minecraft/server-ui\"\n\nimport { asyncRun } from \"../util/game\"\n\ninterface DialogHandlers<T> {\n  dialog: ModalFormData | MessageFormData | ActionFormData\n  onClose?: () => Promise<T>\n  onSubmit?: (\n    submitted: NonNullable<ModalFormResponse[\"formValues\"]>\n  ) => Promise<T>\n  onSelectButton1?: () => Promise<T>\n  onSelectButton2?: () => Promise<T>\n  onSelect?: (\n    selected: NonNullable<ActionFormResponse[\"selection\"]>\n  ) => Promise<T>\n}\n\nexport class Dialog<T> implements DialogHandlers<T> {\n  static async confirm<U>({\n    title = \"确认\",\n    body,\n    target,\n    onCancel = async () => ({}) as U,\n    onConfirm = async () => ({}) as U,\n  }: {\n    title?: string\n    body: RawMessage | string\n    target: Player\n    onCancel?: () => Promise<U>\n    onConfirm?: () => Promise<U>\n  }): Promise<U | undefined> {\n    if (!body || !target) throw new Error()\n    const form = await asyncRun(() => {\n      return new Dialog<U>({\n        dialog: new MessageFormData()\n          .title(title)\n          .body(body)\n          .button1(\"CANCEL\")\n          .button2(\"OK\"),\n        onClose: onCancel,\n        onSelectButton1: onCancel,\n        onSelectButton2: onConfirm,\n      })\n    })\n\n    return await form.show(target)\n  }\n\n  dialog\n  onClose\n  onSubmit\n  onSelectButton1\n  onSelectButton2\n  onSelect\n\n  constructor({\n    dialog,\n    onClose = async () => ({}) as T,\n    onSubmit = async () => ({}) as T,\n    onSelectButton1 = async () => ({}) as T,\n    onSelectButton2 = async () => ({}) as T,\n    onSelect = async () => ({}) as T,\n  }: DialogHandlers<T>) {\n    this.dialog = dialog\n    this.onSubmit = onSubmit\n    this.onSelectButton1 = onSelectButton1\n    this.onSelectButton2 = onSelectButton2\n    this.onSelect = onSelect\n    this.onClose = onClose\n  }\n\n  async show(target: Player): Promise<T | undefined> {\n    let response: ModalFormResponse | MessageFormResponse | ActionFormResponse\n\n    target.sendMessage(\"[!] 新对话框已发送，请关闭命令输入栏或其他对话框\")\n\n    do {\n      response = await this.dialog.show(target)\n    } while (response.cancelationReason === FormCancelationReason.UserBusy)\n\n    if (\n      response.canceled &&\n      response.cancelationReason === FormCancelationReason.UserClosed\n    )\n      return await this.onClose()\n\n    if (response instanceof ModalFormResponse) {\n      if (!response.formValues) throw new Error(\"Unexpected error.\")\n\n      return await this.onSubmit(response.formValues)\n    }\n\n    if (response instanceof MessageFormResponse) {\n      if (response.selection === 0) return await this.onSelectButton1()\n      if (response.selection === 1) return await this.onSelectButton2()\n\n      throw new Error(\"Unexpected error.\")\n    }\n\n    if (response instanceof ActionFormResponse) {\n      if (!response.selection) throw new Error(\"Unexpected error.\")\n\n      return await this.onSelect(response.selection)\n    }\n  }\n}\n\nexport default Dialog\n","(function() {\n  var base64map\n      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n\n  crypt = {\n    // Bit-wise rotation left\n    rotl: function(n, b) {\n      return (n << b) | (n >>> (32 - b));\n    },\n\n    // Bit-wise rotation right\n    rotr: function(n, b) {\n      return (n << (32 - b)) | (n >>> b);\n    },\n\n    // Swap big-endian to little-endian and vice versa\n    endian: function(n) {\n      // If number given, swap endian\n      if (n.constructor == Number) {\n        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;\n      }\n\n      // Else, assume array and swap all items\n      for (var i = 0; i < n.length; i++)\n        n[i] = crypt.endian(n[i]);\n      return n;\n    },\n\n    // Generate an array of any length of random bytes\n    randomBytes: function(n) {\n      for (var bytes = []; n > 0; n--)\n        bytes.push(Math.floor(Math.random() * 256));\n      return bytes;\n    },\n\n    // Convert a byte array to big-endian 32-bit words\n    bytesToWords: function(bytes) {\n      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\n        words[b >>> 5] |= bytes[i] << (24 - b % 32);\n      return words;\n    },\n\n    // Convert big-endian 32-bit words to a byte array\n    wordsToBytes: function(words) {\n      for (var bytes = [], b = 0; b < words.length * 32; b += 8)\n        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a hex string\n    bytesToHex: function(bytes) {\n      for (var hex = [], i = 0; i < bytes.length; i++) {\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n      }\n      return hex.join('');\n    },\n\n    // Convert a hex string to a byte array\n    hexToBytes: function(hex) {\n      for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n      return bytes;\n    },\n\n    // Convert a byte array to a base-64 string\n    bytesToBase64: function(bytes) {\n      for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n        for (var j = 0; j < 4; j++)\n          if (i * 8 + j * 6 <= bytes.length * 8)\n            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\n          else\n            base64.push('=');\n      }\n      return base64.join('');\n    },\n\n    // Convert a base-64 string to a byte array\n    base64ToBytes: function(base64) {\n      // Remove non-base-64 characters\n      base64 = base64.replace(/[^A-Z0-9+\\/]/ig, '');\n\n      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;\n          imod4 = ++i % 4) {\n        if (imod4 == 0) continue;\n        bytes.push(((base64map.indexOf(base64.charAt(i - 1))\n            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))\n            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\n      }\n      return bytes;\n    }\n  };\n\n  module.exports = crypt;\n})();\n","var charenc = {\n  // UTF-8 encoding\n  utf8: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));\n    }\n  },\n\n  // Binary encoding\n  bin: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      for (var bytes = [], i = 0; i < str.length; i++)\n        bytes.push(str.charCodeAt(i) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      for (var str = [], i = 0; i < bytes.length; i++)\n        str.push(String.fromCharCode(bytes[i]));\n      return str.join('');\n    }\n  }\n};\n\nmodule.exports = charenc;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","(function(){\r\n  var crypt = require('crypt'),\r\n      utf8 = require('charenc').utf8,\r\n      isBuffer = require('is-buffer'),\r\n      bin = require('charenc').bin,\r\n\r\n  // The core\r\n  md5 = function (message, options) {\r\n    // Convert to byte array\r\n    if (message.constructor == String)\r\n      if (options && options.encoding === 'binary')\r\n        message = bin.stringToBytes(message);\r\n      else\r\n        message = utf8.stringToBytes(message);\r\n    else if (isBuffer(message))\r\n      message = Array.prototype.slice.call(message, 0);\r\n    else if (!Array.isArray(message) && message.constructor !== Uint8Array)\r\n      message = message.toString();\r\n    // else, assume byte array already\r\n\r\n    var m = crypt.bytesToWords(message),\r\n        l = message.length * 8,\r\n        a =  1732584193,\r\n        b = -271733879,\r\n        c = -1732584194,\r\n        d =  271733878;\r\n\r\n    // Swap endian\r\n    for (var i = 0; i < m.length; i++) {\r\n      m[i] = ((m[i] <<  8) | (m[i] >>> 24)) & 0x00FF00FF |\r\n             ((m[i] << 24) | (m[i] >>>  8)) & 0xFF00FF00;\r\n    }\r\n\r\n    // Padding\r\n    m[l >>> 5] |= 0x80 << (l % 32);\r\n    m[(((l + 64) >>> 9) << 4) + 14] = l;\r\n\r\n    // Method shortcuts\r\n    var FF = md5._ff,\r\n        GG = md5._gg,\r\n        HH = md5._hh,\r\n        II = md5._ii;\r\n\r\n    for (var i = 0; i < m.length; i += 16) {\r\n\r\n      var aa = a,\r\n          bb = b,\r\n          cc = c,\r\n          dd = d;\r\n\r\n      a = FF(a, b, c, d, m[i+ 0],  7, -680876936);\r\n      d = FF(d, a, b, c, m[i+ 1], 12, -389564586);\r\n      c = FF(c, d, a, b, m[i+ 2], 17,  606105819);\r\n      b = FF(b, c, d, a, m[i+ 3], 22, -1044525330);\r\n      a = FF(a, b, c, d, m[i+ 4],  7, -176418897);\r\n      d = FF(d, a, b, c, m[i+ 5], 12,  1200080426);\r\n      c = FF(c, d, a, b, m[i+ 6], 17, -1473231341);\r\n      b = FF(b, c, d, a, m[i+ 7], 22, -45705983);\r\n      a = FF(a, b, c, d, m[i+ 8],  7,  1770035416);\r\n      d = FF(d, a, b, c, m[i+ 9], 12, -1958414417);\r\n      c = FF(c, d, a, b, m[i+10], 17, -42063);\r\n      b = FF(b, c, d, a, m[i+11], 22, -1990404162);\r\n      a = FF(a, b, c, d, m[i+12],  7,  1804603682);\r\n      d = FF(d, a, b, c, m[i+13], 12, -40341101);\r\n      c = FF(c, d, a, b, m[i+14], 17, -1502002290);\r\n      b = FF(b, c, d, a, m[i+15], 22,  1236535329);\r\n\r\n      a = GG(a, b, c, d, m[i+ 1],  5, -165796510);\r\n      d = GG(d, a, b, c, m[i+ 6],  9, -1069501632);\r\n      c = GG(c, d, a, b, m[i+11], 14,  643717713);\r\n      b = GG(b, c, d, a, m[i+ 0], 20, -373897302);\r\n      a = GG(a, b, c, d, m[i+ 5],  5, -701558691);\r\n      d = GG(d, a, b, c, m[i+10],  9,  38016083);\r\n      c = GG(c, d, a, b, m[i+15], 14, -660478335);\r\n      b = GG(b, c, d, a, m[i+ 4], 20, -405537848);\r\n      a = GG(a, b, c, d, m[i+ 9],  5,  568446438);\r\n      d = GG(d, a, b, c, m[i+14],  9, -1019803690);\r\n      c = GG(c, d, a, b, m[i+ 3], 14, -187363961);\r\n      b = GG(b, c, d, a, m[i+ 8], 20,  1163531501);\r\n      a = GG(a, b, c, d, m[i+13],  5, -1444681467);\r\n      d = GG(d, a, b, c, m[i+ 2],  9, -51403784);\r\n      c = GG(c, d, a, b, m[i+ 7], 14,  1735328473);\r\n      b = GG(b, c, d, a, m[i+12], 20, -1926607734);\r\n\r\n      a = HH(a, b, c, d, m[i+ 5],  4, -378558);\r\n      d = HH(d, a, b, c, m[i+ 8], 11, -2022574463);\r\n      c = HH(c, d, a, b, m[i+11], 16,  1839030562);\r\n      b = HH(b, c, d, a, m[i+14], 23, -35309556);\r\n      a = HH(a, b, c, d, m[i+ 1],  4, -1530992060);\r\n      d = HH(d, a, b, c, m[i+ 4], 11,  1272893353);\r\n      c = HH(c, d, a, b, m[i+ 7], 16, -155497632);\r\n      b = HH(b, c, d, a, m[i+10], 23, -1094730640);\r\n      a = HH(a, b, c, d, m[i+13],  4,  681279174);\r\n      d = HH(d, a, b, c, m[i+ 0], 11, -358537222);\r\n      c = HH(c, d, a, b, m[i+ 3], 16, -722521979);\r\n      b = HH(b, c, d, a, m[i+ 6], 23,  76029189);\r\n      a = HH(a, b, c, d, m[i+ 9],  4, -640364487);\r\n      d = HH(d, a, b, c, m[i+12], 11, -421815835);\r\n      c = HH(c, d, a, b, m[i+15], 16,  530742520);\r\n      b = HH(b, c, d, a, m[i+ 2], 23, -995338651);\r\n\r\n      a = II(a, b, c, d, m[i+ 0],  6, -198630844);\r\n      d = II(d, a, b, c, m[i+ 7], 10,  1126891415);\r\n      c = II(c, d, a, b, m[i+14], 15, -1416354905);\r\n      b = II(b, c, d, a, m[i+ 5], 21, -57434055);\r\n      a = II(a, b, c, d, m[i+12],  6,  1700485571);\r\n      d = II(d, a, b, c, m[i+ 3], 10, -1894986606);\r\n      c = II(c, d, a, b, m[i+10], 15, -1051523);\r\n      b = II(b, c, d, a, m[i+ 1], 21, -2054922799);\r\n      a = II(a, b, c, d, m[i+ 8],  6,  1873313359);\r\n      d = II(d, a, b, c, m[i+15], 10, -30611744);\r\n      c = II(c, d, a, b, m[i+ 6], 15, -1560198380);\r\n      b = II(b, c, d, a, m[i+13], 21,  1309151649);\r\n      a = II(a, b, c, d, m[i+ 4],  6, -145523070);\r\n      d = II(d, a, b, c, m[i+11], 10, -1120210379);\r\n      c = II(c, d, a, b, m[i+ 2], 15,  718787259);\r\n      b = II(b, c, d, a, m[i+ 9], 21, -343485551);\r\n\r\n      a = (a + aa) >>> 0;\r\n      b = (b + bb) >>> 0;\r\n      c = (c + cc) >>> 0;\r\n      d = (d + dd) >>> 0;\r\n    }\r\n\r\n    return crypt.endian([a, b, c, d]);\r\n  };\r\n\r\n  // Auxiliary functions\r\n  md5._ff  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & c | ~b & d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._gg  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & d | c & ~d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._hh  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b ^ c ^ d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._ii  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n\r\n  // Package private blocksize\r\n  md5._blocksize = 16;\r\n  md5._digestsize = 16;\r\n\r\n  module.exports = function (message, options) {\r\n    if (message === undefined || message === null)\r\n      throw new Error('Illegal argument ' + message);\r\n\r\n    var digestbytes = crypt.wordsToBytes(md5(message, options));\r\n    return options && options.asBytes ? digestbytes :\r\n        options && options.asString ? bin.bytesToString(digestbytes) :\r\n        crypt.bytesToHex(digestbytes);\r\n  };\r\n\r\n})();\r\n","import type {\n  Player,\n  ScoreboardIdentity,\n  ScoreboardObjective,\n} from \"@minecraft/server\"\n\nimport md5 from \"md5\"\n\nimport { asyncRun, getOrAddObjective } from \"../util/game\"\nimport { type Serializable, deserialize, serialize } from \"../util/index\"\nimport type { WrappedPlayer } from \"../wrapper/entity\"\n\nexport const ALL_DATABASES = new Map<string, Database<any>>()\n\nexport class Database<V extends Serializable> {\n  id: string\n  objective: ScoreboardObjective\n\n  static open<T extends Serializable>(\n    player: Player | WrappedPlayer,\n    dbName: string\n  ) {\n    return new Database<T>(player, dbName)\n  }\n  constructor(player: Player | WrappedPlayer, dbName: string) {\n    const id = md5(`db:${dbName}_${player.id}`).slice(8, 24)\n    this.id = id\n    this.objective = getOrAddObjective(id, `db:${dbName}`)\n    // this.player = player\n\n    // if (!(player instanceof Player)) this.fakePlayer = true\n\n    this._syncDataFromScoreboard()\n\n    ALL_DATABASES.set(id, this)\n  }\n\n  store = new Map<string, { value: V; participant: ScoreboardIdentity }>()\n\n  _syncDataFromScoreboard() {\n    this.store.clear()\n    for (const participant of this.objective.getParticipants()) {\n      const data = deserialize(participant.displayName) as Record<string, V>\n      const key = Object.keys(data)[0]\n      const value = data[key]\n      this.store.set(key, { value, participant })\n    }\n  }\n  has(key: string) {\n    return this.store.has(key)\n  }\n  async delete(key: string) {\n    if (this.has(key)) {\n      const { participant } = this.store.get(key)!\n      await asyncRun(() => this.objective.removeParticipant(participant))\n      this.store.delete(key)\n      return true\n    }\n    return false\n  }\n  async clear() {\n    for (const [, { participant }] of this.store)\n      await asyncRun(() => this.objective.removeParticipant(participant))\n\n    this.store.clear()\n  }\n  get(key: string) {\n    return this.store.get(key)?.value\n  }\n  async set(key: string, value: V) {\n    await this.delete(key)\n    const data = serialize({ [key]: value }).replaceAll('\"', \"'\")\n    if (data.length > 32767)\n      throw new RangeError(\"Database: Value is too long.\")\n    await asyncRun(() => this.objective.setScore(data, 1))\n\n    this._syncDataFromScoreboard()\n  }\n  getAll() {\n    const output: Record<string, V> = {}\n    for (const [key, value] of this) output[key] = value\n    return output\n  }\n  *entries(): Generator<[string, V]> {\n    for (const [key, { value }] of this.store.entries()) yield [key, value]\n  }\n  *keys(): Generator<string> {\n    for (const key of this.store.keys()) yield key\n  }\n  *values(): Generator<V> {\n    for (const { value } of this.store.values()) yield value\n  }\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n}\n\nexport default Database\n","import { isAsyncFunc } from \"./util/index\"\n\nexport class EventEmitter {\n  _events: Record<string, Function[]> = {}\n\n  on(eventName: string, listener: Function) {\n    if (isAsyncFunc(listener)) {\n      const _eventName = `${eventName}.async`\n      if (this._events[_eventName]) this._events[_eventName].push(listener)\n      else this._events[_eventName] = [listener]\n    } else {\n      if (this._events[eventName]) this._events[eventName].push(listener)\n      else this._events[eventName] = [listener]\n    }\n    return this\n  }\n  once(eventName: string, listener: Function) {\n    if (isAsyncFunc(listener)) {\n      const _eventName = `${eventName}.async`\n      const _listener = async (...args: any[]) => {\n        await listener(...args)\n        this.removeListener(_eventName, _listener)\n      }\n      if (this._events[_eventName]) this._events[_eventName].push(_listener)\n      else this._events[_eventName] = [_listener]\n    } else {\n      const _listener = (...args: any[]) => {\n        listener(...args)\n        this.removeListener(eventName, _listener)\n      }\n      if (this._events[eventName]) this._events[eventName].push(_listener)\n      else this._events[eventName] = [_listener]\n    }\n    return this\n  }\n  removeListener(eventName: string, listener: Function) {\n    if (this._events[eventName]) {\n      const newListeners: Function[] = []\n      for (const _listener of this._events[eventName]) {\n        if (_listener !== listener) newListeners.push(_listener)\n      }\n      this._events[eventName] = newListeners\n    }\n    return this\n  }\n  async emit(eventName: string, ...args: any[]) {\n    if (this._events[eventName]) {\n      for (const listener of this._events[eventName]) listener(...args)\n    }\n    await this.asyncEmit(eventName, ...args)\n  }\n  async asyncEmit(eventName: string, ...args: any[]) {\n    const _eventName = `${eventName}.async`\n    if (this._events[_eventName]) {\n      for (const listener of this._events[_eventName]) await listener(...args)\n    }\n  }\n  addListener(eventName: string, listener: Function) {\n    return this.on(eventName, listener)\n  }\n  off(eventName: string, listener: Function) {\n    return this.removeListener(eventName, listener)\n  }\n}\n\nexport default EventEmitter\n","import type { Player } from \"@minecraft/server\"\n\nimport { EventEmitter } from \"../EventEmitter.class\"\nimport { NumberRange } from \"../NumberRange.class\"\n\nexport interface IOptionItemRange {\n  name: string\n  description: string\n  range?: [number, number, number?]\n  defaultValue?: number\n  reload?: boolean\n  events?: {\n    inited?: (selected: number, player: Player) => void\n    changed?: (selected: number, original: number, player: Player) => void\n    selected?: (selected: number, original: number, player: Player) => void\n  }\n}\n\nexport class OptionItemRange {\n  name: string\n  description: string\n  range: NumberRange\n  reload?: boolean\n  events: EventEmitter\n  _player: Player\n\n  original: number | undefined\n  selected: number | undefined\n\n  constructor({\n    name,\n    description,\n    range = [0, 1, 1],\n    defaultValue,\n    events,\n    reload,\n    _player,\n  }: {\n    _player: Player\n  } & IOptionItemRange) {\n    this.name = name\n    this.description = description\n    this.range = new NumberRange(...range)\n    this.events = new EventEmitter()\n    this.reload = reload\n    this._player = _player\n\n    if (events) {\n      for (const [eventName, listener] of Object.entries(events))\n        this.events.on(eventName, listener)\n    }\n\n    if (defaultValue !== undefined && this._includes(defaultValue))\n      this.selected = defaultValue\n    else this.selected = this.range.min\n\n    this.events.emit(\"inited\", this.selected, _player)\n    this.events.emit(\"changed\", this.selected, undefined, _player)\n  }\n  select(value: number) {\n    if (this.selected !== value && this._includes(value)) {\n      this.original = this.selected\n      this.selected = value\n      this.events.emit(\"selected\", this.selected, this.original, this._player)\n      this.events.emit(\"changed\", this.selected, this.original, this._player)\n      return true\n    }\n    return false\n  }\n  _includes(value: number) {\n    return this.range.includes(value)\n  }\n}\n","import type { Player } from \"@minecraft/server\"\n\nimport { EventEmitter } from \"../EventEmitter.class\"\n\nexport interface IOptionItemSelection<T extends string | number | boolean> {\n  name: string\n  description: string\n  values: Array<[T, string?]>\n  defaultValue?: T\n  reload?: boolean\n  events?: {\n    inited?: (selected: T, player: Player) => void\n    changed?: (selected: T, original: T, player: Player) => void\n    selected?: (selected: T, original: T, player: Player) => void\n  }\n}\n\nexport class OptionItemSelection<T extends string | number | boolean> {\n  name: string\n  description: string\n  values: Map<T, string>\n  reload?: boolean\n  events: EventEmitter\n  _player: Player\n\n  original: T | undefined\n  selected: T | undefined\n\n  constructor({\n    name,\n    description,\n    values = [],\n    defaultValue,\n    events,\n    reload,\n    _player,\n  }: { _player: Player } & IOptionItemSelection<T>) {\n    this.name = name\n    this.description = description\n    this.values = new Map(\n      //@ts-ignore\n      values.map((value) => {\n        if (value[0] === true && !value[1]) value[1] = \"开启\"\n        else if (value[0] === false && !value[1]) value[1] = \"关闭\"\n        return value\n      })\n    )\n    this.events = new EventEmitter()\n    this.reload = reload\n    this._player = _player\n\n    if (events) {\n      for (const [eventName, listener] of Object.entries(events))\n        this.events.on(eventName, listener)\n    }\n\n    if (defaultValue !== undefined && this.hasVal(defaultValue))\n      this.selected = defaultValue\n    else if (values[0]) this.selected = values[0][0]\n\n    this.events.emit(\"inited\", this.selected, _player)\n    this.events.emit(\"changed\", this.selected, undefined, _player)\n  }\n  select(value: T) {\n    if (this.selected !== value && this.hasVal(value)) {\n      this.original = this.selected\n      this.selected = value\n      this.events.emit(\"selected\", this.selected, this.original, this._player)\n      this.events.emit(\"changed\", this.selected, this.original, this._player)\n      return true\n    }\n    return false\n  }\n  hasVal(value: T) {\n    return this.values.has(value) || !this.values.size\n  }\n}\n","import type { Player } from \"@minecraft/server\"\nimport { ModalFormData } from \"@minecraft/server-ui\"\n\nimport { Database } from \"../database/index\"\nimport { Dialog } from \"../dialog/index\"\nimport { type IOptionItemRange, OptionItemRange } from \"./OptionItemRange.class\"\nimport {\n  type IOptionItemSelection,\n  OptionItemSelection,\n} from \"./OptionItemSelection.class\"\n\nexport class PlayerOption {\n  name: string\n  db: Database<string | number | boolean>\n  player: Player\n\n  constructor(player: Player, name: string) {\n    this.name = name\n    this.db = Database.open(player, `option-manager:${name}`)\n    this.player = player\n  }\n\n  items: Record<string, OptionItemSelection<any> | OptionItemRange> = {}\n  reload = false\n\n  addItem(\n    opts: { _player: Player } & (IOptionItemRange | IOptionItemSelection<any>)\n  ) {\n    //@ts-ignore\n    if (opts.range) this.items[opts.name] = new OptionItemRange(opts)\n    //@ts-ignore\n    else if (opts.values) this.items[opts.name] = new OptionItemSelection(opts)\n\n    return this\n  }\n  async _syncToDB() {\n    const data = this.getItemValMap()\n    for (const [name, value] of Object.entries(data))\n      await this.db.set(name, value)\n\n    for (const [name] of this.db) {\n      if (!this.hasItem(name)) await this.db.delete(name)\n    }\n  }\n  async _syncFromDB() {\n    for (const [name, value] of this.db)\n      this.setItemVal(name, value, undefined, { syncFromDB: true })\n    await this._syncToDB()\n  }\n  async init() {\n    this.addItem = () => {\n      throw new Error(\"Can't add item after initialization.\")\n    }\n\n    await this._syncFromDB()\n\n    return this.getItemValMap()\n  }\n\n  _getItem(name: string) {\n    return this.items[name]\n  }\n  hasItem(name: string) {\n    return !!this.items[name]\n  }\n  setItemVal<T>(\n    name: string,\n    value: T,\n    callback: (\n      selected: T,\n      original: T,\n      map: Record<string, any>\n    ) => void = () => {},\n    { syncFromDB = false } = {}\n  ) {\n    const item = this._getItem(name)\n    if (item) {\n      //@ts-ignore\n      const result = item.select(value)\n      if (result) {\n        if (!syncFromDB && item.reload) this.reload = true\n        callback(item.selected, item.original, this.getItemValMap())\n      }\n    }\n    return this\n  }\n  getItemVal(name: string) {\n    const item = this._getItem(name)\n    if (item) return item.selected\n  }\n  getItemValMap() {\n    // TODO: use map\n    const result: Record<string, any> = {}\n    for (const [name] of Object.entries(this.items))\n      result[name] = this.getItemVal(name)\n    return result\n  }\n  async done(parentDialog?: Dialog<any>) {\n    const handleDone = async ({ reply = true } = {}) => {\n      await this._syncToDB()\n      if (reply) this.player.sendMessage(\"设置选项修改成功\")\n    }\n    if (this.reload) {\n      this.reload = false\n      await Dialog.confirm({\n        body: '你选择的项目更改后需要刷新脚本，请手动运行 \"/reload\" 命令。\\n\\n您也可以取消您的更改',\n        target: this.player,\n        onConfirm: async () => {\n          await handleDone({ reply: false })\n          // await Commands.asyncRun(\"reload\")\n        },\n        onCancel: async () => {\n          await this._syncFromDB()\n          await this.showDialog(parentDialog)\n        },\n      })\n    } else await handleDone()\n  }\n  async showDialog(parentDialog?: Dialog<any>) {\n    const form = new ModalFormData().title(`${this.name} 选项`)\n    const nameMap: Array<{\n      name: string\n      valuesMap:\n        | Map<boolean, boolean>\n        | Map<number, string | number | boolean>\n        | Map<number, number>\n    }> = []\n\n    for (const [, item] of Object.entries(this.items)) {\n      if (item instanceof OptionItemSelection) {\n        const { name, description, values, selected } = item\n\n        if (values.size === 2 && values.get(true) && values.get(false)) {\n          const valuesMap = new Map()\n          for (const [e] of values) valuesMap.set(e, e)\n          nameMap.push({ name, valuesMap })\n\n          form.toggle(description, selected)\n        } else {\n          const valueArray = [...values]\n\n          const valuesMap = new Map()\n          for (let i = 0; i < valueArray.length; i++) {\n            const [e] = valueArray[i]\n            valuesMap.set(i, e)\n          }\n          nameMap.push({ name, valuesMap })\n\n          form.dropdown(\n            description,\n            valueArray.map((e) => e[1]),\n            valueArray.map((e) => e[0]).findIndex((e) => e === selected)\n          )\n        }\n      } else if (item instanceof OptionItemRange) {\n        const { name, description, range, selected } = item\n\n        const valuesMap = new Map()\n        for (const i of range) valuesMap.set(i, i)\n        nameMap.push({ name, valuesMap })\n\n        form.slider(description, range.min, range.max, range.step, selected)\n      }\n    }\n\n    const dialog = new Dialog<void>({\n      dialog: form,\n      onClose: async () => {\n        if (parentDialog) await parentDialog.show(this.player)\n      },\n      onSubmit: async (result) => {\n        for (let nameIndex = 0; nameIndex < result.length; nameIndex++) {\n          const valueIndex = result[nameIndex] as number\n\n          const { name, valuesMap } = nameMap[nameIndex]\n          // FIXME: as never?\n          const value = valuesMap.get(valueIndex as never)\n          this.setItemVal(name, value)\n        }\n        await this.done(parentDialog)\n      },\n    })\n    await dialog.show(this.player)\n  }\n}\n","import type { Player } from \"@minecraft/server\"\n\nimport { waitForFirstPlayerInitialSpawn } from \"../util/game\"\nimport type { IOptionItemRange } from \"./OptionItemRange.class\"\nimport type { IOptionItemSelection } from \"./OptionItemSelection.class\"\nimport { PlayerOption } from \"./PlayerOption.class\"\n\nexport class OptionNamespace {\n  name: string\n\n  constructor(name: string) {\n    this.name = name\n  }\n\n  players = new Map<Player, PlayerOption>()\n  _items = new Set<IOptionItemSelection<any> | IOptionItemRange>()\n\n  addItem(opts: IOptionItemSelection<any> | IOptionItemRange) {\n    this._items.add(opts)\n    return this\n  }\n  applyPlayer(player: Player) {\n    if (this.players.has(player)) return this.players.get(player)\n    const playerOpt = new PlayerOption(player, this.name)\n    for (const item of this._items) {\n      //@ts-ignore\n      item._player = player\n      //@ts-ignore\n      playerOpt.addItem(item)\n    }\n\n    this.players.set(player, playerOpt)\n    return playerOpt\n  }\n  async applyMainPlayer() {\n    const player = await waitForFirstPlayerInitialSpawn()\n    return this.applyPlayer(player)\n  }\n  async init() {\n    const valueMap = new Map<Player, any>()\n    for (const [player, playerOpt] of this.players) {\n      const result = await playerOpt.init()\n      valueMap.set(player, result)\n    }\n    this.applyPlayer = () => {\n      throw new Error(\"Can't apply player after initialization.\")\n    }\n    return valueMap\n  }\n  getPlayer(player: Player) {\n    const playerOption = this.players.get(player)\n\n    if (!playerOption) throw new Error(\"Can't get player  options.\")\n\n    return playerOption\n  }\n}\n","import type { Player } from \"@minecraft/server\"\nimport { ActionFormData } from \"@minecraft/server-ui\"\nimport { Dialog } from \"../dialog/index\"\nimport { OptionNamespace } from \"./OptionNamespace.class\"\n\nexport class OptionManager {\n  namespaces = new Map<string, OptionNamespace>()\n\n  registerNamesapace(name: string) {\n    const namespaces = new OptionNamespace(name)\n    this.namespaces.set(name, namespaces)\n    return namespaces\n  }\n  getNamesapace(name: string) {\n    const namespace = this.namespaces.get(name)\n\n    if (!namespace) throw new Error(\"Can't get namespace.\")\n\n    return namespace\n  }\n  async showDialog(player: Player) {\n    const form = new ActionFormData()\n      .title(\"设置选项\")\n      .body(\"选择要设置的模块：\")\n    const nameMap: string[] = []\n    for (const [name] of this.namespaces) {\n      nameMap.push(name)\n      form.button(name) // TODO: name -> desc\n    }\n\n    const dialog = new Dialog({\n      dialog: form,\n      onSelect: async (selection) => {\n        const name = nameMap[selection]\n        await this.getNamesapace(name).getPlayer(player).showDialog(dialog)\n      },\n    })\n    await dialog.show(player)\n  }\n}\n","import { OptionManager } from \"./OptionManager.class\"\n\nexport const optionManager = new OptionManager()\n","import { Commands } from \"../commands/index\"\nimport { asyncRun, errorHandler } from \"../util/game\"\nimport { optionManager } from \"./manager\"\n\nCommands.register(\"!\", \"option\", async (argv, sender) => {\n  switch (argv[1]) {\n    case \"dialog\":\n    case \"-d\":\n    case undefined: {\n      // TODO argv[2] -> namespace\n      await asyncRun(() => optionManager.showDialog(sender))\n      break\n    }\n    default: {\n      throw errorHandler(\"未知的子命令\", sender)\n    }\n  }\n})\n","import { optionManager } from \"@/lib/option-manager/index\"\n\nexport const option = optionManager\n  .registerNamesapace(\"better-door\")\n  .addItem({\n    name: \"door\",\n    description: \"允许双开门\",\n    values: [[true], [false]],\n    defaultValue: false,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\"better-door:door -> from\", original, \"to\", selected),\n    },\n  })\n  .addItem({\n    name: \"trapdoor\",\n    description: \"允许多开活板门\",\n    values: [[true], [false]],\n    defaultValue: false,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\"better-door:trapdoor -> from\", original, \"to\", selected),\n    },\n  })\n  .addItem({\n    name: \"max_trapdoor_length\",\n    description: \"允许多开活板门的最大距离\",\n    range: [1, 32],\n    defaultValue: 3,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\n          \"better-door:max_trapdoor_length -> from\",\n          original,\n          \"to\",\n          selected\n        ),\n    },\n  })\n  .addItem({\n    name: \"should_be_the_same_type\",\n    description: \"是否需要是同种门\",\n    values: [[true], [false]],\n    defaultValue: true,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\n          \"better-door:should_be_the_same_type -> from\",\n          original,\n          \"to\",\n          selected\n        ),\n    },\n  })\n","import { world } from \"@minecraft/server\"\n\nimport { BetterConsole } from \"@/lib/BetterConsole.class\"\nimport { DoorBlock, TrapdoorBlock } from \"@/lib/wrapper/block/index\"\nimport { asyncRun } from \"@/util/game\"\n\nimport { option } from \"./option\"\n\nexport const setupListener = () =>\n  world.beforeEvents.itemUseOn.subscribe((event) => {\n    const { block, source: player } = event\n    const playerOption = option.getPlayer(player)\n\n    const shouldBeTheSameType = playerOption.getItemVal(\n      \"should_be_the_same_type\"\n    )\n\n    if (DoorBlock.match(block) && playerOption.getItemVal(\"door\")) {\n      event.cancel = true\n      // @ts-ignore\n      const doors = new DoorBlock(block).getRelated({ shouldBeTheSameType })\n      asyncRun(() => {\n        if (doors[0].opened) {\n          for (const door of doors) door.close()\n        } else {\n          for (const door of doors) door.open()\n        }\n      }).catch(BetterConsole.error)\n    } else if (\n      TrapdoorBlock.match(block) &&\n      playerOption.getItemVal(\"trapdoor\")\n    ) {\n      event.cancel = true\n      const maxLength = playerOption.getItemVal(\"max_trapdoor_length\")\n      // @ts-ignore\n      const trapdoors = TrapdoorBlock.wrap(block).getRelated(player, {\n        maxLength,\n        shouldBeTheSameType,\n      })\n      asyncRun(() => {\n        if (trapdoors[0].opened) {\n          for (const trapdoor of trapdoors) trapdoor.close()\n        } else {\n          for (const trapdoor of trapdoors) trapdoor.open()\n        }\n      }).catch(BetterConsole.error)\n    }\n  })\n","import { world } from \"@minecraft/server\"\n\nimport { BetterConsole } from \"@/lib/BetterConsole.class\"\n\nimport { setupListener } from \"./event\"\nimport { option } from \"./option\"\n\noption\n  .applyMainPlayer()\n  .then(() => {\n    for (const player of world.getAllPlayers()) {\n      option.applyPlayer(player)\n    }\n  })\n  .then(() => option.init())\n  .then(() => setupListener())\n  .catch(BetterConsole.error)\n","import { EntityDamageCause } from \"@minecraft/server\"\nimport type { Criteria } from \"../../../types\"\n\nexport default (({ player, target, callback }) => ({\n  events: {\n    entityDie: {\n      options: {\n        entityTypes: [target],\n      },\n      listener(event) {\n        const cause = event.damageSource.cause\n        const source = event.damageSource.damagingEntity\n        if (\n          cause === EntityDamageCause.entityAttack &&\n          source?.id === player.id\n        )\n          callback({\n            type: \"increase\",\n            value: 1,\n          })\n      },\n    },\n  },\n})) as Criteria\n","import { type Entity, EntityDamageCause } from \"@minecraft/server\"\nimport type { Criteria } from \"../../../types\"\n\nexport default (({ player, target, callback }) => ({\n  events: {\n    entityDie: {\n      options: {\n        entities: [player as Entity],\n      },\n      listener(event) {\n        const cause = event.damageSource.cause\n        const source = event.damageSource.damagingEntity\n        if (\n          cause === EntityDamageCause.entityAttack &&\n          source?.typeId === target\n        )\n          callback({\n            type: \"increase\",\n            value: 1,\n          })\n      },\n    },\n  },\n})) as Criteria\n","import type { Entity } from \"@minecraft/server\"\nimport type { Criteria } from \"../../../types\"\n\nexport default (({ player, target, callback }) => ({\n  events: {\n    entityDie: {\n      options: {\n        entities: [player as Entity],\n      },\n      listener(event) {\n        const cause = `minecraft:${event.damageSource.cause}`\n        if (cause === target)\n          callback({\n            type: \"increase\",\n            value: 1,\n          })\n      },\n    },\n  },\n})) as Criteria\n","import type { Criteria } from \"../../../types\"\n\nexport default (({ player, target, callback }) => ({\n  events: {\n    playerBreakBlock: {\n      listener(event) {\n        const blockPermutation = event.brokenBlockPermutation\n        const source = event.player\n        if (source.id === player.id && blockPermutation.type.id === target)\n          callback({\n            type: \"increase\",\n            value: 1,\n          })\n      },\n    },\n    playerPlaceBlock: {\n      listener(event) {\n        const block = event.block\n        const source = event.player\n        if (source.id === player.id && block.typeId === target)\n          callback({\n            type: \"decrease\",\n            value: 1,\n          })\n      },\n    },\n  },\n})) as Criteria\n","import type { Criteria } from \"../../../types\"\n\nexport default (({ player, target, callback }) => ({\n  events: {\n    playerBreakBlock: {\n      listener(event) {\n        const blockPermutation = event.brokenBlockPermutation\n        const source = event.player\n        if (source.id === player.id && blockPermutation.type.id === target)\n          callback({\n            type: \"decrease\",\n            value: 1,\n          })\n      },\n    },\n    playerPlaceBlock: {\n      listener(event) {\n        const block = event.block\n        const source = event.player\n        if (source.id === player.id && block.typeId === target)\n          callback({\n            type: \"increase\",\n            value: 1,\n          })\n      },\n    },\n  },\n})) as Criteria\n","// import custom from \"./custom/index\"\n\nimport killed from \"./mob/killed\"\nimport killed_by from \"./mob/killed_by\"\nimport killed_for from \"./mob/killed_for\"\n\nimport mined from \"./block/mined\"\nimport placed from \"./block/placed\"\n\nexport const types = {\n  // custom\n  // TODO:\n  // \"minecraft:custom\": custom, custom,\n\n  // mob\n  \"minecraft:killed\": killed,\n  \"minecraft:killed_by\": killed_by,\n  \"minecraft:killed_for\": killed_for, // not in vanilla\n\n  // block\n  \"minecraft:mined\": mined,\n  \"minecraft:placed\": placed, // not in vanilla\n\n  // item\n  // TODO:\n}\n","import type { Entity } from \"@minecraft/server\"\nimport type { Criteria } from \"./types\"\n\nexport default (({ player, callback }) => ({\n  events: {\n    entityDie: {\n      options: {\n        entities: [player as Entity],\n      },\n      listener(_) {\n        callback({\n          type: \"increase\",\n          value: 1,\n        })\n      },\n    },\n  },\n})) as Criteria\n","import type { Entity } from \"@minecraft/server\"\nimport type { Criteria } from \"./types\"\n\nexport default (({ player, callback }) => ({\n  events: {\n    entityHealthChanged: {\n      options: {\n        entities: [player as Entity],\n      },\n      listener(event) {\n        callback({\n          type: \"reset\",\n          value: event.newValue,\n        })\n      },\n    },\n    playerSpawn: {\n      listener(_) {\n        callback({\n          type: \"reset\",\n          value: 20,\n        })\n      },\n    },\n  },\n})) as Criteria\n","import killed from \"./statistic/types/mob/killed\"\nimport type { Criteria } from \"./types\"\n\nexport default ({ player, callback }: Parameters<Criteria>[0]) =>\n  killed({\n    player,\n    target: \"minecraft:player\",\n    callback,\n  })\n","import { EntityDamageCause } from \"@minecraft/server\"\nimport type { Criteria } from \"./types\"\n\nexport default (({ player, callback }) => ({\n  events: {\n    entityDie: {\n      listener(event) {\n        const cause = event.damageSource.cause\n        const source = event.damageSource.damagingEntity\n        if (\n          cause === EntityDamageCause.entityAttack &&\n          source?.id === player.id\n        )\n          callback({\n            type: \"increase\",\n            value: 1,\n          })\n      },\n    },\n  },\n})) as Criteria\n","import { types } from \"./statistic/types/index\"\n\nimport deathCount from \"./deathCount\"\nimport health from \"./health\"\nimport playerKillCount from \"./playerKillCount\"\nimport totalKillCount from \"./totalKillCount\"\n\nexport default new Map([\n  ...Object.entries(types),\n\n  [\"deathCount\", deathCount],\n  [\"playerKillCount\", playerKillCount],\n  [\"totalKillCount\", totalKillCount],\n  [\"health\", health],\n])\n","import type { Player } from \"@minecraft/server\"\n\nimport { Database } from \"@/lib/database/index\"\n\nimport type { Criteria } from \"./criteria/types\"\n\nexport const globalDB = new Database<string>(\n  { id: \"global\" } as Player,\n  \"scoreboard-statistic-global\"\n)\n\nexport const ALL_PLAYER_DATABASES = new Map<Player, EventDB>()\n\nexport class EventDB {\n  player: Player\n  db: Database<Set<string>>\n\n  constructor(player: Player) {\n    this.player = player\n    this.db = Database.open(player, \"scoreboard-statistic-player\")\n  }\n\n  events = new Map<string, ReturnType<Criteria>[\"events\"]>()\n\n  // 此次因为有 events 这个运行时存储项，\n  // 而不能多次 construct，\n  // 故使用此方法将实例储存到 ALL_PLAYER_DATABASES 中\n  static init(player: Player) {\n    const db = new EventDB(player)\n    ALL_PLAYER_DATABASES.set(player, db)\n    return db\n  }\n\n  async addParticipated(objectiveId: string) {\n    const participated = this.getParticipated()\n    participated.add(objectiveId)\n    await this.db.set(\"__participated__\", participated)\n  }\n  getParticipated() {\n    return new Set(this.db.get(\"__participated__\") ?? [])\n  }\n\n  setEvents(objectiveId: string, events: ReturnType<Criteria>[\"events\"]) {\n    this.events.set(objectiveId, events)\n  }\n  getEvents(objectiveId: string) {\n    return this.events.get(objectiveId)\n  }\n\n  async add(objectiveId: string, events: ReturnType<Criteria>[\"events\"]) {\n    await this.addParticipated(objectiveId)\n    this.setEvents(objectiveId, events)\n  }\n  has(objectiveId: string) {\n    return (\n      this.events.has(objectiveId) && this.getParticipated().has(objectiveId)\n    )\n  }\n  async delete(objectiveId: string) {\n    const participated = this.getParticipated()\n    if (participated.has(objectiveId)) {\n      participated.delete(objectiveId)\n      await this.db.set(\"__participated__\", participated)\n      this.events.delete(objectiveId)\n      return true\n    }\n  }\n  async clear() {\n    await this.db.clear()\n    this.events.clear()\n  }\n}\n","import { optionManager } from \"@/lib/option-manager/index\"\n\nexport const option = optionManager\n  .registerNamesapace(\"scoreboard-statistic\")\n  .addItem({\n    name: \"enable_creative\",\n    description: \"允许统计创造模式下的行为\",\n    values: [[true], [false]],\n    defaultValue: true,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\n          \"scoreboard-statistic:enable_creative -> from\",\n          original,\n          \"to\",\n          selected\n        ),\n    },\n  })\n  .addItem({\n    name: \"enable_cancel_out\",\n    description: \"对部分统计项启用抵消\",\n    values: [[true], [false]],\n    defaultValue: false,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\n          \"scoreboard-statistic:enable_cancel_out -> from\",\n          original,\n          \"to\",\n          selected\n        ),\n    },\n  })\n  .addItem({\n    name: \"enable_confirm_dialog\",\n    description: \"启用删除记分板时的警告\",\n    values: [[true], [false]],\n    defaultValue: true,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\n          \"scoreboard-statistic:enable_confirm_dialog -> from\",\n          original,\n          \"to\",\n          selected\n        ),\n    },\n  })\n  .addItem({\n    name: \"auto_start\",\n    description: \"添加记分板后是否自动开始统计\",\n    values: [[true], [false]],\n    defaultValue: true,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\n          \"scoreboard-statistic:auto_start -> from\",\n          original,\n          \"to\",\n          selected\n        ),\n    },\n  })\n","import {\n  DisplaySlotId,\n  GameMode,\n  ObjectiveSortOrder,\n  type Player,\n  world,\n} from \"@minecraft/server\"\n\nimport type { PlayerOption } from \"@/lib/option-manager/PlayerOption.class\"\nimport { WrappedPlayer } from \"@/lib/wrapper/entity/index\"\nimport {\n  addMinecraftNamespaceIfNeed,\n  asyncRun,\n  getOrAddObjective,\n} from \"@/util/game\"\n\nimport CRITERIA from \"./criteria/index\"\nimport { ALL_PLAYER_DATABASES, type EventDB, globalDB } from \"./db\"\nimport { option } from \"./option\"\n\nexport class Handler {\n  player: Player\n  playerOption: PlayerOption\n  playerDB: EventDB\n\n  constructor(player: Player) {\n    this.player = player\n    this.playerOption = option.getPlayer(player)\n\n    const playerDB = ALL_PLAYER_DATABASES.get(player)\n\n    if (!playerDB) throw new Error(\"Can't get player database.\")\n\n    this.playerDB = playerDB\n  }\n\n  async add({\n    objectiveId,\n    criteria,\n    displayName = objectiveId,\n  }: {\n    objectiveId: string\n    criteria: string\n    displayName?: string\n  }) {\n    if (world.scoreboard.getObjective(objectiveId))\n      return { code: 0, message: \"DUPLICATE_OBJECTIVE\" }\n\n    const [criteriaType] = parseCriteria(criteria)\n    if (!CRITERIA.get(criteriaType))\n      return { code: 0, message: \"UNKNOWN_CRITERIA\" }\n\n    await asyncRun(() => {\n      const objective = world.scoreboard.addObjective(objectiveId, displayName)\n      world.scoreboard.setObjectiveAtDisplaySlot(DisplaySlotId.Sidebar, {\n        objective,\n        sortOrder: ObjectiveSortOrder.Ascending,\n      })\n\n      if (!objective.hasParticipant(this.player)) {\n        // TODO: 或许放到 start 里更合理\n        // 如果该玩家不存在任何一个记分板中，直接 setScore(this.player) 会报错\n        // 所以这里用命令设置一下初始分数\n        // objective.setScore(this.player, 0)\n        this.player.runCommand(`scoreboard players set @s ${objectiveId} 0`)\n      }\n    })\n\n    await globalDB.set(objectiveId, criteria)\n\n    return { code: 1 }\n  }\n\n  async remove({ objectiveId }: { objectiveId: string }) {\n    if (!globalDB.get(objectiveId)) return false\n\n    await asyncRun(() => world.scoreboard.removeObjective(objectiveId))\n    await globalDB.delete(objectiveId)\n\n    return true\n  }\n\n  async start({\n    objectiveId,\n    criteria = globalDB.get(objectiveId) as string,\n  }: {\n    objectiveId: string\n    criteria?: string\n  }) {\n    if (this.playerDB.has(objectiveId)) return false\n\n    const objective = getOrAddObjective(objectiveId)\n    const [criteriaType, criteriaName] = parseCriteria(criteria)\n\n    const setupTigger = CRITERIA.get(criteriaType)\n\n    if (!setupTigger) throw new Error(\"Unknown criteria.\")\n\n    const tigger = setupTigger({\n      player: this.player,\n      target: criteriaName,\n      callback: (result) => {\n        if (\n          !new WrappedPlayer(this.player).testGameMode(GameMode.creative) ||\n          this.playerOption.getItemVal(\"enable_creative\")\n        ) {\n          switch (result.type) {\n            case \"decrease\": {\n              if (this.playerOption.getItemVal(\"enable_cancel_out\"))\n                objective.setScore(\n                  this.player,\n                  (objective.getScore(this.player) ?? 0) - result.value\n                )\n              break\n            }\n            case \"reset\": {\n              objective.setScore(this.player, result.value)\n              break\n            }\n            default: {\n              objective.addScore(this.player, result.value)\n            }\n          }\n        }\n      },\n    })\n\n    for (const [eventName, { options, listener }] of Object.entries(\n      tigger.events\n    )) {\n      await asyncRun(() =>\n        //@ts-ignore\n        world.afterEvents[eventName].subscribe(listener, options)\n      )\n    }\n\n    await this.playerDB.add(objectiveId, tigger.events)\n\n    return true\n  }\n\n  async stop({ objectiveId }: { objectiveId: string }) {\n    if (!this.playerDB.has(objectiveId)) return false\n\n    const events = this.playerDB.getEvents(objectiveId)\n\n    if (!events) throw new Error(\"Unexpected error.\")\n\n    for (const [eventName, { listener }] of Object.entries(events)) {\n      await asyncRun(() =>\n        //@ts-ignore\n        world.afterEvents[eventName].unsubscribe(listener)\n      )\n    }\n    await this.playerDB.delete(objectiveId)\n\n    return true\n  }\n}\n\nfunction parseCriteria(criteria: string) {\n  return criteria\n    .split(\":\")\n    .map((e) => addMinecraftNamespaceIfNeed(e.replace(\".\", \":\")))\n}\n","import type { Player } from \"@minecraft/server\"\n\nimport { Dialog } from \"@/lib/dialog/index\"\nimport { asyncRun, errorHandler } from \"@/util/game\"\n\nimport { Handler } from \"./Handler.class\"\nimport { option } from \"./option\"\n\nexport async function command(argv: string[], sender: Player) {\n  const playerOption = option.getPlayer(sender)\n  const handler = new Handler(sender)\n\n  const objectiveId = argv[2]\n  switch (argv[1]) {\n    case \"add\": {\n      const [, , , criteria, displayName] = argv\n      if (!objectiveId) throw errorHandler(\"objectiveId 是必须的\", sender)\n      if (!criteria) throw errorHandler(\"criteria 是必须的\", sender)\n\n      if (!playerOption.getItemVal(\"enable_creative\"))\n        sender.sendMessage(\"注意：当前设置不会统计创造模式下的行为\")\n\n      const result = await handler.add({ objectiveId, criteria, displayName })\n      if (result.code)\n        sender.sendMessage(\n          `成功添加记分板 \"${displayName}\" (${objectiveId}) 使用 \"${criteria}\"`\n        )\n      else {\n        switch (result.message) {\n          case \"DUPLICATE_OBJECTIVE\": {\n            throw errorHandler(`添加失败：记分板 ${objectiveId} 已存在`, sender)\n          }\n          case \"UNKNOWN_CRITERIA\": {\n            throw errorHandler(`添加失败：未知的准则 ${criteria}`, sender)\n          }\n        }\n      }\n\n      if (playerOption.getItemVal(\"auto_start\")) {\n        const startResult = await handler.start({ objectiveId, criteria })\n        if (startResult)\n          sender.sendMessage(`已自动开启您在 ${displayName} 上的统计`)\n      }\n\n      break\n    }\n    case \"remove\":\n    case \"rm\":\n    case \"-r\": {\n      async function _remove() {\n        const result = await handler.remove({ objectiveId })\n        if (result) sender.sendMessage(`删除成功 ${objectiveId}`)\n        else\n          throw errorHandler(\n            `移除失败：记分板 ${objectiveId} 不存在或不是统计用记分板`,\n            sender\n          )\n      }\n\n      if (playerOption.getItemVal(\"enable_confirm_dialog\"))\n        await Dialog.confirm({\n          body: `是否清除记分板 ${objectiveId} 上的统计数据，你将永远失去它们`,\n          target: sender,\n          onConfirm: _remove,\n        })\n      else await _remove()\n\n      break\n    }\n    case \"stop\": {\n      const result = await handler.stop({ objectiveId })\n\n      if (result) sender.sendMessage(`已暂停您在 ${objectiveId} 上的统计`)\n      else\n        throw errorHandler(\n          `暂停失败：您可能没有开启您在记分板 ${objectiveId} 上的统计，或该记分板不存在`,\n          sender\n        )\n\n      break\n    }\n    case \"start\": {\n      const result = await handler.start({ objectiveId })\n\n      if (result) sender.sendMessage(`已开启您在 ${objectiveId} 上的统计`)\n      else\n        throw errorHandler(\n          `开启失败：您可能已经开启您在记分板 ${objectiveId} 上的统计，或该记分板不存在`,\n          sender\n        )\n\n      break\n    }\n    case \"option\":\n    case \"opt\":\n    case \"-o\": {\n      await asyncRun(() => playerOption.showDialog())\n      break\n    }\n    default: {\n      throw errorHandler(`未知的子命令 ${argv[1]}`, sender)\n    }\n  }\n}\n","import { world } from \"@minecraft/server\"\n\nimport { BetterConsole } from \"@/lib/BetterConsole.class\"\nimport { Commands } from \"@/lib/commands/index\"\n\nimport { Handler } from \"./Handler.class\"\nimport { command } from \"./command\"\nimport { EventDB } from \"./db\"\nimport { option } from \"./option\"\n\noption\n  .applyMainPlayer()\n  .then(() => {\n    for (const player of world.getAllPlayers()) {\n      option.applyPlayer(player)\n    }\n  })\n  .then(() => option.init())\n  .then(async () => {\n    for (const [player] of option.players) {\n      // 将所有玩家的数据库实例化并储存在 ALL_PLAYER_DATABASES 中\n      const db = EventDB.init(player)\n\n      const handler = new Handler(player)\n      const participated = db.getParticipated()\n\n      // reload 后运行时存储 events 为空，\n      // 并且 listener 也都失效，\n      // 故重新订阅事件\n      await db.clear()\n      for (const objectiveId of participated) {\n        const result = await handler.start({ objectiveId })\n        if (result)\n          player.sendMessage(`已重启您在记分板 ${objectiveId} 上的统计`)\n      }\n    }\n\n    Commands.register(\"!\", \"statistic\", command)\n  })\n  .catch(BetterConsole.error)\n","import type { Player } from \"@minecraft/server\"\n\nimport { Database } from \"@/lib/database/index\"\nimport { Dialog } from \"@/lib/dialog/index\"\nimport { LocationInfo } from \"@/lib/location/index\"\n\nexport const ALL_PLAYER_DATABASES = new Map<Player, TpxDB>()\n\nexport class TpxDB {\n  player: Player\n  db: Database<{\n    info: ReturnType<LocationInfo[\"textify\"]>\n    disposable: boolean\n  }>\n\n  constructor(player: Player) {\n    this.player = player\n    this.db = Database.open(player, \"tpx\")\n  }\n\n  static init(player: Player) {\n    const db = new TpxDB(player)\n    ALL_PLAYER_DATABASES.set(player, db)\n    return db\n  }\n\n  async set({\n    name,\n    disposable = false,\n    force = false,\n  }: {\n    name: string\n    disposable?: boolean\n    force?: boolean\n  }) {\n    const info = new LocationInfo(this.player)\n    const handleSet = async () => {\n      await this.db.set(name, {\n        info: info.textify(),\n        disposable,\n      })\n      return info\n    }\n    if (!force && this.db.has(name)) {\n      return await Dialog.confirm({\n        body: `名称 ${name} 已被占用，是否覆盖？`,\n        target: this.player,\n        onConfirm: async () => await handleSet(),\n      })\n    }\n    return await handleSet()\n  }\n  async get(name: string) {\n    if (!this.db.has(name)) return\n    const data = this.db.get(name)\n\n    if (!data) return\n\n    if (data.disposable) await this.db.delete(name)\n    if (data.info) return new LocationInfo(data.info)\n  }\n  async remove(name: string) {\n    if (!this.db.has(name)) return false\n\n    return await Dialog.confirm({\n      body: `是否删除 ${name} `,\n      target: this.player,\n      onConfirm: async () => await this.db.delete(name),\n    })\n  }\n  getAll() {\n    const output: Array<{\n      name: string\n      info: LocationInfo\n      disposable: boolean\n      text: string\n    }> = []\n\n    for (const [name, { info: data, disposable }] of this.db) {\n      const info = new LocationInfo(data)\n      output.push({\n        name,\n        info,\n        disposable,\n        text: `${name} (${info})${disposable ? \" [一次性]\" : \"\"}`,\n      })\n    }\n\n    return output\n  }\n}\n","import { type EntityDieAfterEvent, type Player, world } from \"@minecraft/server\"\n\nimport { optionManager } from \"@/lib/option-manager/index\"\n\nimport { Handler } from \"./Handler.class\"\n\nasync function afterEntityDieCallback(event: EntityDieAfterEvent) {\n  const player = event.deadEntity as Player\n  const handler = new Handler(player)\n\n  await handler.set({\n    name: \"__death__\",\n    option: {\n      disposable: true,\n      force: true,\n    },\n  })\n}\n\nexport const option = optionManager\n  .registerNamesapace(\"tpx\")\n  .addItem({\n    name: \"auto_back_point\",\n    description: \"允许使用 tpx 传送时自动添加返回点\",\n    values: [[true], [false]],\n    defaultValue: true,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\"tpx:auto_back_point -> from\", original, \"to\", selected),\n    },\n  })\n  .addItem({\n    name: \"back_after_death\",\n    description: \"允许死亡时自动添加死亡点\",\n    values: [[true], [false]],\n    defaultValue: true,\n    events: {\n      changed: (selected, original) => {\n        console.warn(\"tpx:back_after_death -> from\", original, \"to\", selected)\n\n        if (selected)\n          world.afterEvents.entityDie.subscribe(afterEntityDieCallback, {\n            entityTypes: [\"minecraft:player\"],\n          })\n        else world.afterEvents.entityDie.unsubscribe(afterEntityDieCallback)\n      },\n    },\n  })\n  .addItem({\n    name: \"back_cmd\",\n    description: \"允许使用独立的 back 命令\",\n    values: [[true], [false]],\n    defaultValue: false,\n    reload: true,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\"tpx:back_cmd -> from\", original, \"to\", selected),\n    },\n  })\n  .addItem({\n    name: \"home_cmd\",\n    description: \"允许使用独立的 home 命令\",\n    values: [[true], [false]],\n    defaultValue: false,\n    reload: true,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\"tpx:home_cmd -> from\", original, \"to\", selected),\n    },\n  })\n","import type { Player } from \"@minecraft/server\"\n\nimport type { PlayerOption } from \"@/lib/option-manager/PlayerOption.class\"\nimport { asyncRun } from \"@/util/game\"\n\nimport { ALL_PLAYER_DATABASES, type TpxDB } from \"./db\"\nimport { option } from \"./option\"\n\nexport class Handler {\n  player: Player\n  playerOption: PlayerOption\n  playerDB: TpxDB\n\n  constructor(player: Player) {\n    this.player = player\n    this.playerOption = option.getPlayer(player)\n\n    const playerDB = ALL_PLAYER_DATABASES.get(player)\n\n    if (!playerDB) throw new Error(\"Can't get player database.\")\n\n    this.playerDB = playerDB\n  }\n\n  async set({\n    name = \"default\",\n    option = {},\n  }: {\n    name?: string\n    option?: {\n      disposable?: boolean\n      force?: boolean\n    }\n  }) {\n    const info = await this.playerDB.set(Object.assign({ name }, option))\n    if (name !== \"__back__\" && name !== \"__death__\") return { info }\n  }\n  async remove({ name = \"default\" }) {\n    return await this.playerDB.remove(name)\n  }\n  async teleport({ name = \"default\" }) {\n    const info = await this.playerDB.get(name)\n    if (info) {\n      if (\n        this.playerOption.getItemVal(\"auto_back_point\") &&\n        name !== \"__death__\"\n      ) {\n        await this.set({\n          name: \"__back__\",\n          option: {\n            disposable: true,\n            force: true,\n          },\n        })\n      }\n      await asyncRun(() =>\n        this.player.teleport(info.location, {\n          dimension: info.dimension,\n          checkForBlocks: false,\n          keepVelocity: false,\n        })\n      )\n      return { info }\n    }\n  }\n  async tryTeleport({\n    names = [],\n  }: {\n    names: string[]\n  }) {\n    for (const name of names) {\n      const result = await this.teleport({ name })\n      if (result) return result\n    }\n  }\n  list() {\n    const datas = this.playerDB.getAll().map(({ text }) => text)\n    if (datas.length) return { msg: datas }\n  }\n}\n","import type { Player } from \"@minecraft/server\"\n\nimport { Commands } from \"@/lib/commands/index\"\nimport { asyncRun, errorHandler } from \"@/util/game\"\n\nimport { Handler } from \"./Handler.class\"\nimport { option } from \"./option\"\n\nconst SUB_COMMANDS = [\n  \"set\",\n  \"-s\",\n  \"remove\",\n  \"rm\",\n  \"-r\",\n  \"back\",\n  \"bk\",\n  \"-b\",\n  \"list\",\n  \"ls\",\n  \"-l\",\n  \"help\",\n  \"-h\",\n  \"option\",\n  \"opt\",\n  \"-o\",\n]\n\nexport async function tpxCommand(argv: string[], sender: Player) {\n  const name = argv[2] ?? \"default\"\n  const handler = new Handler(sender)\n\n  switch (argv[1]) {\n    case \"set\":\n    case \"-s\": {\n      if (SUB_COMMANDS.includes(name) || name === \"__back__\")\n        throw errorHandler(`添加失败：不能使用 ${name} 作为名称`, sender)\n\n      const result = await handler.set({\n        name,\n        option: {\n          disposable:\n            argv[3] === \"true\" ? true : argv[3] === \"false\" ? false : undefined,\n        },\n      })\n\n      if (result) sender.sendMessage(`成功设置 ${name} 在 ${result.info}`)\n\n      break\n    }\n    case \"remove\":\n    case \"rm\":\n    case \"-r\": {\n      const result = await handler.remove({ name })\n\n      if (result === true) sender.sendMessage(`成功删除 ${name}`)\n      else if (result === false)\n        throw errorHandler(`删除失败：未找到 ${name}`, sender)\n\n      break\n    }\n    case \"back\":\n    case \"bk\":\n    case \"-b\": {\n      const result = await handler.tryTeleport({\n        names: [\"__death__\", \"__back__\"],\n      })\n\n      if (result) sender.sendMessage(`已返回到 ${result.info}`)\n      else throw errorHandler(\"传送失败：未找到返回点\", sender)\n\n      break\n    }\n    case \"list\":\n    case \"ls\":\n    case \"-l\": {\n      const result = handler.list()\n\n      if (result) {\n        result.msg.unshift(\"您的传送点有：\")\n        sender.sendMessage(result.msg.join(\"\\n- \"))\n      } else sender.sendMessage(\"您目前没有传送点\")\n\n      break\n    }\n    case \"help\":\n    case \"-h\": {\n      // TODO command-parser\n      sender.sendMessage(\"制作中...\")\n      break\n    }\n    case \"option\":\n    case \"opt\":\n    case \"-o\": {\n      await asyncRun(() => option.getPlayer(sender).showDialog())\n      break\n    }\n    default: {\n      const result = await handler.teleport({ name: argv[1] })\n\n      if (result) sender.sendMessage(`已传送到 ${result.info}`)\n      else throw errorHandler(`传送失败：未找到传送点 ${argv[1]}`, sender)\n    }\n  }\n}\n\nexport async function backCommand(_: string[], sender: Player) {\n  if (option.getPlayer(sender).getItemVal(\"back_cmd\"))\n    await Commands.asyncRun(\"!tpx back\", sender)\n  else sender.sendMessage(\"您未启用该命令\")\n}\n\nexport async function homeCommand(argv: string[], sender: Player) {\n  if (option.getPlayer(sender).getItemVal(\"home_cmd\")) {\n    switch (argv[1]) {\n      case \"set\": {\n        await Commands.asyncRun(\"!tpx set __home__\", sender)\n        break\n      }\n      default: {\n        await Commands.asyncRun(\"!tpx __home__\", sender)\n      }\n    }\n  } else sender.sendMessage(\"您未启用该命令\")\n}\n","import { world } from \"@minecraft/server\"\n\nimport { BetterConsole } from \"@/lib/BetterConsole.class\"\nimport { Commands } from \"@/lib/commands/index\"\n\nimport { backCommand, homeCommand, tpxCommand } from \"./command\"\nimport { TpxDB } from \"./db\"\nimport { option } from \"./option\"\n\noption\n  .applyMainPlayer()\n  .then(() => {\n    for (const player of world.getAllPlayers()) {\n      option.applyPlayer(player)\n    }\n  })\n  .then(() => option.init())\n  .then((optMap) => {\n    // 将所有玩家的数据库实例化并储存在 ALL_PLAYER_DATABASES 中\n    // 同时避免在 beforeEvent 中构建导致的 read-only mode 问题\n    for (const player of optMap.keys()) TpxDB.init(player)\n\n    Commands.register(\"!\", \"tpx\", tpxCommand)\n\n    const values = [...optMap.values()]\n    if (values.some(({ back_cmd }) => back_cmd))\n      Commands.register(\"!\", \"back\", backCommand)\n    if (values.some(({ home_cmd }) => home_cmd))\n      Commands.register(\"!\", \"home\", homeCommand)\n  })\n  .catch(BetterConsole.error)\n","import { TypeGroup } from \"@/lib/wrapper/TypeGroup.class\"\nimport { BlockTypeGroups } from \"@/lib/wrapper/block/index\"\n\nexport const ENABLE_BLOCKS = new TypeGroup([\n  ...BlockTypeGroups.LOGS,\n  ...BlockTypeGroups.STEMS,\n  ...BlockTypeGroups.ORES,\n  \"minecraft:obsidian\",\n  \"minecraft:ancient_debris\",\n  \"minecraft:amethyst_block\",\n])\n","import { optionManager } from \"@/lib/option-manager/index\"\n\nexport const option = optionManager\n  .registerNamesapace(\"vein-mining\")\n  .addItem({\n    name: \"condition\",\n    description: \"触发条件\",\n    values: [\n      [\"off\", \"关闭\"],\n      [\"always\", \"总是\"],\n      [\"sneaking\", \"仅潜行时\"],\n    ],\n    defaultValue: \"sneaking\",\n    events: {\n      changed: (selected, original) =>\n        console.warn(\"vein-mining:tigger -> from\", original, \"to\", selected),\n    },\n  })\n  .addItem({\n    name: \"max_amount\",\n    description: \"最多检测的方块数量（并非最终挖掘的方块数）\",\n    range: [8, 128],\n    defaultValue: 64,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\n          \"vein-mining:enable_edge -> from\",\n          original,\n          \"to\",\n          selected\n        ),\n    },\n  })\n  .addItem({\n    name: \"enable_stone\",\n    description: \"允许连锁挖掘岩石类方块（石头、深板岩）\",\n    values: [[true], [false]],\n    defaultValue: false,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\n          \"vein-mining:enable_stone -> from\",\n          original,\n          \"to\",\n          selected\n        ),\n    },\n  })\n  .addItem({\n    name: \"auto_collection\",\n    description: \"自动收集掉落物及经验（绕过经验修补）\",\n    values: [[true], [false]],\n    defaultValue: false,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\n          \"vein-mining:auto_collect_drops -> from\",\n          original,\n          \"to\",\n          selected\n        ),\n    },\n  })\n  .addItem({\n    name: \"prevent_tool_destruction\",\n    description: \"防止工具耐久耗尽\",\n    values: [[true], [false]],\n    defaultValue: false,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\n          \"vein-mining:prevent_tool_destruction -> from\",\n          original,\n          \"to\",\n          selected\n        ),\n    },\n  })\n  .addItem({\n    name: \"enable_edge\",\n    description: \"是否检测仅棱相连的方块\",\n    values: [[true], [false]],\n    defaultValue: false,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\n          \"vein-mining:enable_edge -> from\",\n          original,\n          \"to\",\n          selected\n        ),\n    },\n  })\n  .addItem({\n    name: \"enable_diagonal\",\n    description: \"是否检测仅角相连的方块\",\n    values: [[true], [false]],\n    defaultValue: false,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\n          \"vein-mining:enable_diagonal -> from\",\n          original,\n          \"to\",\n          selected\n        ),\n    },\n  })\n","import { ItemStack, world } from \"@minecraft/server\"\nimport type {\n  MinecraftBlockTypes,\n  MinecraftItemTypes,\n} from \"@minecraft/vanilla-data\"\n\nimport { BetterConsole } from \"@/lib/BetterConsole.class\"\nimport { BlockLocation } from \"@/lib/location/index\"\nimport type { PlayerOption } from \"@/lib/option-manager/PlayerOption.class\"\nimport type { BlockDrops } from \"@/lib/wrapper/block/BlockDrops.class\"\nimport {\n  BlockList,\n  BlockTypeGroups,\n  WrappedBlock,\n} from \"@/lib/wrapper/block/index\"\nimport { WrappedPlayer } from \"@/lib/wrapper/entity/index\"\nimport {\n  ItemStackWithDurability,\n  WrappedItemStack,\n} from \"@/lib/wrapper/item/index\"\nimport { asyncRun } from \"@/util/game\"\n\nimport { ENABLE_BLOCKS } from \"./config\"\nimport { option } from \"./option\"\n\nexport const setupListener = () =>\n  world.afterEvents.playerBreakBlock.subscribe((event) => {\n    const basicBlock = new WrappedBlock(event.block)\n    const blockTypeId = event.brokenBlockPermutation.type\n      .id as MinecraftBlockTypes\n    const player = new WrappedPlayer(event.player)\n    const playerOption = option.getPlayer(event.player)\n\n    let enableBlocks = ENABLE_BLOCKS\n    if (playerOption.getItemVal(\"enable_stone\"))\n      enableBlocks = ENABLE_BLOCKS.clone().add(...BlockTypeGroups.STONES)\n\n    player\n      .useMainHandItem(async (mainHandItem) => {\n        if (\n          !mainHandItem ||\n          !enableBlocks.has(blockTypeId) ||\n          !WrappedBlock.prototype.canBeDugBy.call(\n            { typeId: blockTypeId },\n            mainHandItem.typeId as MinecraftItemTypes\n          ) ||\n          playerOption.getItemVal(\"condition\") === \"off\" ||\n          (playerOption.getItemVal(\"condition\") === \"sneaking\" &&\n            !player.isSneaking)\n        )\n          return mainHandItem\n\n        const blockList = getRelatedBlocks(\n          playerOption,\n          basicBlock,\n          blockTypeId\n        )\n\n        const wrappedItem =\n          ItemStackWithDurability.tryWrap(mainHandItem) ??\n          new WrappedItemStack(mainHandItem)\n\n        let totalDamage = 0\n\n        const totalItems: ReturnType<BlockDrops[\"getDrops\"]> = []\n        let totalXp = 0\n\n        while (\n          blockList.size > 0 &&\n          (!playerOption.getItemVal(\"prevent_tool_destruction\") ||\n            (playerOption.getItemVal(\"prevent_tool_destruction\") &&\n              totalDamage <\n                // @ts-ignore\n                (wrappedItem.durability ?? Number.POSITIVE_INFINITY)))\n        ) {\n          const block = blockList.shift()\n\n          if (!block) throw new Error(\"Unexpected error.\")\n\n          const result = await asyncRun(() => block.breakBy(mainHandItem))\n\n          totalDamage += result.getTotalDamage()\n\n          if (playerOption.getItemVal(\"auto_collection\")) {\n            for (const drop of result.drops) {\n              if (drop.xp) totalXp += drop.xp\n\n              totalItems.push(drop)\n            }\n          } else {\n            result.spawnDrops()\n          }\n        }\n\n        if (playerOption.getItemVal(\"auto_collection\")) {\n          for (const { itemId, amount } of totalItems) {\n            player.inventory.addItem(new ItemStack(itemId, amount))\n          }\n          player.addExperience(totalXp)\n        }\n\n        if (wrappedItem instanceof ItemStackWithDurability)\n          wrappedItem.applyDamage(totalDamage)\n\n        return wrappedItem._item\n      })\n      .catch(BetterConsole.error)\n  })\n\nfunction getNeighbourBlocks(\n  playerOption: PlayerOption,\n  basicBlock: WrappedBlock,\n  blockTypeId: MinecraftBlockTypes\n) {\n  const offsets = [\n    new BlockLocation(1, 0, 0),\n    new BlockLocation(-1, 0, 0),\n    new BlockLocation(0, 0, 1),\n    new BlockLocation(0, 0, -1),\n    new BlockLocation(0, 1, 0),\n    new BlockLocation(0, -1, 0),\n  ]\n\n  if (playerOption.getItemVal(\"enable_edge\")) {\n    offsets.push(\n      new BlockLocation(1, 1, 0),\n      new BlockLocation(1, -1, 0),\n      new BlockLocation(-1, 1, 0),\n      new BlockLocation(-1, -1, 0),\n      new BlockLocation(0, 1, 1),\n      new BlockLocation(0, -1, 1),\n      new BlockLocation(0, 1, -1),\n      new BlockLocation(0, -1, -1),\n      new BlockLocation(1, 0, 1),\n      new BlockLocation(1, 0, -1),\n      new BlockLocation(-1, 0, 1),\n      new BlockLocation(-1, 0, -1)\n    )\n  }\n\n  if (playerOption.getItemVal(\"enable_diagonal\")) {\n    offsets.push(\n      new BlockLocation(-1, -1, -1),\n      new BlockLocation(-1, 1, -1),\n      new BlockLocation(-1, -1, 1),\n      new BlockLocation(-1, 1, 1),\n      new BlockLocation(1, -1, -1),\n      new BlockLocation(1, 1, -1),\n      new BlockLocation(1, -1, 1),\n      new BlockLocation(1, 1, 1)\n    )\n  }\n\n  const list = new BlockList<WrappedBlock>()\n\n  for (const offset of offsets) {\n    const block = basicBlock.getOffsetBlock(offset)\n    if (block.typeId === blockTypeId) list.add(block)\n  }\n\n  return list\n}\n\nfunction getRelatedBlocks(\n  playerOption: PlayerOption,\n  basicBlock: WrappedBlock,\n  blockTypeId: MinecraftBlockTypes\n) {\n  const maxAmount = playerOption.getItemVal(\"max_amount\")\n\n  const list = new BlockList<WrappedBlock>()\n  list.add(...getNeighbourBlocks(playerOption, basicBlock, blockTypeId))\n\n  let previousSize = 0\n  let currentSize = list.size\n\n  while (currentSize < maxAmount && currentSize - previousSize > 0) {\n    for (const block of list) {\n      list.add(...getNeighbourBlocks(playerOption, block, blockTypeId))\n      previousSize = currentSize\n      currentSize = list.size\n\n      if (currentSize >= maxAmount) break\n    }\n  }\n\n  return list\n}\n","import { world } from \"@minecraft/server\"\n\nimport { BetterConsole } from \"@/lib/BetterConsole.class\"\n\nimport { setupListener } from \"./event\"\nimport { option } from \"./option\"\n\noption\n  .applyMainPlayer()\n  .then(() => {\n    for (const player of world.getAllPlayers()) {\n      option.applyPlayer(player)\n    }\n  })\n  .then(() => option.init())\n  .then(() => setupListener())\n  .catch(BetterConsole.error)\n"],"names":["BetterConsole","error","err","console","stack","TypeGroup","add","types","type","has","clone","toArray","Array","from","Symbol","iterator","keys","constructor","Set","WOODEN_DOORS","COPPER_DOORS","DOORS","WOODEN_TRAPDOORS","COPPER_TRAPDOORS","TRAPDOORS","LOGS","STEMS","ORES","STONES","safeEval","code","context","fn","Function","Object","values","serialize","obj","Map","entries","isArray","map","join","key","value","JSON","stringify","deserialize","str","parse","isAsyncFunc","func","prototype","toString","call","round","n","Math","floor","withProbability","p","random","equals","a","b","epsilon","abs","max","factorial","combination","k","binomial","binomialDistribution","range","to","step","output","i","push","VectorN","x","get","set","y","z","w","create","vector","Error","vectorStr","split","Number","toPrimitive","hint","axes","dimensions","length","index","callbackfn","VectorNUtils","_assertDimensions","val","subtract","multiply","divide","scale","negate","inverse","exchange","axis1","axis2","n0","n1","exactEquals","every","vectors","maxAxes","reduce","acc","forEach","fill","NEGATIVE_INFINITY","min","minAxes","POSITIVE_INFINITY","ceil","maxMagnitude","prev","curr","magnitude","minMagnitude","sqrt","squaredMagnitude","sum","distance","squaredDistance","diff","dot","normalize","angle","cosOmega","acos","lerp","t","slerp","omega","sinOmega","sin","EPSILON","ratioA","ratioB","bezier","points","newPoints","Vector3Utils","Vector3","cross","normalized","floored","ceiled","rounded","absoluted","copy","v","distanceTo","squaredDistanceTo","Location","centerCorrected","isNearTo","offset","BlockLocation","asyncRun","Promise","resolve","reject","system","run","errorHandler","errText","target","sendMessage","waitForFirstPlayerInitialSpawn","players","world","getAllPlayers","callback","afterEvents","playerSpawn","subscribe","event","initialSpawn","player","unsubscribe","getOrAddObjective","id","name","objective","scoreboard","getObjective","addObjective","removeMinecraftNamespace","identifier","replace","addMinecraftNamespaceIfNeed","test","LocationInfo","textify","location","dimension","Dimension","getDimension","LocationUtils","getDirectionOffset","direction","isEast","isWest","isUp","isDown","isSouth","isNorth","between","Direction","getOpposite","directionCode","isOppositeTo","Directions","East","South","Up","West","North","Down","WrapperTemplate","wrap","args","tryWrap","match","assert","DIAMOND_PICKAXE_OR_UPPER","IRON_PICKAXE_OR_UPPER","STONE_PICKAXE_OR_UPPER","WOODEN_PICKAXE_OR_UPPER","WrappedItemStack","hasComponent","componentId","_item","enchants","components","ItemComponentTypes","Enchantable","itemStack","typeId","getComponents","component","MinecraftBiomeTypes","MinecraftBiomeTypes2","MinecraftBlockTypes","MinecraftBlockTypes2","MinecraftCameraPresetsTypes","MinecraftCameraPresetsTypes2","MinecraftCooldownCategoryTypes","MinecraftCooldownCategoryTypes2","MinecraftDimensionTypes","MinecraftDimensionTypes2","MinecraftEffectTypes","MinecraftEffectTypes2","MinecraftEnchantmentTypes","MinecraftEnchantmentTypes2","MinecraftEntityTypes","MinecraftEntityTypes2","MinecraftFeatureTypes","MinecraftFeatureTypes2","MinecraftItemTypes","MinecraftItemTypes2","ItemStackWithDurability","damage","Durability","maxDurability","durability","applyDamage","unbreakingLevel","getEnchantment","Unbreaking","level","probability","getDamageChance","TypeError","FortuneRules","drops","dig_by","raw","item_id","ItemTypeGroups","default_range","fortune_rule","refined","xp_range","Ore","Melon","acacia_log","acaciaLog","amethyst_block","amethystBlock","amethyst_cluster","amethystCluster","ancient_debris","ancientDebris","birch_log","birchLog","cherry_log","cherryLog","coal_ore","coalOre","copper_ore","copperOre","crimson_stem","crimsonStem","dark_oak_log","darkOakLog","deepslate","deepslate_coal_ore","deepslateCoalOre","deepslate_copper_ore","deepslateCopperOre","deepslate_diamond_ore","deepslateDiamondOre","deepslate_emerald_ore","deepslateEmeraldOre","deepslate_gold_ore","deepslateGoldOre","deepslate_iron_ore","deepslateIronOre","deepslate_lapis_ore","deepslateLapisOre","deepslate_redstone_ore","deepslateRedstoneOre","diamond_ore","diamondOre","emerald_ore","emeraldOre","gold_ore","goldOre","iron_ore","ironOre","jungle_log","jungleLog","lapis_ore","lapisOre","mangrove_log","mangroveLog","nether_gold_ore","netherGoldOre","oak_log","oakLog","obsidian","quartz_ore","quartzOre","redstone_ore","redstoneOre","spruce_log","spruceLog","stone","warped_stem","warpedStem","NumberRange","array","includes","LootTable","addItem","item","table","totalWeight","weight","getResult","total","items","DropItem","itemId","amount","amountLootTable","maxAmount","xp","xpRange","defaultRange","max_amount","DropItemGroup","group","e","BlockDrops","getDropConfig","useItem","find","digBy","getDrops","withFortune","withSilkTouch","immature","immatureResource","blockItem","fortuneRule","undefined","rawResource","lootTable","Grass","Flower","Crop","distribution","seedResource","Custom","custumLootTables","customItemDrop","blockTypeId","BlockDefinition","dropConfig","BlockPermutation","getItemStack","refinedResource","seed","option","custom","WrappedBlock","getOffsetBlock","getBlock","getNeighbourBlock","getState","permutation","hasState","setState","states","getAllStates","_block","setPermutation","canBeDugBy","itemTypeId","destroy","fillBlocks","BlockVolume","breakBy","useItemStack","result","hasEnchantment","spawnDrops","drop","spawnItem","ItemStack","spawnEntity","getTotalDamage","block","WrappedBlocks","_blocks","blocks","BlockList","size","some","shift","DoorBlock","_lower","_upper","opened","facingDirection","hingeSide","isWooden","isCopper","isIron","canBeOpenedByHand","open","close","getRelated","shouldBeTheSameType","relatedBlock","relatedDoor","wrappedBlock","isUpper","WrappedEntity","nameTag","_entity","isSneaking","getRotation","getFacingDirectionXZ","rotation","entity","scoreboardIdentity","overworld","CUSTOM_COMMAND_SET","Commands","commandString","Entity","runCommand","customCommands","filter","regex","runner","runCommandAsync","register","prefix","command","startsWith","RegExp","argv","trim","beforeEvents","chatSend","message","cancel","sender","catch","WrappedContainer","_container","emptySlotsCount","getItem","slot","setItem","tryAddItem","container","EntityContainer","remain","WrappedPlayer","_player","experience","addExperience","inventory","selectedSlotIndex","getGameMode","matches","each","GameMode","mode","testGameMode","playersUnderMode","getPlayers","gameMode","setGameMode","getMainHandItem","setMainHandItem","useItemFromInventory","useMainHandItem","useXpOrb","xpAmount","addLevels","TrapdoorBlock","upsideOrDown","extensive","maxLength","relatedTrapdoor","that","needOpposite","playerFacing","extensiveBlock","extensiveTrapdoor","Dialog","confirm","title","body","onCancel","onConfirm","form","dialog","MessageFormData","button1","button2","onClose","onSelectButton1","onSelectButton2","show","response","cancelationReason","FormCancelationReason","UserBusy","canceled","UserClosed","ModalFormResponse","formValues","onSubmit","MessageFormResponse","selection","ActionFormResponse","onSelect","base64map","crypt","rotl","rotr","endian","randomBytes","bytes","bytesToWords","words","wordsToBytes","bytesToHex","hex","hexToBytes","c","parseInt","substr","bytesToBase64","base64","triplet","j","charAt","base64ToBytes","imod4","indexOf","pow","module","charenc","utf8","stringToBytes","bin","unescape","encodeURIComponent","bytesToString","decodeURIComponent","escape","charCodeAt","String","fromCharCode","isBuffer","isSlowBuffer","_isBuffer","readFloatLE","slice","require","md5","options","encoding","Uint8Array","m","l","d","FF","_ff","GG","_gg","HH","_hh","II","_ii","aa","bb","cc","dd","s","_blocksize","_digestsize","digestbytes","asBytes","asString","ALL_DATABASES","Database","dbName","_syncDataFromScoreboard","store","clear","participant","getParticipants","data","displayName","delete","removeParticipant","replaceAll","RangeError","setScore","getAll","EventEmitter","on","eventName","listener","_eventName","_events","once","_listener","removeListener","newListeners","emit","asyncEmit","addListener","off","OptionItemRange","select","selected","_includes","original","events","description","defaultValue","reload","OptionItemSelection","hasVal","PlayerOption","opts","_syncToDB","getItemValMap","db","hasItem","_syncFromDB","setItemVal","syncFromDB","init","_getItem","getItemVal","done","parentDialog","handleDone","reply","showDialog","ModalFormData","nameMap","valuesMap","toggle","valueArray","dropdown","findIndex","slider","nameIndex","valueIndex","OptionNamespace","_items","applyPlayer","playerOpt","applyMainPlayer","valueMap","getPlayer","playerOption","OptionManager","registerNamesapace","namespaces","getNamesapace","namespace","ActionFormData","button","optionManager","changed","warn","setupListener","itemUseOn","source","doors","door","trapdoors","trapdoor","then","entityDie","entityTypes","cause","damageSource","damagingEntity","EntityDamageCause","entityAttack","entities","playerBreakBlock","blockPermutation","brokenBlockPermutation","playerPlaceBlock","killed","killed_by","killed_for","mined","placed","_","entityHealthChanged","newValue","deathCount","playerKillCount","totalKillCount","health","globalDB","ALL_PLAYER_DATABASES","EventDB","addParticipated","objectiveId","participated","getParticipated","setEvents","getEvents","Handler","criteria","criteriaType","parseCriteria","CRITERIA","setObjectiveAtDisplaySlot","DisplaySlotId","Sidebar","sortOrder","ObjectiveSortOrder","Ascending","hasParticipant","remove","removeObjective","start","playerDB","criteriaName","setupTigger","tigger","creative","getScore","addScore","stop","handler","startResult","_remove","TpxDB","disposable","force","info","handleSet","text","afterEntityDieCallback","deadEntity","assign","teleport","checkForBlocks","keepVelocity","tryTeleport","names","list","datas","msg","SUB_COMMANDS","tpxCommand","unshift","backCommand","homeCommand","optMap","back_cmd","home_cmd","ENABLE_BLOCKS","BlockTypeGroups","basicBlock","enableBlocks","mainHandItem","blockList","getRelatedBlocks","wrappedItem","totalDamage","totalItems","totalXp","getNeighbourBlocks","offsets","previousSize","currentSize"],"mappings":"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","x_google_ignoreList":[18,70,71,72,73]}