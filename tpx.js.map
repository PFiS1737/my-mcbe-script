{"version":3,"file":"tpx.js","sources":["../src/lib/BetterConsole.class.ts","../src/lib/commands/Commands.class.ts","../src/lib/util/game.ts","../node_modules/.pnpm/crypt@0.0.2/node_modules/crypt/crypt.js","../node_modules/.pnpm/charenc@0.0.2/node_modules/charenc/charenc.js","../node_modules/.pnpm/is-buffer@1.1.6/node_modules/is-buffer/index.js","../node_modules/.pnpm/md5@2.3.0/node_modules/md5/md5.js","../src/lib/util/index.ts","../src/lib/database/Database.class.ts","../src/lib/dialog/Dialog.class.ts","../src/lib/util/math.ts","../src/lib/vector/VectorN.class.ts","../src/lib/vector/VectorNUtils.class.ts","../src/lib/vector/Vector3Utils.class.ts","../src/lib/vector/Vector3.class.ts","../src/lib/location/Location.class.ts","../src/lib/location/LocationInfo.class.ts","../src/script/tpx/db.ts","../src/lib/EventEmitter.class.ts","../src/lib/NumberRange.class.ts","../src/lib/option-manager/OptionItemRange.class.ts","../src/lib/option-manager/OptionItemSelection.class.ts","../src/lib/option-manager/PlayerOption.class.ts","../src/lib/option-manager/OptionNamespace.class.ts","../src/lib/option-manager/OptionManager.class.ts","../src/lib/option-manager/manager.ts","../src/lib/option-manager/command.ts","../src/script/tpx/option.ts","../src/script/tpx/Handler.class.ts","../src/script/tpx/command.ts","../src/script/tpx/index.ts"],"sourcesContent":["export class BetterConsole {\n  static error(err: Error) {\n    console.error(`${err}\\n${err.stack}`)\n  }\n}\n","import {\n  type Dimension,\n  type Entity,\n  MinecraftDimensionTypes,\n  type Player,\n  world,\n} from \"@minecraft/server\"\n\nimport { BetterConsole } from \"../BetterConsole.class\"\n\nexport type CommandTarget = Player | Entity | Dimension\ntype CommandConfig = {\n  regex: RegExp\n  runner: (commandString: string, target: CommandTarget) => Promise<void>\n}\n\nconst overworld = world.getDimension(MinecraftDimensionTypes.overworld)\n\nconst CUSTOM_COMMAND_SET = new Set<CommandConfig>()\n\nexport class Commands {\n  static run(commandString: string, target: CommandTarget = overworld) {\n    return target.runCommand(commandString)\n  }\n  static async asyncRun(\n    commandString: string,\n    target: CommandTarget = overworld\n  ) {\n    const customCommands = [...CUSTOM_COMMAND_SET]\n      .filter(({ regex }) => regex.test(commandString))\n      .map((e) => e.runner)\n    if (customCommands.length) {\n      for (const runner of customCommands) {\n        await runner(commandString, target)\n      }\n    } else return await target.runCommandAsync(commandString)\n  }\n  static register(\n    prefix: string,\n    command: string,\n    callback: (argv: string[], target: CommandTarget) => Promise<void>\n  ) {\n    if (prefix.startsWith(\"/\"))\n      throw new Error(\"Unable to register slash commands.\")\n\n    const regex = new RegExp(`^${prefix}${command}( |$)`)\n    const runner: CommandConfig[\"runner\"] = async (commandString, target) => {\n      const argv = commandString\n        .split(/(\".*?\"|[^\"\\s]+)+(?=\\s*|\\s*$)/g)\n        .filter((e) => e.trim().length > 0)\n      await callback(argv, target)\n    }\n    CUSTOM_COMMAND_SET.add({ regex, runner })\n\n    world.beforeEvents.chatSend.subscribe((event) => {\n      if (regex.test(event.message)) {\n        event.cancel = true\n\n        runner(event.message, event.sender).catch(BetterConsole.error)\n      }\n    })\n  }\n}\n\nexport default Commands\n","import { type Player, system, world } from \"@minecraft/server\"\n\nexport const sleepAsync = (ms: number): Promise<void> =>\n  new Promise((resolve) => system.runTimeout(resolve, ms))\n\nexport function asyncRun<T>(fn: () => T): Promise<T> {\n  return new Promise((resolve, reject) => {\n    system.run(() => {\n      try {\n        resolve(fn())\n      } catch (err) {\n        reject(err)\n      }\n    })\n  })\n}\n\nexport function errorHandler(errText: string, target: Player) {\n  const err = new Error(errText)\n  target.sendMessage(err.toString())\n  return err\n}\n\nexport function waitForFirstPlayerInitialSpawn(): Promise<Player> {\n  const players = world.getAllPlayers()\n  if (players.length) return Promise.resolve(players[0])\n\n  return new Promise((resolve) => {\n    const callback = world.afterEvents.playerSpawn.subscribe((event) => {\n      if (event.initialSpawn) resolve(event.player)\n      world.afterEvents.playerSpawn.unsubscribe(callback)\n    })\n  })\n}\n\nexport function getOrAddObjective(id: string, name?: string) {\n  const objective = world.scoreboard.getObjective(id)\n\n  if (!objective && !name) throw new Error(`Couldn't find objective \"${id}\".`)\n  if (!objective) return world.scoreboard.addObjective(id, name)\n\n  return objective\n}\n\nexport function removeMinecraftNamespace(identifier: string) {\n  return identifier.replace(/^minecraft\\:/, \"\")\n}\n\nexport function addMinecraftNamespaceIfNeed(identifier: string) {\n  return /^(.+)\\:/.test(identifier) ? identifier : `minecraft:${identifier}`\n}\n","(function() {\n  var base64map\n      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n\n  crypt = {\n    // Bit-wise rotation left\n    rotl: function(n, b) {\n      return (n << b) | (n >>> (32 - b));\n    },\n\n    // Bit-wise rotation right\n    rotr: function(n, b) {\n      return (n << (32 - b)) | (n >>> b);\n    },\n\n    // Swap big-endian to little-endian and vice versa\n    endian: function(n) {\n      // If number given, swap endian\n      if (n.constructor == Number) {\n        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;\n      }\n\n      // Else, assume array and swap all items\n      for (var i = 0; i < n.length; i++)\n        n[i] = crypt.endian(n[i]);\n      return n;\n    },\n\n    // Generate an array of any length of random bytes\n    randomBytes: function(n) {\n      for (var bytes = []; n > 0; n--)\n        bytes.push(Math.floor(Math.random() * 256));\n      return bytes;\n    },\n\n    // Convert a byte array to big-endian 32-bit words\n    bytesToWords: function(bytes) {\n      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\n        words[b >>> 5] |= bytes[i] << (24 - b % 32);\n      return words;\n    },\n\n    // Convert big-endian 32-bit words to a byte array\n    wordsToBytes: function(words) {\n      for (var bytes = [], b = 0; b < words.length * 32; b += 8)\n        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a hex string\n    bytesToHex: function(bytes) {\n      for (var hex = [], i = 0; i < bytes.length; i++) {\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n      }\n      return hex.join('');\n    },\n\n    // Convert a hex string to a byte array\n    hexToBytes: function(hex) {\n      for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n      return bytes;\n    },\n\n    // Convert a byte array to a base-64 string\n    bytesToBase64: function(bytes) {\n      for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n        for (var j = 0; j < 4; j++)\n          if (i * 8 + j * 6 <= bytes.length * 8)\n            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\n          else\n            base64.push('=');\n      }\n      return base64.join('');\n    },\n\n    // Convert a base-64 string to a byte array\n    base64ToBytes: function(base64) {\n      // Remove non-base-64 characters\n      base64 = base64.replace(/[^A-Z0-9+\\/]/ig, '');\n\n      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;\n          imod4 = ++i % 4) {\n        if (imod4 == 0) continue;\n        bytes.push(((base64map.indexOf(base64.charAt(i - 1))\n            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))\n            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\n      }\n      return bytes;\n    }\n  };\n\n  module.exports = crypt;\n})();\n","var charenc = {\n  // UTF-8 encoding\n  utf8: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));\n    }\n  },\n\n  // Binary encoding\n  bin: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      for (var bytes = [], i = 0; i < str.length; i++)\n        bytes.push(str.charCodeAt(i) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      for (var str = [], i = 0; i < bytes.length; i++)\n        str.push(String.fromCharCode(bytes[i]));\n      return str.join('');\n    }\n  }\n};\n\nmodule.exports = charenc;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","(function(){\r\n  var crypt = require('crypt'),\r\n      utf8 = require('charenc').utf8,\r\n      isBuffer = require('is-buffer'),\r\n      bin = require('charenc').bin,\r\n\r\n  // The core\r\n  md5 = function (message, options) {\r\n    // Convert to byte array\r\n    if (message.constructor == String)\r\n      if (options && options.encoding === 'binary')\r\n        message = bin.stringToBytes(message);\r\n      else\r\n        message = utf8.stringToBytes(message);\r\n    else if (isBuffer(message))\r\n      message = Array.prototype.slice.call(message, 0);\r\n    else if (!Array.isArray(message) && message.constructor !== Uint8Array)\r\n      message = message.toString();\r\n    // else, assume byte array already\r\n\r\n    var m = crypt.bytesToWords(message),\r\n        l = message.length * 8,\r\n        a =  1732584193,\r\n        b = -271733879,\r\n        c = -1732584194,\r\n        d =  271733878;\r\n\r\n    // Swap endian\r\n    for (var i = 0; i < m.length; i++) {\r\n      m[i] = ((m[i] <<  8) | (m[i] >>> 24)) & 0x00FF00FF |\r\n             ((m[i] << 24) | (m[i] >>>  8)) & 0xFF00FF00;\r\n    }\r\n\r\n    // Padding\r\n    m[l >>> 5] |= 0x80 << (l % 32);\r\n    m[(((l + 64) >>> 9) << 4) + 14] = l;\r\n\r\n    // Method shortcuts\r\n    var FF = md5._ff,\r\n        GG = md5._gg,\r\n        HH = md5._hh,\r\n        II = md5._ii;\r\n\r\n    for (var i = 0; i < m.length; i += 16) {\r\n\r\n      var aa = a,\r\n          bb = b,\r\n          cc = c,\r\n          dd = d;\r\n\r\n      a = FF(a, b, c, d, m[i+ 0],  7, -680876936);\r\n      d = FF(d, a, b, c, m[i+ 1], 12, -389564586);\r\n      c = FF(c, d, a, b, m[i+ 2], 17,  606105819);\r\n      b = FF(b, c, d, a, m[i+ 3], 22, -1044525330);\r\n      a = FF(a, b, c, d, m[i+ 4],  7, -176418897);\r\n      d = FF(d, a, b, c, m[i+ 5], 12,  1200080426);\r\n      c = FF(c, d, a, b, m[i+ 6], 17, -1473231341);\r\n      b = FF(b, c, d, a, m[i+ 7], 22, -45705983);\r\n      a = FF(a, b, c, d, m[i+ 8],  7,  1770035416);\r\n      d = FF(d, a, b, c, m[i+ 9], 12, -1958414417);\r\n      c = FF(c, d, a, b, m[i+10], 17, -42063);\r\n      b = FF(b, c, d, a, m[i+11], 22, -1990404162);\r\n      a = FF(a, b, c, d, m[i+12],  7,  1804603682);\r\n      d = FF(d, a, b, c, m[i+13], 12, -40341101);\r\n      c = FF(c, d, a, b, m[i+14], 17, -1502002290);\r\n      b = FF(b, c, d, a, m[i+15], 22,  1236535329);\r\n\r\n      a = GG(a, b, c, d, m[i+ 1],  5, -165796510);\r\n      d = GG(d, a, b, c, m[i+ 6],  9, -1069501632);\r\n      c = GG(c, d, a, b, m[i+11], 14,  643717713);\r\n      b = GG(b, c, d, a, m[i+ 0], 20, -373897302);\r\n      a = GG(a, b, c, d, m[i+ 5],  5, -701558691);\r\n      d = GG(d, a, b, c, m[i+10],  9,  38016083);\r\n      c = GG(c, d, a, b, m[i+15], 14, -660478335);\r\n      b = GG(b, c, d, a, m[i+ 4], 20, -405537848);\r\n      a = GG(a, b, c, d, m[i+ 9],  5,  568446438);\r\n      d = GG(d, a, b, c, m[i+14],  9, -1019803690);\r\n      c = GG(c, d, a, b, m[i+ 3], 14, -187363961);\r\n      b = GG(b, c, d, a, m[i+ 8], 20,  1163531501);\r\n      a = GG(a, b, c, d, m[i+13],  5, -1444681467);\r\n      d = GG(d, a, b, c, m[i+ 2],  9, -51403784);\r\n      c = GG(c, d, a, b, m[i+ 7], 14,  1735328473);\r\n      b = GG(b, c, d, a, m[i+12], 20, -1926607734);\r\n\r\n      a = HH(a, b, c, d, m[i+ 5],  4, -378558);\r\n      d = HH(d, a, b, c, m[i+ 8], 11, -2022574463);\r\n      c = HH(c, d, a, b, m[i+11], 16,  1839030562);\r\n      b = HH(b, c, d, a, m[i+14], 23, -35309556);\r\n      a = HH(a, b, c, d, m[i+ 1],  4, -1530992060);\r\n      d = HH(d, a, b, c, m[i+ 4], 11,  1272893353);\r\n      c = HH(c, d, a, b, m[i+ 7], 16, -155497632);\r\n      b = HH(b, c, d, a, m[i+10], 23, -1094730640);\r\n      a = HH(a, b, c, d, m[i+13],  4,  681279174);\r\n      d = HH(d, a, b, c, m[i+ 0], 11, -358537222);\r\n      c = HH(c, d, a, b, m[i+ 3], 16, -722521979);\r\n      b = HH(b, c, d, a, m[i+ 6], 23,  76029189);\r\n      a = HH(a, b, c, d, m[i+ 9],  4, -640364487);\r\n      d = HH(d, a, b, c, m[i+12], 11, -421815835);\r\n      c = HH(c, d, a, b, m[i+15], 16,  530742520);\r\n      b = HH(b, c, d, a, m[i+ 2], 23, -995338651);\r\n\r\n      a = II(a, b, c, d, m[i+ 0],  6, -198630844);\r\n      d = II(d, a, b, c, m[i+ 7], 10,  1126891415);\r\n      c = II(c, d, a, b, m[i+14], 15, -1416354905);\r\n      b = II(b, c, d, a, m[i+ 5], 21, -57434055);\r\n      a = II(a, b, c, d, m[i+12],  6,  1700485571);\r\n      d = II(d, a, b, c, m[i+ 3], 10, -1894986606);\r\n      c = II(c, d, a, b, m[i+10], 15, -1051523);\r\n      b = II(b, c, d, a, m[i+ 1], 21, -2054922799);\r\n      a = II(a, b, c, d, m[i+ 8],  6,  1873313359);\r\n      d = II(d, a, b, c, m[i+15], 10, -30611744);\r\n      c = II(c, d, a, b, m[i+ 6], 15, -1560198380);\r\n      b = II(b, c, d, a, m[i+13], 21,  1309151649);\r\n      a = II(a, b, c, d, m[i+ 4],  6, -145523070);\r\n      d = II(d, a, b, c, m[i+11], 10, -1120210379);\r\n      c = II(c, d, a, b, m[i+ 2], 15,  718787259);\r\n      b = II(b, c, d, a, m[i+ 9], 21, -343485551);\r\n\r\n      a = (a + aa) >>> 0;\r\n      b = (b + bb) >>> 0;\r\n      c = (c + cc) >>> 0;\r\n      d = (d + dd) >>> 0;\r\n    }\r\n\r\n    return crypt.endian([a, b, c, d]);\r\n  };\r\n\r\n  // Auxiliary functions\r\n  md5._ff  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & c | ~b & d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._gg  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & d | c & ~d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._hh  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b ^ c ^ d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._ii  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n\r\n  // Package private blocksize\r\n  md5._blocksize = 16;\r\n  md5._digestsize = 16;\r\n\r\n  module.exports = function (message, options) {\r\n    if (message === undefined || message === null)\r\n      throw new Error('Illegal argument ' + message);\r\n\r\n    var digestbytes = crypt.wordsToBytes(md5(message, options));\r\n    return options && options.asBytes ? digestbytes :\r\n        options && options.asString ? bin.bytesToString(digestbytes) :\r\n        crypt.bytesToHex(digestbytes);\r\n  };\r\n\r\n})();\r\n","export function safeEval(code: string, context = {}) {\n  const fn = new Function(...Object.keys(context), `return ${code}`)\n  return fn(...Object.values(context))\n}\n\nexport type Serializable =\n  | Set<Serializable>\n  | Map<Serializable, Serializable>\n  | { [key: string]: Serializable }\n  | Array<Serializable>\n  | string\n  | number\n  | boolean\n\nexport function serialize(obj: Serializable): string {\n  if (obj instanceof Set) return `new Set(${serialize(Array.from(obj))})`\n\n  if (obj instanceof Map)\n    return `new Map(${serialize(Array.from(obj.entries()))})`\n\n  if (Array.isArray(obj)) return `[${obj.map(serialize).join(\",\")}]`\n\n  if (typeof obj === \"object\" && obj !== null) {\n    return `{${Object.entries(obj)\n      .map(([key, value]) => `${serialize(key)}: ${serialize(value)}`)\n      .join(\",\")}}`\n  }\n  return JSON.stringify(obj)\n}\n\nexport function deserialize(str: string): Serializable {\n  try {\n    return JSON.parse(str)\n  } catch (err) {\n    // console.warn(`Could not use \\`JSON.parse()\\` to deserialise the string, trying \\`safeEval()\\`.`, { string: str })\n    return safeEval(`(${str})`)\n  }\n}\n\nexport function isAsyncFunc(func: Function): boolean {\n  return Object.prototype.toString.call(func) === \"[object AsyncFunction]\"\n}\n\nexport function arraySample<T>(arr: Array<T>): T {\n  return arr[Math.floor(Math.random() * arr.length)]\n}\n\nexport function toCamelCase(str: string) {\n  return str.replace(/(\\w)[\\. _-](\\w)/g, (_, $1, $2) => $1 + $2.toUpperCase())\n}\n","import type {\n  Player,\n  ScoreboardIdentity,\n  ScoreboardObjective,\n} from \"@minecraft/server\"\n\nimport md5 from \"md5\"\n\nimport { asyncRun, getOrAddObjective } from \"../util/game\"\nimport { type Serializable, deserialize, serialize } from \"../util/index\"\nimport type { WrappedPlayer } from \"../wrapper/entity\"\n\nexport const ALL_DATABASES = new Map<string, Database<any>>()\n\nexport class Database<V extends Serializable> {\n  id: string\n  objective: ScoreboardObjective\n\n  static open<T extends Serializable>(\n    player: Player | WrappedPlayer,\n    dbName: string\n  ) {\n    return new Database<T>(player, dbName)\n  }\n  constructor(player: Player | WrappedPlayer, dbName: string) {\n    const id = md5(`db:${dbName}_${player.id}`).slice(8, 24)\n    this.id = id\n    this.objective = getOrAddObjective(id, `db:${dbName}`)\n    // this.player = player\n\n    // if (!(player instanceof Player)) this.fakePlayer = true\n\n    this._syncDataFromScoreboard()\n\n    ALL_DATABASES.set(id, this)\n  }\n\n  store = new Map<string, { value: V; participant: ScoreboardIdentity }>()\n\n  _syncDataFromScoreboard() {\n    this.store.clear()\n    for (const participant of this.objective.getParticipants()) {\n      const data = deserialize(participant.displayName) as Record<string, V>\n      const key = Object.keys(data)[0]\n      const value = data[key]\n      this.store.set(key, { value, participant })\n    }\n  }\n  has(key: string) {\n    return this.store.has(key)\n  }\n  async delete(key: string) {\n    if (this.has(key)) {\n      const { participant } = this.store.get(key)!\n      await asyncRun(() => this.objective.removeParticipant(participant))\n      this.store.delete(key)\n      return true\n    }\n    return false\n  }\n  async clear() {\n    for (const [, { participant }] of this.store)\n      await asyncRun(() => this.objective.removeParticipant(participant))\n\n    this.store.clear()\n  }\n  get(key: string) {\n    return this.store.get(key)?.value\n  }\n  async set(key: string, value: V) {\n    await this.delete(key)\n    const data = serialize({ [key]: value }).replaceAll('\"', \"'\")\n    if (data.length > 32767)\n      throw new RangeError(\"Database: Value is too long.\")\n    await asyncRun(() => this.objective.setScore(data, 1))\n\n    this._syncDataFromScoreboard()\n  }\n  getAll() {\n    const output: Record<string, V> = {}\n    for (const [key, value] of this) output[key] = value\n    return output\n  }\n  *entries(): Generator<[string, V]> {\n    for (const [key, { value }] of this.store.entries()) yield [key, value]\n  }\n  *keys(): Generator<string> {\n    for (const key of this.store.keys()) yield key\n  }\n  *values(): Generator<V> {\n    for (const { value } of this.store.values()) yield value\n  }\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n}\n\nexport default Database\n","import type { Player, RawMessage } from \"@minecraft/server\"\nimport {\n  type ActionFormData,\n  ActionFormResponse,\n  FormCancelationReason,\n  MessageFormData,\n  MessageFormResponse,\n  type ModalFormData,\n  ModalFormResponse,\n} from \"@minecraft/server-ui\"\n\nimport { asyncRun } from \"../util/game\"\n\ninterface DialogHandlers<T> {\n  dialog: ModalFormData | MessageFormData | ActionFormData\n  onClose?: () => Promise<T>\n  onSubmit?: (\n    submitted: NonNullable<ModalFormResponse[\"formValues\"]>\n  ) => Promise<T>\n  onSelectButton1?: () => Promise<T>\n  onSelectButton2?: () => Promise<T>\n  onSelect?: (\n    selected: NonNullable<ActionFormResponse[\"selection\"]>\n  ) => Promise<T>\n}\n\nexport class Dialog<T> implements DialogHandlers<T> {\n  static async confirm<U>({\n    title = \"确认\",\n    body,\n    target,\n    onCancel = async () => ({}) as U,\n    onConfirm = async () => ({}) as U,\n  }: {\n    title?: string\n    body: RawMessage | string\n    target: Player\n    onCancel?: () => Promise<U>\n    onConfirm?: () => Promise<U>\n  }): Promise<U | undefined> {\n    if (!body || !target) throw new Error()\n    const form = await asyncRun(() => {\n      return new Dialog<U>({\n        dialog: new MessageFormData()\n          .title(title)\n          .body(body)\n          .button1(\"CANCEL\")\n          .button2(\"OK\"),\n        onClose: onCancel,\n        onSelectButton1: onCancel,\n        onSelectButton2: onConfirm,\n      })\n    })\n\n    return await form.show(target)\n  }\n\n  dialog\n  onClose\n  onSubmit\n  onSelectButton1\n  onSelectButton2\n  onSelect\n\n  constructor({\n    dialog,\n    onClose = async () => ({}) as T,\n    onSubmit = async () => ({}) as T,\n    onSelectButton1 = async () => ({}) as T,\n    onSelectButton2 = async () => ({}) as T,\n    onSelect = async () => ({}) as T,\n  }: DialogHandlers<T>) {\n    this.dialog = dialog\n    this.onSubmit = onSubmit\n    this.onSelectButton1 = onSelectButton1\n    this.onSelectButton2 = onSelectButton2\n    this.onSelect = onSelect\n    this.onClose = onClose\n  }\n\n  async show(target: Player): Promise<T | undefined> {\n    let response: ModalFormResponse | MessageFormResponse | ActionFormResponse\n\n    target.sendMessage(\"[!] 新对话框已发送，请关闭命令输入栏或其他对话框\")\n\n    do {\n      response = await this.dialog.show(target)\n    } while (response.cancelationReason === FormCancelationReason.UserBusy)\n\n    if (\n      response.canceled &&\n      response.cancelationReason === FormCancelationReason.UserClosed\n    )\n      return await this.onClose()\n\n    if (response instanceof ModalFormResponse) {\n      if (!response.formValues) throw new Error(\"Unexpected error.\")\n\n      return await this.onSubmit(response.formValues)\n    }\n\n    if (response instanceof MessageFormResponse) {\n      if (response.selection === 0) return await this.onSelectButton1()\n      if (response.selection === 1) return await this.onSelectButton2()\n\n      throw new Error(\"Unexpected error.\")\n    }\n\n    if (response instanceof ActionFormResponse) {\n      if (!response.selection) throw new Error(\"Unexpected error.\")\n\n      return await this.onSelect(response.selection)\n    }\n  }\n}\n\nexport default Dialog\n","export function round(n: number) {\n  if (n >= 0) return Math.round(n)\n  return n % 0.5 === 0 ? Math.floor(n) : Math.round(n)\n}\n\nexport function randomInt(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min)) + min\n}\n\nexport function withProbability(p: number) {\n  return Math.random() <= p\n}\n\nexport function equals(a: number, b: number, epsilon = 0.000001) {\n  return Math.abs(a - b) <= epsilon * Math.max(1, Math.abs(a), Math.abs(b))\n}\n\nexport function factorial(n: number): number {\n  return n > 1 ? n * factorial(n - 1) : 1\n}\n\nexport function combination(n: number, k: number) {\n  return factorial(n) / (factorial(k) * factorial(n - k))\n}\n\nexport function binomial(a: number, b: number, n: number) {\n  return (k: number) => a ** (n - k) * b ** k * combination(n, k)\n}\n\nexport function binomialDistribution(n: number, p: number) {\n  return binomial(1 - p, p, n)\n}\n\nexport function sum(from: number, to: number, fn: (i: number) => number) {\n  let output = 0\n  for (let i = from; i <= to; i++) output += fn(i)\n  return output\n}\n\nexport function range(from: number, to: number, step = 1) {\n  const output = []\n  for (let i = from; i < to; i += step) output.push(i)\n  return output\n}\n","import type { Vector3 as IVector3 } from \"@minecraft/server\"\n\nimport { serialize } from \"../util\"\n\n/**\n * Class representing an N-dimensional vector.\n */\nexport class VectorN implements IVector3 {\n  axes: number[]\n\n  /**\n   * Create a vector.\n   * @param axes - The axes of the vector.\n   */\n  constructor(...axes: number[]) {\n    this.axes = axes\n  }\n\n  get x() {\n    return this.get(0)\n  }\n  set x(value) {\n    this.set(0, value)\n  }\n  get y() {\n    return this.get(1)\n  }\n  set y(value) {\n    this.set(1, value)\n  }\n  get z() {\n    return this.get(2)\n  }\n  set z(value) {\n    this.set(2, value)\n  }\n  get w() {\n    return this.get(3)\n  }\n  set w(value) {\n    this.set(3, value)\n  }\n\n  /**\n   * Create a vector.\n   * @param vector - The vector wrote in array or string.\n   * @returns The vector.\n   */\n  static create(vector: number[] | string): VectorN {\n    if (Array.isArray(vector)) return new this(...vector)\n    if (typeof vector === \"string\") return this.parse(vector)\n\n    throw new Error(`Can't create vector for ${serialize(vector)}`)\n  }\n\n  /**\n   * Parse a string to vector.\n   * @param vectorStr - The string to parse.\n   * @returns The vector.\n   */\n  static parse(vectorStr: string): VectorN {\n    return this.create(vectorStr.split(\" \").map(Number))\n  }\n\n  /**\n   * Convert the vector to a string.\n   * @returns The string representation of the vector.\n   */\n  stringify(): string {\n    // @ts-ignore\n    return this[Symbol.toPrimitive](\"string\")\n  }\n\n  /**\n   * Convert the vector to an array.\n   * @returns The array representation of the vector.\n   */\n  toArray(): Array<number> {\n    return [...this]\n  }\n\n  /**\n   * Convert the vector to a primitive value.\n   * @param hint - The type hint.\n   * @returns The string representation or the vector itself.\n   */\n  [Symbol.toPrimitive](hint: string): string | VectorN {\n    if (hint === \"string\") return this.axes.join(\" \")\n    return this\n  }\n\n  /**\n   * Iterator for the vector axes.\n   * @returns The iterator for the axes.\n   */\n  [Symbol.iterator](): Iterator<number> {\n    return this.axes[Symbol.iterator]()\n  }\n\n  /**\n   * Get the number of dimensions of the vector.\n   * @returns The number of dimensions.\n   */\n  get dimensions(): number {\n    return this.axes.length\n  }\n\n  /**\n   * Get an axis of the vector by index.\n   * @param index - The index of the component.\n   * @returns The component value.\n   */\n  get(index: number): number {\n    return this.axes[index]\n  }\n\n  /**\n   * Set an axis of the vector by index.\n   * @param index - The index of the component.\n   * @param value - The value to set.\n   */\n  set(index: number, value: number) {\n    this.axes[index] = value\n  }\n\n  /**\n   * Apply a function to each axes of the vector and return a new vector.\n   * @param callbackfn - The function to apply.\n   * @returns The new vector.\n   */\n  map(\n    callbackfn: (vale: number, index: number, array: number[]) => number\n  ): VectorN {\n    return VectorN.create(this.axes.map(callbackfn))\n  }\n}\n","import { equals, round } from \"../util/math\"\nimport { VectorN } from \"./VectorN.class\"\n\n/**\n * Utility class for operations on N-dimensional vectors.\n */\nexport class VectorNUtils {\n  /**\n   * Create a vector.\n   * @param vector - The vector write in array.\n   * @returns The vector.\n   */\n  static create(vector: Array<number>) {\n    return VectorN.create(vector)\n  }\n\n  /**\n   * Clone a vector.\n   * @param a - The vector to clone.\n   * @returns The cloned vector.\n   */\n  static clone(a: VectorN) {\n    return this.create(a.toArray())\n  }\n\n  /**\n   * Assert that two vectors have the same dimensions.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @throws Will throw an error if the vectors do not have the same dimensions.\n   */\n  static _assertDimensions(a: VectorN, b: VectorN) {\n    if (a.dimensions !== b.dimensions)\n      throw new Error(\"Vectors must have the same dimensions.\")\n  }\n\n  /**\n   * Add two vectors.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns The resulting vector.\n   */\n  static add(a: VectorN, b: VectorN) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.map((val, index) => val + b.get(index))\n  }\n\n  /**\n   * Subtract one vector from another.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns The resulting vector.\n   */\n  static subtract(a: VectorN, b: VectorN) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.map((val, index) => val - b.get(index))\n  }\n\n  /**\n   * Multiply two vectors component-wise.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns The resulting vector.\n   */\n  static multiply(a: VectorN, b: VectorN) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.map((val, index) => val * b.get(index))\n  }\n\n  /**\n   * Divide one vector by another component-wise.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns The resulting vector.\n   */\n  static divide(a: VectorN, b: VectorN) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.map((val, index) => val / b.get(index))\n  }\n\n  /**\n   * Scale a vector by a scalar.\n   * @param a - The vector to scale.\n   * @param n - The scalar value.\n   * @returns The resulting vector.\n   */\n  static scale(a: VectorN, n: number) {\n    return a.map((val) => val * n)\n  }\n\n  /**\n   * Negate a vector.\n   * @param a - The vector to negate.\n   * @returns The resulting vector.\n   */\n  static negate(a: VectorN) {\n    return a.map((val) => -val)\n  }\n\n  /**\n   * Invert a vector component-wise.\n   * @param a - The vector to invert.\n   * @returns The resulting vector.\n   */\n  static inverse(a: VectorN) {\n    return a.map((val) => 1 / val)\n  }\n\n  /**\n   * Exchange two axes of a vector.\n   * @param a - The vector to modify.\n   * @param axis1 - The first axis to exchange.\n   * @param axis2 - The second axis to exchange\n   * @returns The resulting vector.\n   * @throws Will throw an error if the length of the axes array is not 2.\n   */\n  static exchange(a: VectorN, axis1: number, axis2: number) {\n    const output = this.clone(a)\n    const n0 = output.get(axis1)\n    const n1 = output.get(axis2)\n    output.set(axis1, n1)\n    output.set(axis2, n0)\n    return output\n  }\n\n  /**\n   * Check if two vectors are exactly equal.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns True if the vectors are exactly equal, otherwise false.\n   */\n  static exactEquals(a: VectorN, b: VectorN) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.axes.every((val, index) => val === b.get(index))\n  }\n\n  /**\n   * Check if two vectors are approximately equal.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns True if the vectors are approximately equal, otherwise false.\n   */\n  static equals(a: VectorN, b: VectorN) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.axes.every((val, index) => equals(val, b.get(index)))\n  }\n\n  /**\n   * Get the component-wise maximum of multiple vectors.\n   * @param vectors - The vectors to compare.\n   * @returns The resulting vector.\n   */\n  static max(...vectors: VectorN[]) {\n    const length = vectors[0].dimensions\n\n    const maxAxes = vectors.reduce((acc, vector) => {\n      vector.axes.forEach((val, index) => {\n        if (val > acc[index]) acc[index] = val\n      })\n      return acc\n    }, new Array(length).fill(Number.NEGATIVE_INFINITY))\n\n    return this.create(maxAxes)\n  }\n\n  /**\n   * Get the component-wise minimum of multiple vectors.\n   * @param vectors - The vectors to compare.\n   * @returns The resulting vector.\n   */\n  static min(...vectors: VectorN[]) {\n    const length = vectors[0].dimensions\n\n    const minAxes = vectors.reduce((acc, vector) => {\n      vector.axes.forEach((val, index) => {\n        if (val < acc[index]) acc[index] = val\n      })\n      return acc\n    }, new Array(length).fill(Number.POSITIVE_INFINITY))\n\n    return this.create(minAxes)\n  }\n\n  /**\n   * Apply the floor function to each component of a vector.\n   * @param a - The vector to modify.\n   * @returns The resulting vector.\n   */\n  static floor(a: VectorN) {\n    return a.map((val) => Math.floor(val))\n  }\n\n  /**\n   * Apply the ceil function to each component of a vector.\n   * @param a - The vector to modify.\n   * @returns The resulting vector.\n   */\n  static ceil(a: VectorN) {\n    return a.map((val) => Math.ceil(val))\n  }\n\n  /**\n   * Apply the round function to each component of a vector.\n   * @param a - The vector to modify.\n   * @returns The resulting vector.\n   */\n  static round(a: VectorN) {\n    return a.map((val) => round(val))\n  }\n\n  /**\n   * Apply the absolute value function to each component of a vector.\n   * @param a - The vector to modify.\n   * @returns The resulting vector.\n   */\n  static abs(a: VectorN) {\n    return a.map((val) => Math.abs(val))\n  }\n\n  /**\n   * Get the vector with the maximum magnitude from a list of vectors.\n   * @param vectors - The vectors to compare.\n   * @returns The vector with the maximum magnitude.\n   */\n  static maxMagnitude(...vectors: VectorN[]) {\n    return vectors.reduce((prev, curr) =>\n      VectorNUtils.magnitude(curr) > VectorNUtils.magnitude(prev) ? curr : prev\n    )\n  }\n\n  /**\n   * Get the vector with the minimum magnitude from a list of vectors.\n   * @param vectors - The vectors to compare.\n   * @returns The vector with the minimum magnitude.\n   */\n  static minMagnitude(...vectors: VectorN[]) {\n    return vectors.reduce((prev, curr) =>\n      VectorNUtils.magnitude(curr) < VectorNUtils.magnitude(prev) ? curr : prev\n    )\n  }\n\n  /**\n   * Calculate the magnitude of a vector.\n   * @param a - The vector to calculate the magnitude of.\n   * @returns The magnitude of the vector.\n   */\n  static magnitude(a: VectorN) {\n    return Math.sqrt(VectorNUtils.squaredMagnitude(a))\n  }\n\n  /**\n   * Calculate the squared magnitude of a vector.\n   * @param a - The vector to calculate the squared magnitude of.\n   * @returns The squared magnitude of the vector.\n   */\n  static squaredMagnitude(a: VectorN) {\n    return a.axes.reduce((sum, val) => sum + val ** 2, 0)\n  }\n\n  /**\n   * Calculate the distance between two vectors.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns The distance between the vectors.\n   */\n  static distance(a: VectorN, b: VectorN) {\n    return Math.sqrt(VectorNUtils.squaredDistance(a, b))\n  }\n\n  /**\n   * Calculate the squared distance between two vectors.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns The squared distance between the vectors.\n   */\n  static squaredDistance(a: VectorN, b: VectorN) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.axes.reduce((sum, val, index) => {\n      const diff = val - b.get(index)\n      return sum + diff ** 2\n    }, 0)\n  }\n\n  /**\n   * Calculate the dot product of two vectors.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns The dot product of the vectors.\n   */\n  static dot(a: VectorN, b: VectorN) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.axes.reduce((sum, val, index) => sum + val * b.get(index), 0)\n  }\n\n  /**\n   * Normalize a vector.\n   * @param a - The vector to normalize.\n   * @returns The normalized vector.\n   */\n  static normalize(a: VectorN) {\n    const magnitude = this.magnitude(a)\n    if (magnitude) return this.scale(a, 1 / magnitude)\n    return this.create(new Array(a.dimensions).fill(0))\n  }\n\n  /**\n   * Calculate the angle between two vectors.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns The angle between the vectors in radians.\n   */\n  static angle(a: VectorN, b: VectorN) {\n    const cosOmega = this.dot(this.normalize(a), this.normalize(b))\n    return Math.acos(cosOmega)\n  }\n\n  /**\n   * Generate a random vector.\n   * @param dimensions - The number of dimensions.\n   * @param scale - The scale of the random components.\n   * @returns The random vector.\n   */\n  static random(dimensions: number, scale = 1) {\n    const axes = Array.from({ length: dimensions }, () => Math.random() * 2 - 1)\n    return this.scale(this.create(axes), scale)\n  }\n\n  /**\n   * Perform linear interpolation between two vectors.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @param t - The interpolation parameter.\n   * @returns The interpolated vector.\n   */\n  static lerp(a: VectorN, b: VectorN, t: number) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.map((val, index) => val * (1 - t) + b.get(index) * t)\n  }\n\n  /**\n   * Perform spherical linear interpolation between two vectors.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @param t - The interpolation parameter.\n   * @returns The interpolated vector.\n   */\n  static slerp(a: VectorN, b: VectorN, t: number) {\n    if (t <= 0) return this.clone(a)\n    if (t >= 1) return this.clone(b)\n\n    const omega = this.angle(a, b)\n    const sinOmega = Math.sin(omega)\n\n    if (sinOmega <= Number.EPSILON) return this.lerp(a, b, t)\n\n    const ratioA = Math.sin(omega * (1 - t)) / sinOmega\n    const ratioB = Math.sin(omega * t) / sinOmega\n    return a.map((val, index) => val * ratioA + b.get(index) * ratioB)\n  }\n\n  /**\n   * Perform Bezier interpolation between vectors.\n   * @param points - The control points.\n   * @param t - The interpolation parameter.\n   * @returns The interpolated vector.\n   */\n  static bezier(points: VectorN[], t: number): VectorN {\n    const n = points.length - 1\n\n    if (!n) return points[0]\n\n    const newPoints = []\n    for (let i = 0; i < n; i++) {\n      newPoints.push(this.lerp(points[i], points[i + 1], t))\n    }\n\n    return this.bezier(newPoints, t)\n  }\n}\n","import { Vector3 } from \"./Vector3.class\"\nimport { VectorNUtils } from \"./VectorNUtils.class\"\n\n/**\n * Utility class for operations on 3D vectors.\n */\nexport class Vector3Utils extends VectorNUtils {\n  /**\n   * @param vector - The vector write in array.\n   * @returns The vector.\n   */\n  static create(\n    vector: number[] | string | { x: number; y: number; z: number }\n  ): Vector3 {\n    return Vector3.create(vector)\n  }\n\n  /**\n   * Calculate the cross product of two 3D vectors.\n   * @param a - The first vector.\n   * @param b - The second vector.\n   * @returns The cross product of the vectors.\n   */\n  static cross(a: Vector3, b: Vector3): Vector3 {\n    return this.create([\n      a.y * b.z - a.z * b.y,\n      a.z * b.x - a.x * b.z,\n      a.x * b.y - a.y * b.x,\n    ])\n  }\n}\n","import { serialize } from \"../util\"\nimport { Vector3Utils } from \"./Vector3Utils.class\"\nimport { VectorN } from \"./VectorN.class\"\n\nexport type Vector3Like =\n  | string\n  | number[]\n  | { x: number; y: number; z: number }\n\n/**\n * Class representing a 3-dimensional vector.\n * @extends VectorN\n */\nexport class Vector3 extends VectorN {\n  /**\n   * Create a 3D vector.\n   * @param x - The x axis.\n   * @param y - The y axis.\n   * @param z - The z axis.\n   */\n  constructor(x = 0, y = 0, z = 0) {\n    super(x, y, z)\n  }\n\n  /**\n   * @param vector - The vector write in array.\n   * @returns The vector.\n   */\n  static create(vector: Vector3Like): Vector3 {\n    if (Array.isArray(vector)) return new this(...vector)\n    // @ts-ignore\n    if (typeof vector === \"string\") return this.parse(vector)\n    if (typeof vector === \"object\")\n      return new this(vector.x, vector.y, vector.z)\n\n    throw new Error(`Can't create 3d vector for ${serialize(vector)}`)\n  }\n\n  get magnitude() {\n    return Vector3Utils.magnitude(this)\n  }\n  get squaredMagnitude() {\n    return Vector3Utils.squaredMagnitude(this)\n  }\n\n  get normalized() {\n    return Vector3Utils.normalize(this)\n  }\n  get floored() {\n    return Vector3Utils.floor(this)\n  }\n  get ceiled() {\n    return Vector3Utils.ceil(this)\n  }\n  get rounded() {\n    return Vector3Utils.round(this)\n  }\n  get absoluted() {\n    return Vector3Utils.abs(this)\n  }\n\n  /**\n   * Apply a function to each axes of the vector and return a new vector.\n   * @param callbackfn - The function to apply.\n   * @returns The new vector.\n   */\n  map(\n    callbackfn: (vale: number, index: number, array: number[]) => number\n  ): Vector3 {\n    return Vector3.create(this.axes.map(callbackfn))\n  }\n\n  copy(v: Vector3 | VectorN) {\n    this.x = v.x\n    this.y = v.y\n    this.z = v.z\n    return this\n  }\n  clone() {\n    return new Vector3(this.x, this.y, this.z)\n  }\n  equals(v: Vector3) {\n    return Vector3Utils.equals(this, v)\n  }\n\n  distanceTo(v: Vector3) {\n    return Vector3Utils.distance(this, v)\n  }\n  squaredDistanceTo(v: Vector3) {\n    return Vector3Utils.squaredDistance(this, v)\n  }\n\n  add(v: Vector3) {\n    return this.copy(Vector3Utils.add(this, v))\n  }\n  subtract(v: Vector3) {\n    return this.copy(Vector3Utils.subtract(this, v))\n  }\n  multiply(v: Vector3) {\n    return this.copy(Vector3Utils.multiply(this, v))\n  }\n  divide(v: Vector3) {\n    return this.copy(Vector3Utils.divide(this, v))\n  }\n  scale(n: number) {\n    return this.copy(Vector3Utils.scale(this, n))\n  }\n  negate() {\n    return this.copy(Vector3Utils.negate(this))\n  }\n  inverse() {\n    return this.copy(Vector3Utils.inverse(this))\n  }\n\n  floor() {\n    return this.copy(this.floored)\n  }\n  ceil() {\n    return this.copy(this.ceiled)\n  }\n  round() {\n    return this.copy(this.rounded)\n  }\n  abs() {\n    return this.copy(this.absoluted)\n  }\n\n  normalize() {\n    return this.copy(this.normalized)\n  }\n}\n","import type { Vector3Like } from \"../vector/Vector3.class\"\nimport { Vector3, Vector3Utils } from \"../vector/index\"\nimport type { BlockLocation } from \"./BlockLocation.class\"\n\nexport class Location extends Vector3 {\n  get centerCorrected() {\n    return Location.create(\n      // @ts-ignore\n      Vector3Utils.add(this.floored, new Vector3(0.5, 0.5, 0.5))\n    )\n  }\n\n  static create(vector: Vector3Like) {\n    return Vector3.create(vector) as Location\n  }\n\n  clone() {\n    return new Location(this.x, this.y, this.z)\n  }\n  equals(v: Location) {\n    return Vector3Utils.exactEquals(this, v)\n  }\n  isNearTo(v: Location | BlockLocation, distance: number) {\n    return this.distanceTo(v) <= distance\n  }\n\n  offset(v: Location | BlockLocation) {\n    return this.add(v)\n  }\n}\n","import { Dimension, world } from \"@minecraft/server\"\n\nimport { removeMinecraftNamespace } from \"../util/game\"\nimport type { Vector3Like } from \"../vector/Vector3.class\"\nimport { Location } from \"./Location.class\"\n\nexport class LocationInfo {\n  location: Location\n  dimension: Dimension\n\n  constructor({\n    location,\n    dimension,\n  }: {\n    location: Location | Vector3Like\n    dimension: string | Dimension\n  }) {\n    this.location =\n      location instanceof Location ? location : Location.create(location)\n    this.dimension =\n      dimension instanceof Dimension ? dimension : world.getDimension(dimension)\n  }\n  textify() {\n    return {\n      location: `${this.location}`,\n      dimension: this.dimension.id,\n    }\n  }\n\n  [Symbol.toPrimitive](hint: string) {\n    if (hint === \"string\")\n      return `${removeMinecraftNamespace(this.dimension.id)}: ${this.location}`\n    return this\n  }\n}\n","import type { Player } from \"@minecraft/server\"\n\nimport { Database } from \"@/lib/database/index\"\nimport { Dialog } from \"@/lib/dialog/index\"\nimport { LocationInfo } from \"@/lib/location/index\"\n\nexport const ALL_PLAYER_DATABASES = new Map<Player, TpxDB>()\n\nexport class TpxDB {\n  player: Player\n  db: Database<{\n    info: ReturnType<LocationInfo[\"textify\"]>\n    disposable: boolean\n  }>\n\n  constructor(player: Player) {\n    this.player = player\n    this.db = Database.open(player, \"tpx\")\n  }\n\n  static init(player: Player) {\n    const db = new TpxDB(player)\n    ALL_PLAYER_DATABASES.set(player, db)\n    return db\n  }\n\n  async set({\n    name,\n    disposable = false,\n    force = false,\n  }: {\n    name: string\n    disposable?: boolean\n    force?: boolean\n  }) {\n    const info = new LocationInfo(this.player)\n    const handleSet = async () => {\n      await this.db.set(name, {\n        info: info.textify(),\n        disposable,\n      })\n      return info\n    }\n    if (!force && this.db.has(name)) {\n      return await Dialog.confirm({\n        body: `名称 ${name} 已被占用，是否覆盖？`,\n        target: this.player,\n        onConfirm: async () => await handleSet(),\n      })\n    }\n    return await handleSet()\n  }\n  async get(name: string) {\n    if (!this.db.has(name)) return\n    const data = this.db.get(name)\n\n    if (!data) return\n\n    if (data.disposable) await this.db.delete(name)\n    if (data.info) return new LocationInfo(data.info)\n  }\n  async remove(name: string) {\n    if (!this.db.has(name)) return false\n\n    return await Dialog.confirm({\n      body: `是否删除 ${name} `,\n      target: this.player,\n      onConfirm: async () => await this.db.delete(name),\n    })\n  }\n  getAll() {\n    const output: Array<{\n      name: string\n      info: LocationInfo\n      disposable: boolean\n      text: string\n    }> = []\n\n    for (const [name, { info: data, disposable }] of this.db) {\n      const info = new LocationInfo(data)\n      output.push({\n        name,\n        info,\n        disposable,\n        text: `${name} (${info})${disposable ? \" [一次性]\" : \"\"}`,\n      })\n    }\n\n    return output\n  }\n}\n","import { isAsyncFunc } from \"./util/index\"\n\nexport class EventEmitter {\n  _events: Record<string, Function[]> = {}\n\n  on(eventName: string, listener: Function) {\n    if (isAsyncFunc(listener)) {\n      const _eventName = `${eventName}.async`\n      if (this._events[_eventName]) this._events[_eventName].push(listener)\n      else this._events[_eventName] = [listener]\n    } else {\n      if (this._events[eventName]) this._events[eventName].push(listener)\n      else this._events[eventName] = [listener]\n    }\n    return this\n  }\n  once(eventName: string, listener: Function) {\n    if (isAsyncFunc(listener)) {\n      const _eventName = `${eventName}.async`\n      const _listener = async (...args: any[]) => {\n        await listener(...args)\n        this.removeListener(_eventName, _listener)\n      }\n      if (this._events[_eventName]) this._events[_eventName].push(_listener)\n      else this._events[_eventName] = [_listener]\n    } else {\n      const _listener = (...args: any[]) => {\n        listener(...args)\n        this.removeListener(eventName, _listener)\n      }\n      if (this._events[eventName]) this._events[eventName].push(_listener)\n      else this._events[eventName] = [_listener]\n    }\n    return this\n  }\n  removeListener(eventName: string, listener: Function) {\n    if (this._events[eventName]) {\n      const newListeners: Function[] = []\n      for (const _listener of this._events[eventName]) {\n        if (_listener !== listener) newListeners.push(_listener)\n      }\n      this._events[eventName] = newListeners\n    }\n    return this\n  }\n  async emit(eventName: string, ...args: any[]) {\n    if (this._events[eventName]) {\n      for (const listener of this._events[eventName]) listener(...args)\n    }\n    await this.asyncEmit(eventName, ...args)\n  }\n  async asyncEmit(eventName: string, ...args: any[]) {\n    const _eventName = `${eventName}.async`\n    if (this._events[_eventName]) {\n      for (const listener of this._events[_eventName]) await listener(...args)\n    }\n  }\n  addListener(eventName: string, listener: Function) {\n    return this.on(eventName, listener)\n  }\n  off(eventName: string, listener: Function) {\n    return this.removeListener(eventName, listener)\n  }\n}\n\nexport default EventEmitter\n","import type { NumberRange as INumberRange } from \"@minecraft/common\"\n\nimport { range } from \"./util/math\"\n\nexport class NumberRange implements INumberRange {\n  min: number\n  max: number\n  step: number\n\n  constructor(min: number, max: number, step = 1) {\n    this.min = min\n    this.max = max\n    this.step = step\n  }\n  toArray() {\n    return range(this.min, this.max + this.step, this.step)\n  }\n\n  get array() {\n    return this.toArray()\n  }\n\n  includes(n: number) {\n    return this.array.includes(n)\n  }\n\n  [Symbol.iterator]() {\n    return this.array.values()\n  }\n}\n","import type { Player } from \"@minecraft/server\"\n\nimport { EventEmitter } from \"../EventEmitter.class\"\nimport { NumberRange } from \"../NumberRange.class\"\n\nexport interface IOptionItemRange {\n  name: string\n  description: string\n  range?: [number, number, number?]\n  defaultValue?: number\n  reload?: boolean\n  events?: {\n    inited?: (selected: number, player: Player) => void\n    changed?: (selected: number, original: number, player: Player) => void\n    selected?: (selected: number, original: number, player: Player) => void\n  }\n}\n\nexport class OptionItemRange {\n  name: string\n  description: string\n  range: NumberRange\n  reload?: boolean\n  events: EventEmitter\n  _player: Player\n\n  original: number | undefined\n  selected: number | undefined\n\n  constructor({\n    name,\n    description,\n    range = [0, 1, 1],\n    defaultValue,\n    events,\n    reload,\n    _player,\n  }: {\n    _player: Player\n  } & IOptionItemRange) {\n    this.name = name\n    this.description = description\n    this.range = new NumberRange(...range)\n    this.events = new EventEmitter()\n    this.reload = reload\n    this._player = _player\n\n    if (events) {\n      for (const [eventName, listener] of Object.entries(events))\n        this.events.on(eventName, listener)\n    }\n\n    if (defaultValue !== undefined && this._includes(defaultValue))\n      this.selected = defaultValue\n    else this.selected = this.range.min\n\n    this.events.emit(\"inited\", this.selected, _player)\n    this.events.emit(\"changed\", this.selected, undefined, _player)\n  }\n  select(value: number) {\n    if (this.selected !== value && this._includes(value)) {\n      this.original = this.selected\n      this.selected = value\n      this.events.emit(\"selected\", this.selected, this.original, this._player)\n      this.events.emit(\"changed\", this.selected, this.original, this._player)\n      return true\n    }\n    return false\n  }\n  _includes(value: number) {\n    return this.range.includes(value)\n  }\n}\n","import type { Player } from \"@minecraft/server\"\n\nimport { EventEmitter } from \"../EventEmitter.class\"\n\nexport interface IOptionItemSelection<T extends string | number | boolean> {\n  name: string\n  description: string\n  values: Array<[T, string?]>\n  defaultValue?: T\n  reload?: boolean\n  events?: {\n    inited?: (selected: T, player: Player) => void\n    changed?: (selected: T, original: T, player: Player) => void\n    selected?: (selected: T, original: T, player: Player) => void\n  }\n}\n\nexport class OptionItemSelection<T extends string | number | boolean> {\n  name: string\n  description: string\n  values: Map<T, string>\n  reload?: boolean\n  events: EventEmitter\n  _player: Player\n\n  original: T | undefined\n  selected: T | undefined\n\n  constructor({\n    name,\n    description,\n    values = [],\n    defaultValue,\n    events,\n    reload,\n    _player,\n  }: { _player: Player } & IOptionItemSelection<T>) {\n    this.name = name\n    this.description = description\n    this.values = new Map(\n      //@ts-ignore\n      values.map((value) => {\n        if (value[0] === true && !value[1]) value[1] = \"开启\"\n        else if (value[0] === false && !value[1]) value[1] = \"关闭\"\n        return value\n      })\n    )\n    this.events = new EventEmitter()\n    this.reload = reload\n    this._player = _player\n\n    if (events) {\n      for (const [eventName, listener] of Object.entries(events))\n        this.events.on(eventName, listener)\n    }\n\n    if (defaultValue !== undefined && this.hasVal(defaultValue))\n      this.selected = defaultValue\n    else if (values[0]) this.selected = values[0][0]\n\n    this.events.emit(\"inited\", this.selected, _player)\n    this.events.emit(\"changed\", this.selected, undefined, _player)\n  }\n  select(value: T) {\n    if (this.selected !== value && this.hasVal(value)) {\n      this.original = this.selected\n      this.selected = value\n      this.events.emit(\"selected\", this.selected, this.original, this._player)\n      this.events.emit(\"changed\", this.selected, this.original, this._player)\n      return true\n    }\n    return false\n  }\n  hasVal(value: T) {\n    return this.values.has(value) || !this.values.size\n  }\n}\n","import type { Player } from \"@minecraft/server\"\nimport { ModalFormData } from \"@minecraft/server-ui\"\n\nimport { Database } from \"../database/index\"\nimport { Dialog } from \"../dialog/index\"\nimport { type IOptionItemRange, OptionItemRange } from \"./OptionItemRange.class\"\nimport {\n  type IOptionItemSelection,\n  OptionItemSelection,\n} from \"./OptionItemSelection.class\"\n\nexport class PlayerOption {\n  name: string\n  db: Database<string | number | boolean>\n  player: Player\n\n  constructor(player: Player, name: string) {\n    this.name = name\n    this.db = Database.open(player, `option-manager:${name}`)\n    this.player = player\n  }\n\n  items: Record<string, OptionItemSelection<any> | OptionItemRange> = {}\n  reload = false\n\n  addItem(\n    opts: { _player: Player } & (IOptionItemRange | IOptionItemSelection<any>)\n  ) {\n    //@ts-ignore\n    if (opts.range) this.items[opts.name] = new OptionItemRange(opts)\n    //@ts-ignore\n    else if (opts.values) this.items[opts.name] = new OptionItemSelection(opts)\n\n    return this\n  }\n  async _syncToDB() {\n    const data = this.getItemValMap()\n    for (const [name, value] of Object.entries(data))\n      await this.db.set(name, value)\n\n    for (const [name] of this.db) {\n      if (!this.hasItem(name)) await this.db.delete(name)\n    }\n  }\n  async _syncFromDB() {\n    for (const [name, value] of this.db)\n      this.setItemVal(name, value, undefined, { syncFromDB: true })\n    await this._syncToDB()\n  }\n  async init() {\n    this.addItem = () => {\n      throw new Error(\"Can't add item after initialization.\")\n    }\n\n    await this._syncFromDB()\n\n    return this.getItemValMap()\n  }\n\n  _getItem(name: string) {\n    return this.items[name]\n  }\n  hasItem(name: string) {\n    return !!this.items[name]\n  }\n  setItemVal<T>(\n    name: string,\n    value: T,\n    callback: (\n      selected: T,\n      original: T,\n      map: Record<string, any>\n    ) => void = () => {},\n    { syncFromDB = false } = {}\n  ) {\n    const item = this._getItem(name)\n    if (item) {\n      //@ts-ignore\n      const result = item.select(value)\n      if (result) {\n        if (!syncFromDB && item.reload) this.reload = true\n        callback(item.selected, item.original, this.getItemValMap())\n      }\n    }\n    return this\n  }\n  getItemVal(name: string) {\n    const item = this._getItem(name)\n    if (item) return item.selected\n  }\n  getItemValMap() {\n    // TODO: use map\n    const result: Record<string, any> = {}\n    for (const [name] of Object.entries(this.items))\n      result[name] = this.getItemVal(name)\n    return result\n  }\n  async done(parentDialog?: Dialog<any>) {\n    const handleDone = async ({ reply = true } = {}) => {\n      await this._syncToDB()\n      if (reply) this.player.sendMessage(\"设置选项修改成功\")\n    }\n    if (this.reload) {\n      this.reload = false\n      await Dialog.confirm({\n        body: '你选择的项目更改后需要刷新脚本，请手动运行 \"/reload\" 命令。\\n\\n您也可以取消您的更改',\n        target: this.player,\n        onConfirm: async () => {\n          await handleDone({ reply: false })\n          // await Commands.asyncRun(\"reload\")\n        },\n        onCancel: async () => {\n          await this._syncFromDB()\n          await this.showDialog(parentDialog)\n        },\n      })\n    } else await handleDone()\n  }\n  async showDialog(parentDialog?: Dialog<any>) {\n    const form = new ModalFormData().title(`${this.name} 选项`)\n    const nameMap: Array<{\n      name: string\n      valuesMap:\n        | Map<boolean, boolean>\n        | Map<number, string | number | boolean>\n        | Map<number, number>\n    }> = []\n\n    for (const [, item] of Object.entries(this.items)) {\n      if (item instanceof OptionItemSelection) {\n        const { name, description, values, selected } = item\n\n        if (values.size === 2 && values.get(true) && values.get(false)) {\n          const valuesMap = new Map()\n          for (const [e] of values) valuesMap.set(e, e)\n          nameMap.push({ name, valuesMap })\n\n          form.toggle(description, selected)\n        } else {\n          const valueArray = [...values]\n\n          const valuesMap = new Map()\n          for (let i = 0; i < valueArray.length; i++) {\n            const [e] = valueArray[i]\n            valuesMap.set(i, e)\n          }\n          nameMap.push({ name, valuesMap })\n\n          form.dropdown(\n            description,\n            valueArray.map((e) => e[1]),\n            valueArray.map((e) => e[0]).findIndex((e) => e === selected)\n          )\n        }\n      } else if (item instanceof OptionItemRange) {\n        const { name, description, range, selected } = item\n\n        const valuesMap = new Map()\n        for (const i of range) valuesMap.set(i, i)\n        nameMap.push({ name, valuesMap })\n\n        form.slider(description, range.min, range.max, range.step, selected)\n      }\n    }\n\n    const dialog = new Dialog<void>({\n      dialog: form,\n      onClose: async () => {\n        if (parentDialog) await parentDialog.show(this.player)\n      },\n      onSubmit: async (result) => {\n        for (let nameIndex = 0; nameIndex < result.length; nameIndex++) {\n          const valueIndex = result[nameIndex] as number\n\n          const { name, valuesMap } = nameMap[nameIndex]\n          // FIXME: as never?\n          const value = valuesMap.get(valueIndex as never)\n          this.setItemVal(name, value)\n        }\n        await this.done(parentDialog)\n      },\n    })\n    await dialog.show(this.player)\n  }\n}\n","import type { Player } from \"@minecraft/server\"\n\nimport { waitForFirstPlayerInitialSpawn } from \"../util/game\"\nimport type { IOptionItemRange } from \"./OptionItemRange.class\"\nimport type { IOptionItemSelection } from \"./OptionItemSelection.class\"\nimport { PlayerOption } from \"./PlayerOption.class\"\n\nexport class OptionNamespace {\n  name: string\n\n  constructor(name: string) {\n    this.name = name\n  }\n\n  players = new Map<Player, PlayerOption>()\n  _items = new Set<IOptionItemSelection<any> | IOptionItemRange>()\n\n  addItem(opts: IOptionItemSelection<any> | IOptionItemRange) {\n    this._items.add(opts)\n    return this\n  }\n  applyPlayer(player: Player) {\n    if (this.players.has(player)) return this.players.get(player)\n    const playerOpt = new PlayerOption(player, this.name)\n    for (const item of this._items) {\n      //@ts-ignore\n      item._player = player\n      //@ts-ignore\n      playerOpt.addItem(item)\n    }\n\n    this.players.set(player, playerOpt)\n    return playerOpt\n  }\n  async applyMainPlayer() {\n    const player = await waitForFirstPlayerInitialSpawn()\n    return this.applyPlayer(player)\n  }\n  async init() {\n    const valueMap = new Map<Player, any>()\n    for (const [player, playerOpt] of this.players) {\n      const result = await playerOpt.init()\n      valueMap.set(player, result)\n    }\n    this.applyPlayer = () => {\n      throw new Error(\"Can't apply player after initialization.\")\n    }\n    return valueMap\n  }\n  getPlayer(player: Player) {\n    const playerOption = this.players.get(player)\n\n    if (!playerOption) throw new Error(\"Can't get player  options.\")\n\n    return playerOption\n  }\n}\n","import type { Player } from \"@minecraft/server\"\nimport { ActionFormData } from \"@minecraft/server-ui\"\nimport { Dialog } from \"../dialog/index\"\nimport { OptionNamespace } from \"./OptionNamespace.class\"\n\nexport class OptionManager {\n  namespaces = new Map<string, OptionNamespace>()\n\n  registerNamesapace(name: string) {\n    const namespaces = new OptionNamespace(name)\n    this.namespaces.set(name, namespaces)\n    return namespaces\n  }\n  getNamesapace(name: string) {\n    const namespace = this.namespaces.get(name)\n\n    if (!namespace) throw new Error(\"Can't get namespace.\")\n\n    return namespace\n  }\n  async showDialog(player: Player) {\n    const form = new ActionFormData()\n      .title(\"设置选项\")\n      .body(\"选择要设置的模块：\")\n    const nameMap: string[] = []\n    for (const [name] of this.namespaces) {\n      nameMap.push(name)\n      form.button(name) // TODO: name -> desc\n    }\n\n    const dialog = new Dialog({\n      dialog: form,\n      onSelect: async (selection) => {\n        const name = nameMap[selection]\n        await this.getNamesapace(name).getPlayer(player).showDialog(dialog)\n      },\n    })\n    await dialog.show(player)\n  }\n}\n","import { OptionManager } from \"./OptionManager.class\"\n\nexport const optionManager = new OptionManager()\n","import type { Player } from \"@minecraft/server\"\n\nimport { Commands } from \"../commands/index\"\nimport { asyncRun, errorHandler } from \"../util/game\"\nimport { optionManager } from \"./manager\"\n\nCommands.register(\"!\", \"option\", async (argv, sender) => {\n  switch (argv[1]) {\n    case \"dialog\":\n    case \"-d\":\n    case undefined: {\n      // TODO: argv[2] -> namespace\n      await asyncRun(() => optionManager.showDialog(sender as Player))\n      break\n    }\n    default: {\n      throw errorHandler(\"未知的子命令\", sender as Player)\n    }\n  }\n})\n","import { type EntityDieAfterEvent, type Player, world } from \"@minecraft/server\"\n\nimport { optionManager } from \"@/lib/option-manager/index\"\n\nimport { Handler } from \"./Handler.class\"\n\nasync function afterEntityDieCallback(event: EntityDieAfterEvent) {\n  const player = event.deadEntity as Player\n  const handler = new Handler(player)\n\n  await handler.set({\n    name: \"__death__\",\n    option: {\n      disposable: true,\n      force: true,\n    },\n  })\n}\n\nexport const option = optionManager\n  .registerNamesapace(\"tpx\")\n  .addItem({\n    name: \"auto_back_point\",\n    description: \"允许使用 tpx 传送时自动添加返回点\",\n    values: [[true], [false]],\n    defaultValue: true,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\"tpx:auto_back_point -> from\", original, \"to\", selected),\n    },\n  })\n  .addItem({\n    name: \"back_after_death\",\n    description: \"允许死亡时自动添加死亡点\",\n    values: [[true], [false]],\n    defaultValue: true,\n    events: {\n      changed: (selected, original) => {\n        console.warn(\"tpx:back_after_death -> from\", original, \"to\", selected)\n\n        if (selected)\n          world.afterEvents.entityDie.subscribe(afterEntityDieCallback, {\n            entityTypes: [\"minecraft:player\"],\n          })\n        else world.afterEvents.entityDie.unsubscribe(afterEntityDieCallback)\n      },\n    },\n  })\n  .addItem({\n    name: \"back_cmd\",\n    description: \"允许使用独立的 back 命令\",\n    values: [[true], [false]],\n    defaultValue: false,\n    reload: true,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\"tpx:back_cmd -> from\", original, \"to\", selected),\n    },\n  })\n  .addItem({\n    name: \"home_cmd\",\n    description: \"允许使用独立的 home 命令\",\n    values: [[true], [false]],\n    defaultValue: false,\n    reload: true,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\"tpx:home_cmd -> from\", original, \"to\", selected),\n    },\n  })\n","import type { Player } from \"@minecraft/server\"\n\nimport type { PlayerOption } from \"@/lib/option-manager/PlayerOption.class\"\nimport { asyncRun } from \"@/util/game\"\n\nimport { ALL_PLAYER_DATABASES, type TpxDB } from \"./db\"\nimport { option } from \"./option\"\n\nexport class Handler {\n  player: Player\n  playerOption: PlayerOption\n  playerDB: TpxDB\n\n  constructor(player: Player) {\n    this.player = player\n    this.playerOption = option.getPlayer(player)\n\n    const playerDB = ALL_PLAYER_DATABASES.get(player)\n\n    if (!playerDB) throw new Error(\"Can't get player database.\")\n\n    this.playerDB = playerDB\n  }\n\n  async set({\n    name = \"default\",\n    option = {},\n  }: {\n    name?: string\n    option?: {\n      disposable?: boolean\n      force?: boolean\n    }\n  }) {\n    const info = await this.playerDB.set(Object.assign({ name }, option))\n    if (name !== \"__back__\" && name !== \"__death__\") return { info }\n  }\n  async remove({ name = \"default\" }) {\n    return await this.playerDB.remove(name)\n  }\n  async teleport({ name = \"default\" }) {\n    const info = await this.playerDB.get(name)\n    if (info) {\n      if (\n        this.playerOption.getItemVal(\"auto_back_point\") &&\n        name !== \"__death__\"\n      ) {\n        await this.set({\n          name: \"__back__\",\n          option: {\n            disposable: true,\n            force: true,\n          },\n        })\n      }\n      await asyncRun(() =>\n        this.player.teleport(info.location, {\n          dimension: info.dimension,\n          checkForBlocks: false,\n          keepVelocity: false,\n        })\n      )\n      return { info }\n    }\n  }\n  async tryTeleport({\n    names = [],\n  }: {\n    names: string[]\n  }) {\n    for (const name of names) {\n      const result = await this.teleport({ name })\n      if (result) return result\n    }\n  }\n  list() {\n    const datas = this.playerDB.getAll().map(({ text }) => text)\n    if (datas.length) return { msg: datas }\n  }\n}\n","import { Player } from \"@minecraft/server\"\n\nimport type { CommandTarget } from \"@/lib/commands/Commands.class\"\nimport { Commands } from \"@/lib/commands/index\"\nimport { asyncRun, errorHandler } from \"@/util/game\"\n\nimport { Handler } from \"./Handler.class\"\nimport { option } from \"./option\"\n\nconst SUB_COMMANDS = [\n  \"set\",\n  \"-s\",\n  \"remove\",\n  \"rm\",\n  \"-r\",\n  \"back\",\n  \"bk\",\n  \"-b\",\n  \"list\",\n  \"ls\",\n  \"-l\",\n  \"help\",\n  \"-h\",\n  \"option\",\n  \"opt\",\n  \"-o\",\n]\n\nexport async function tpxCommand(argv: string[], sender: CommandTarget) {\n  if (sender instanceof Player) {\n    const name = argv[2] ?? \"default\"\n    const handler = new Handler(sender)\n\n    switch (argv[1]) {\n      case \"set\":\n      case \"-s\": {\n        if (SUB_COMMANDS.includes(name) || name === \"__back__\")\n          throw errorHandler(`添加失败：不能使用 ${name} 作为名称`, sender)\n\n        const result = await handler.set({\n          name,\n          option: {\n            disposable:\n              argv[3] === \"true\"\n                ? true\n                : argv[3] === \"false\"\n                  ? false\n                  : undefined,\n          },\n        })\n\n        if (result) sender.sendMessage(`成功设置 ${name} 在 ${result.info}`)\n\n        break\n      }\n      case \"remove\":\n      case \"rm\":\n      case \"-r\": {\n        const result = await handler.remove({ name })\n\n        if (result === true) sender.sendMessage(`成功删除 ${name}`)\n        else if (result === false)\n          throw errorHandler(`删除失败：未找到 ${name}`, sender)\n\n        break\n      }\n      case \"back\":\n      case \"bk\":\n      case \"-b\": {\n        const result = await handler.tryTeleport({\n          names: [\"__death__\", \"__back__\"],\n        })\n\n        if (result) sender.sendMessage(`已返回到 ${result.info}`)\n        else throw errorHandler(\"传送失败：未找到返回点\", sender)\n\n        break\n      }\n      case \"list\":\n      case \"ls\":\n      case \"-l\": {\n        const result = handler.list()\n\n        if (result) {\n          result.msg.unshift(\"您的传送点有：\")\n          sender.sendMessage(result.msg.join(\"\\n- \"))\n        } else sender.sendMessage(\"您目前没有传送点\")\n\n        break\n      }\n      case \"help\":\n      case \"-h\": {\n        // TODO command-parser\n        sender.sendMessage(\"制作中...\")\n        break\n      }\n      case \"option\":\n      case \"opt\":\n      case \"-o\": {\n        await asyncRun(() => option.getPlayer(sender).showDialog())\n        break\n      }\n      default: {\n        const result = await handler.teleport({ name: argv[1] })\n\n        if (result) sender.sendMessage(`已传送到 ${result.info}`)\n        else throw errorHandler(`传送失败：未找到传送点 ${argv[1]}`, sender)\n      }\n    }\n  }\n\n  throw new Error(\"Target must be a player.\")\n}\n\nexport async function backCommand(_: string[], sender: CommandTarget) {\n  if (sender instanceof Player) {\n    if (option.getPlayer(sender).getItemVal(\"back_cmd\"))\n      await Commands.asyncRun(\"!tpx back\", sender)\n    else sender.sendMessage(\"您未启用该命令\")\n  }\n\n  throw new Error(\"Target must be a player.\")\n}\n\nexport async function homeCommand(argv: string[], sender: CommandTarget) {\n  if (sender instanceof Player) {\n    if (option.getPlayer(sender).getItemVal(\"home_cmd\")) {\n      switch (argv[1]) {\n        case \"set\": {\n          await Commands.asyncRun(\"!tpx set __home__\", sender)\n          break\n        }\n        default: {\n          await Commands.asyncRun(\"!tpx __home__\", sender)\n        }\n      }\n    } else sender.sendMessage(\"您未启用该命令\")\n  }\n\n  throw new Error(\"Target must be a player.\")\n}\n","import { world } from \"@minecraft/server\"\n\nimport { BetterConsole } from \"@/lib/BetterConsole.class\"\nimport { Commands } from \"@/lib/commands/index\"\n\nimport { backCommand, homeCommand, tpxCommand } from \"./command\"\nimport { TpxDB } from \"./db\"\nimport { option } from \"./option\"\n\noption\n  .applyMainPlayer()\n  .then(() => {\n    for (const player of world.getAllPlayers()) {\n      option.applyPlayer(player)\n    }\n  })\n  .then(() => option.init())\n  .then((optMap) => {\n    // 将所有玩家的数据库实例化并储存在 ALL_PLAYER_DATABASES 中\n    // 同时避免在 beforeEvent 中构建导致的 read-only mode 问题\n    for (const player of optMap.keys()) TpxDB.init(player)\n\n    Commands.register(\"!\", \"tpx\", tpxCommand)\n\n    const values = [...optMap.values()]\n    if (values.some(({ back_cmd }) => back_cmd))\n      Commands.register(\"!\", \"back\", backCommand)\n    if (values.some(({ home_cmd }) => home_cmd))\n      Commands.register(\"!\", \"home\", homeCommand)\n  })\n  .catch(BetterConsole.error)\n"],"names":["BetterConsole","error","err","console","stack","overworld","world","getDimension","MinecraftDimensionTypes","CUSTOM_COMMAND_SET","Set","Commands","run","commandString","target","runCommand","asyncRun","customCommands","filter","regex","test","map","e","runner","length","runCommandAsync","register","prefix","command","callback","startsWith","Error","RegExp","argv","split","trim","add","beforeEvents","chatSend","subscribe","event","message","cancel","sender","catch","fn","Promise","resolve","reject","system","errorHandler","errText","sendMessage","toString","waitForFirstPlayerInitialSpawn","players","getAllPlayers","afterEvents","playerSpawn","initialSpawn","player","unsubscribe","getOrAddObjective","id","name","objective","scoreboard","getObjective","addObjective","removeMinecraftNamespace","identifier","replace","base64map","crypt","rotl","n","b","rotr","endian","constructor","Number","i","randomBytes","bytes","push","Math","floor","random","bytesToWords","words","wordsToBytes","bytesToHex","hex","join","hexToBytes","c","parseInt","substr","bytesToBase64","base64","triplet","j","charAt","base64ToBytes","imod4","indexOf","pow","module","charenc","utf8","stringToBytes","str","bin","unescape","encodeURIComponent","bytesToString","decodeURIComponent","escape","charCodeAt","String","fromCharCode","obj","isBuffer","isSlowBuffer","_isBuffer","readFloatLE","slice","require","md5","options","encoding","Array","prototype","call","isArray","Uint8Array","m","l","a","d","FF","_ff","GG","_gg","HH","_hh","II","_ii","aa","bb","cc","dd","x","s","t","_blocksize","_digestsize","undefined","digestbytes","asBytes","asString","safeEval","code","context","Function","Object","keys","values","serialize","from","Map","entries","key","value","JSON","stringify","deserialize","parse","isAsyncFunc","func","ALL_DATABASES","Database","open","dbName","_syncDataFromScoreboard","store","clear","participant","getParticipants","data","displayName","set","has","delete","get","removeParticipant","replaceAll","RangeError","setScore","getAll","output","Symbol","iterator","Dialog","confirm","title","body","onCancel","onConfirm","form","dialog","MessageFormData","button1","button2","onClose","onSelectButton1","onSelectButton2","show","response","cancelationReason","FormCancelationReason","UserBusy","canceled","UserClosed","ModalFormResponse","formValues","onSubmit","MessageFormResponse","selection","ActionFormResponse","onSelect","round","equals","epsilon","abs","max","range","to","step","VectorN","y","z","w","create","vector","vectorStr","toPrimitive","toArray","hint","axes","dimensions","index","callbackfn","VectorNUtils","clone","_assertDimensions","val","subtract","multiply","divide","scale","negate","inverse","exchange","axis1","axis2","n0","n1","exactEquals","every","vectors","maxAxes","reduce","acc","forEach","fill","NEGATIVE_INFINITY","min","minAxes","POSITIVE_INFINITY","ceil","maxMagnitude","prev","curr","magnitude","minMagnitude","sqrt","squaredMagnitude","sum","distance","squaredDistance","diff","dot","normalize","angle","cosOmega","acos","lerp","slerp","omega","sinOmega","sin","EPSILON","ratioA","ratioB","bezier","points","newPoints","Vector3Utils","Vector3","cross","normalized","floored","ceiled","rounded","absoluted","copy","v","distanceTo","squaredDistanceTo","Location","centerCorrected","isNearTo","offset","LocationInfo","textify","location","dimension","Dimension","ALL_PLAYER_DATABASES","TpxDB","init","db","disposable","force","info","handleSet","remove","text","EventEmitter","on","eventName","listener","_eventName","_events","once","_listener","args","removeListener","newListeners","emit","asyncEmit","addListener","off","NumberRange","array","includes","OptionItemRange","select","selected","_includes","original","events","_player","description","defaultValue","reload","OptionItemSelection","hasVal","size","PlayerOption","addItem","opts","items","_syncToDB","getItemValMap","hasItem","_syncFromDB","setItemVal","syncFromDB","_getItem","item","result","getItemVal","done","parentDialog","handleDone","reply","showDialog","ModalFormData","nameMap","valuesMap","toggle","valueArray","dropdown","findIndex","slider","nameIndex","valueIndex","OptionNamespace","_items","applyPlayer","playerOpt","applyMainPlayer","valueMap","getPlayer","playerOption","OptionManager","registerNamesapace","namespaces","getNamesapace","namespace","ActionFormData","button","optionManager","afterEntityDieCallback","deadEntity","handler","Handler","option","changed","warn","entityDie","entityTypes","playerDB","assign","teleport","checkForBlocks","keepVelocity","tryTeleport","names","list","datas","msg","SUB_COMMANDS","tpxCommand","Player","unshift","backCommand","_","homeCommand","then","optMap","some","back_cmd","home_cmd"],"mappings":";;;;;;;;;;AAAO,MAAMA,aAAAA,CAAAA;IACX,OAAOC,KAAAA,CAAMC,GAAU,EAAE;QACvBC,OAAQF,CAAAA,KAAK,CAAC,CAAC,EAAEC,GAAAA,CAAI,EAAE,EAAEA,GAAAA,CAAIE,KAAK,CAAC,CAAC,CAAA,CAAA;AACtC,KAAA;AACF;;ACYA,MAAMC,SAAYC,GAAAA,KAAAA,CAAMC,YAAY,CAACC,wBAAwBH,SAAS,CAAA,CAAA;AAEtE,MAAMI,qBAAqB,IAAIC,GAAAA,EAAAA,CAAAA;AAExB,MAAMC,QAAAA,CAAAA;AACX,IAAA,OAAOC,GAAIC,CAAAA,aAAqB,EAAEC,MAAAA,GAAwBT,SAAS,EAAE;QACnE,OAAOS,MAAAA,CAAOC,UAAU,CAACF,aAAAA,CAAAA,CAAAA;AAC3B,KAAA;AACA,IAAA,aAAaG,QACXH,CAAAA,aAAqB,EACrBC,MAAAA,GAAwBT,SAAS,EACjC;AACA,QAAA,MAAMY,cAAiB,GAAA;AAAIR,YAAAA,GAAAA,kBAAAA;AAAmB,SAAA,CAC3CS,MAAM,CAAC,CAAC,EAAEC,KAAK,EAAE,GAAKA,KAAAA,CAAMC,IAAI,CAACP,gBACjCQ,GAAG,CAAC,CAACC,CAAAA,GAAMA,EAAEC,MAAM,CAAA,CAAA;QACtB,IAAIN,cAAAA,CAAeO,MAAM,EAAE;YACzB,KAAK,MAAMD,UAAUN,cAAgB,CAAA;AACnC,gBAAA,MAAMM,OAAOV,aAAeC,EAAAA,MAAAA,CAAAA,CAAAA;AAC9B,aAAA;AACF,SAAA,MAAO,OAAO,MAAMA,MAAOW,CAAAA,eAAe,CAACZ,aAAAA,CAAAA,CAAAA;AAC7C,KAAA;AACA,IAAA,OAAOa,SACLC,MAAc,EACdC,OAAe,EACfC,QAAkE,EAClE;AACA,QAAA,IAAIF,OAAOG,UAAU,CAAC,GACpB,CAAA,EAAA,MAAM,IAAIC,KAAM,CAAA,oCAAA,CAAA,CAAA;QAElB,MAAMZ,KAAAA,GAAQ,IAAIa,MAAAA,CAAO,CAAC,CAAC,EAAEL,MAAO,CAAA,EAAEC,OAAQ,CAAA,KAAK,CAAC,CAAA,CAAA;QACpD,MAAML,MAAAA,GAAkC,OAAOV,aAAeC,EAAAA,MAAAA,GAAAA;AAC5D,YAAA,MAAMmB,IAAOpB,GAAAA,aAAAA,CACVqB,KAAK,CAAC,+BACNhB,CAAAA,CAAAA,MAAM,CAAC,CAACI,CAAMA,GAAAA,CAAAA,CAAEa,IAAI,EAAA,CAAGX,MAAM,GAAG,CAAA,CAAA,CAAA;AACnC,YAAA,MAAMK,SAASI,IAAMnB,EAAAA,MAAAA,CAAAA,CAAAA;AACvB,SAAA,CAAA;AACAL,QAAAA,kBAAAA,CAAmB2B,GAAG,CAAC;AAAEjB,YAAAA,KAAAA;AAAOI,YAAAA,MAAAA;AAAO,SAAA,CAAA,CAAA;AAEvCjB,QAAAA,KAAAA,CAAM+B,YAAY,CAACC,QAAQ,CAACC,SAAS,CAAC,CAACC,KAAAA,GAAAA;AACrC,YAAA,IAAIrB,KAAMC,CAAAA,IAAI,CAACoB,KAAAA,CAAMC,OAAO,CAAG,EAAA;AAC7BD,gBAAAA,KAAAA,CAAME,MAAM,GAAG,IAAA,CAAA;gBAEfnB,MAAOiB,CAAAA,KAAAA,CAAMC,OAAO,EAAED,KAAAA,CAAMG,MAAM,CAAEC,CAAAA,KAAK,CAAC5C,aAAAA,CAAcC,KAAK,CAAA,CAAA;AAC/D,aAAA;AACF,SAAA,CAAA,CAAA;AACF,KAAA;AACF;;ACzDO,SAASe,SAAY6B,EAAW,EAAA;IACrC,OAAO,IAAIC,OAAQ,CAAA,CAACC,OAASC,EAAAA,MAAAA,GAAAA;AAC3BC,QAAAA,MAAAA,CAAOrC,GAAG,CAAC,IAAA;YACT,IAAI;gBACFmC,OAAQF,CAAAA,EAAAA,EAAAA,CAAAA,CAAAA;AACV,aAAA,CAAE,OAAO3C,GAAK,EAAA;gBACZ8C,MAAO9C,CAAAA,GAAAA,CAAAA,CAAAA;AACT,aAAA;AACF,SAAA,CAAA,CAAA;AACF,KAAA,CAAA,CAAA;AACF,CAAA;AAEO,SAASgD,YAAAA,CAAaC,OAAe,EAAErC,MAAc,EAAA;IAC1D,MAAMZ,GAAAA,GAAM,IAAI6B,KAAMoB,CAAAA,OAAAA,CAAAA,CAAAA;IACtBrC,MAAOsC,CAAAA,WAAW,CAAClD,GAAAA,CAAImD,QAAQ,EAAA,CAAA,CAAA;IAC/B,OAAOnD,GAAAA,CAAAA;AACT,CAAA;AAEO,SAASoD,8BAAAA,GAAAA;IACd,MAAMC,OAAAA,GAAUjD,MAAMkD,aAAa,EAAA,CAAA;IACnC,IAAID,OAAAA,CAAQ/B,MAAM,EAAE,OAAOsB,QAAQC,OAAO,CAACQ,OAAO,CAAC,CAAE,CAAA,CAAA,CAAA;IAErD,OAAO,IAAIT,QAAQ,CAACC,OAAAA,GAAAA;QAClB,MAAMlB,QAAAA,GAAWvB,MAAMmD,WAAW,CAACC,WAAW,CAACnB,SAAS,CAAC,CAACC,KAAAA,GAAAA;AACxD,YAAA,IAAIA,KAAMmB,CAAAA,YAAY,EAAEZ,OAAAA,CAAQP,MAAMoB,MAAM,CAAA,CAAA;AAC5CtD,YAAAA,KAAAA,CAAMmD,WAAW,CAACC,WAAW,CAACG,WAAW,CAAChC,QAAAA,CAAAA,CAAAA;AAC5C,SAAA,CAAA,CAAA;AACF,KAAA,CAAA,CAAA;AACF,CAAA;AAEO,SAASiC,iBAAAA,CAAkBC,EAAU,EAAEC,IAAa,EAAA;AACzD,IAAA,MAAMC,SAAY3D,GAAAA,KAAAA,CAAM4D,UAAU,CAACC,YAAY,CAACJ,EAAAA,CAAAA,CAAAA;AAEhD,IAAA,IAAI,CAACE,SAAAA,IAAa,CAACD,IAAAA,EAAM,MAAM,IAAIjC,KAAM,CAAA,CAAC,yBAAyB,EAAEgC,EAAG,CAAA,EAAE,CAAC,CAAA,CAAA;IAC3E,IAAI,CAACE,WAAW,OAAO3D,KAAAA,CAAM4D,UAAU,CAACE,YAAY,CAACL,EAAIC,EAAAA,IAAAA,CAAAA,CAAAA;IAEzD,OAAOC,SAAAA,CAAAA;AACT,CAAA;AAEO,SAASI,yBAAyBC,UAAkB,EAAA;IACzD,OAAOA,UAAAA,CAAWC,OAAO,CAAC,cAAgB,EAAA,EAAA,CAAA,CAAA;AAC5C;;;;;;;;;;AC9CC,CAAA,WAAA;IACC,IAAIC,SAAAA,GACE,oEAENC,OAAQ,GAAA;;QAENC,IAAM,EAAA,SAASC,CAAC,EAAEC,CAAC,EAAA;AACjB,YAAA,OAAO,CAACD,IAAKC,CAAMD,GAAAA,CAAAA,KAAO,EAAKC,GAAAA,CAAAA,CAAAA;AACjC,SAAA;;QAGAC,IAAM,EAAA,SAASF,CAAC,EAAEC,CAAC,EAAA;AACjB,YAAA,OAAO,CAACD,IAAM,EAAKC,GAAAA,CAAAA,GAAOD,CAAMC,KAAAA,CAAAA,CAAAA;AAClC,SAAA;;AAGAE,QAAAA,MAAAA,EAAQ,SAASH,CAAC,EAAA;;YAEhB,IAAIA,CAAAA,CAAEI,WAAW,IAAIC,MAAQ,EAAA;gBAC3B,OAAOP,OAAAA,CAAMC,IAAI,CAACC,CAAG,EAAA,CAAA,CAAA,GAAK,aAAaF,OAAMC,CAAAA,IAAI,CAACC,CAAAA,EAAG,EAAM,CAAA,GAAA,UAAA,CAAA;AAC7D,aAAA;;AAGA,YAAA,IAAK,IAAIM,CAAI,GAAA,CAAA,EAAGA,CAAIN,GAAAA,CAAAA,CAAEnD,MAAM,EAAEyD,CAAAA,EAAAA,CAC5BN,CAAC,CAACM,EAAE,GAAGR,OAAAA,CAAMK,MAAM,CAACH,CAAC,CAACM,CAAE,CAAA,CAAA,CAAA;YAC1B,OAAON,CAAAA,CAAAA;AACT,SAAA;;AAGAO,QAAAA,WAAAA,EAAa,SAASP,CAAC,EAAA;AACrB,YAAA,IAAK,IAAIQ,KAAAA,GAAQ,EAAE,EAAER,IAAI,CAAGA,EAAAA,CAAAA,EAAAA,CAC1BQ,KAAMC,CAAAA,IAAI,CAACC,IAAKC,CAAAA,KAAK,CAACD,IAAAA,CAAKE,MAAM,EAAK,GAAA,GAAA,CAAA,CAAA,CAAA;YACxC,OAAOJ,KAAAA,CAAAA;AACT,SAAA;;AAGAK,QAAAA,YAAAA,EAAc,SAASL,KAAK,EAAA;YAC1B,IAAK,IAAIM,KAAQ,GAAA,EAAE,EAAER,CAAAA,GAAI,GAAGL,CAAI,GAAA,CAAA,EAAGK,CAAIE,GAAAA,KAAAA,CAAM3D,MAAM,EAAEyD,KAAKL,CAAK,IAAA,CAAA,CAC7Da,KAAK,CAACb,CAAM,KAAA,CAAA,CAAE,IAAIO,KAAK,CAACF,CAAAA,CAAE,IAAK,EAAA,GAAKL,CAAI,GAAA,EAAA,CAAA;YAC1C,OAAOa,KAAAA,CAAAA;AACT,SAAA;;AAGAC,QAAAA,YAAAA,EAAc,SAASD,KAAK,EAAA;YAC1B,IAAK,IAAIN,KAAQ,GAAA,EAAE,EAAEP,CAAAA,GAAI,GAAGA,CAAIa,GAAAA,KAAAA,CAAMjE,MAAM,GAAG,EAAIoD,EAAAA,CAAAA,IAAK,EACtDO,KAAMC,CAAAA,IAAI,CAAEK,KAAK,CAACb,MAAM,CAAE,CAAA,KAAM,EAAKA,GAAAA,CAAAA,GAAI,EAAO,GAAA,IAAA,CAAA,CAAA;YAClD,OAAOO,KAAAA,CAAAA;AACT,SAAA;;AAGAQ,QAAAA,UAAAA,EAAY,SAASR,KAAK,EAAA;YACxB,IAAK,IAAIS,GAAM,GAAA,EAAE,EAAEX,CAAAA,GAAI,GAAGA,CAAIE,GAAAA,KAAAA,CAAM3D,MAAM,EAAEyD,CAAK,EAAA,CAAA;gBAC/CW,GAAIR,CAAAA,IAAI,CAAED,CAAAA,KAAK,CAACF,CAAAA,CAAE,KAAK,CAAA,EAAG5B,QAAQ,CAAC,EAAA,CAAA,CAAA,CAAA;gBACnCuC,GAAIR,CAAAA,IAAI,CAAED,CAAAA,KAAK,CAACF,CAAAA,CAAE,GAAG,GAAE,EAAG5B,QAAQ,CAAC,EAAA,CAAA,CAAA,CAAA;AACrC,aAAA;YACA,OAAOuC,GAAAA,CAAIC,IAAI,CAAC,EAAA,CAAA,CAAA;AAClB,SAAA;;AAGAC,QAAAA,UAAAA,EAAY,SAASF,GAAG,EAAA;YACtB,IAAK,IAAIT,QAAQ,EAAE,EAAEY,IAAI,CAAGA,EAAAA,CAAAA,GAAIH,IAAIpE,MAAM,EAAEuE,KAAK,CAC/CZ,CAAAA,KAAAA,CAAMC,IAAI,CAACY,QAAAA,CAASJ,IAAIK,MAAM,CAACF,GAAG,CAAI,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA;YACxC,OAAOZ,KAAAA,CAAAA;AACT,SAAA;;AAGAe,QAAAA,aAAAA,EAAe,SAASf,KAAK,EAAA;YAC3B,IAAK,IAAIgB,MAAS,GAAA,EAAE,EAAElB,CAAAA,GAAI,CAAGA,EAAAA,CAAAA,GAAIE,KAAM3D,CAAAA,MAAM,EAAEyD,CAAAA,IAAK,CAAG,CAAA;AACrD,gBAAA,IAAImB,UAAU,KAAM,CAACnB,CAAAA,CAAE,IAAI,EAAOE,GAAAA,KAAK,CAACF,CAAAA,GAAI,EAAE,IAAI,CAAA,GAAKE,KAAK,CAACF,IAAI,CAAE,CAAA,CAAA;gBACnE,IAAK,IAAIoB,CAAI,GAAA,CAAA,EAAGA,CAAI,GAAA,CAAA,EAAGA,CACrB,EAAA,CAAA,IAAIpB,CAAI,GAAA,CAAA,GAAIoB,CAAI,GAAA,CAAA,IAAKlB,KAAM3D,CAAAA,MAAM,GAAG,CAAA,EAClC2E,MAAOf,CAAAA,IAAI,CAACZ,SAAAA,CAAU8B,MAAM,CAAC,OAACF,KAAY,CAAK,IAAA,CAAIC,GAAAA,CAAAA,CAAM,GAAA,IAAA,CAAA,CAAA,CAAA;AAEzDF,qBAAAA,MAAAA,CAAOf,IAAI,CAAC,GAAA,CAAA,CAAA;AAClB,aAAA;YACA,OAAOe,MAAAA,CAAON,IAAI,CAAC,EAAA,CAAA,CAAA;AACrB,SAAA;;AAGAU,QAAAA,aAAAA,EAAe,SAASJ,MAAM,EAAA;;YAE5BA,MAASA,GAAAA,MAAAA,CAAO5B,OAAO,CAAC,gBAAkB,EAAA,EAAA,CAAA,CAAA;AAE1C,YAAA,IAAK,IAAIY,KAAAA,GAAQ,EAAE,EAAEF,IAAI,CAAGuB,EAAAA,KAAAA,GAAQ,CAAGvB,EAAAA,CAAAA,GAAIkB,OAAO3E,MAAM,EACpDgF,KAAQ,GAAA,EAAEvB,IAAI,CAAG,CAAA;AACnB,gBAAA,IAAIuB,SAAS,CAAG,EAAA,SAAA;AAChBrB,gBAAAA,KAAAA,CAAMC,IAAI,CAAC,CAAEZ,UAAUiC,OAAO,CAACN,MAAOG,CAAAA,MAAM,CAACrB,CAAAA,GAAI,CAC1CI,CAAAA,CAAAA,GAAAA,IAAAA,CAAKqB,GAAG,CAAC,CAAA,EAAG,CAAC,CAAA,GAAIF,KAAQ,GAAA,CAAA,CAAA,GAAK,CAAC,KAAOA,QAAQ,CAC9ChC,GAAAA,SAAAA,CAAUiC,OAAO,CAACN,MAAOG,CAAAA,MAAM,CAACrB,CAAAA,CAAAA,CAAAA,KAAS,IAAIuB,KAAQ,GAAA,CAAA,CAAA,CAAA;AAC9D,aAAA;YACA,OAAOrB,KAAAA,CAAAA;AACT,SAAA;AACF,KAAA,CAAA;AAEAwB,IAAAA,KAAAA,CAAAA,OAAc,GAAGlC,OAAAA,CAAAA;AACnB,CAAA,GAAA,CAAA;;;;AC/FA,IAAImC,OAAU,GAAA;;IAEZC,IAAM,EAAA;;AAEJC,QAAAA,aAAAA,EAAe,SAASC,GAAG,EAAA;AACzB,YAAA,OAAOH,QAAQI,GAAG,CAACF,aAAa,CAACG,SAASC,kBAAmBH,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAC/D,SAAA;;AAGAI,QAAAA,aAAAA,EAAe,SAAShC,KAAK,EAAA;AAC3B,YAAA,OAAOiC,mBAAmBC,MAAOT,CAAAA,OAAAA,CAAQI,GAAG,CAACG,aAAa,CAAChC,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAC7D,SAAA;AACF,KAAA;;IAGA6B,GAAK,EAAA;;AAEHF,QAAAA,aAAAA,EAAe,SAASC,GAAG,EAAA;AACzB,YAAA,IAAK,IAAI5B,KAAQ,GAAA,EAAE,EAAEF,CAAAA,GAAI,GAAGA,CAAI8B,GAAAA,GAAAA,CAAIvF,MAAM,EAAEyD,IAC1CE,KAAMC,CAAAA,IAAI,CAAC2B,GAAIO,CAAAA,UAAU,CAACrC,CAAK,CAAA,GAAA,IAAA,CAAA,CAAA;YACjC,OAAOE,KAAAA,CAAAA;AACT,SAAA;;AAGAgC,QAAAA,aAAAA,EAAe,SAAShC,KAAK,EAAA;AAC3B,YAAA,IAAK,IAAI4B,GAAM,GAAA,EAAE,EAAE9B,CAAI,GAAA,CAAA,EAAGA,IAAIE,KAAM3D,CAAAA,MAAM,EAAEyD,CAC1C8B,EAAAA,CAAAA,GAAAA,CAAI3B,IAAI,CAACmC,MAAAA,CAAOC,YAAY,CAACrC,KAAK,CAACF,CAAE,CAAA,CAAA,CAAA,CAAA;YACvC,OAAO8B,GAAAA,CAAIlB,IAAI,CAAC,EAAA,CAAA,CAAA;AAClB,SAAA;AACF,KAAA;AACF,CAAA,CAAA;AAEAc,IAAAA,SAAc,GAAGC,OAAAA;;;;;;;;;ACzBjB;AACA;IACAD,UAAc,GAAG,SAAUc,GAAG,EAAA;IAC5B,OAAOA,GAAAA,IAAO,IAASC,KAAAA,QAASD,CAAAA,GAAAA,CAAAA,IAAQE,YAAaF,CAAAA,GAAAA,CAAAA,IAAQ,CAAC,CAACA,GAAIG,CAAAA,SAAS,CAAD,CAAA;AAC7E,CAAA,CAAA;AAEA,SAASF,SAAUD,GAAG,EAAA;AACpB,IAAA,OAAO,CAAC,CAACA,GAAAA,CAAI1C,WAAW,IAAI,OAAO0C,GAAI1C,CAAAA,WAAW,CAAC2C,QAAQ,KAAK,UAAcD,IAAAA,GAAAA,CAAI1C,WAAW,CAAC2C,QAAQ,CAACD,GAAAA,CAAAA,CAAAA;AACzG,CAAA;AAEA;AACA,SAASE,aAAcF,GAAG,EAAA;AACxB,IAAA,OAAO,OAAOA,GAAAA,CAAII,WAAW,KAAK,cAAc,OAAOJ,GAAAA,CAAIK,KAAK,KAAK,UAAcJ,IAAAA,QAAAA,CAASD,GAAIK,CAAAA,KAAK,CAAC,CAAG,EAAA,CAAA,CAAA,CAAA,CAAA;AAC3G;;ACpBC,CAAA,WAAA;AACC,IAAA,IAAIrD,QAAQsD,YAAQ,EAChBlB,IAAOkB,GAAAA,UAAmBlB,IAAI,EAC9Ba,QAAWK,GAAAA,YACXf,GAAMe,GAAAA,SAAmBf,CAAAA,GAAG;IAGhCgB,GAAM,GAAA,SAAUvF,OAAO,EAAEwF,OAAO,EAAA;;AAE9B,QAAA,IAAIxF,OAAQsC,CAAAA,WAAW,IAAIwC,MAAAA,EACzB,IAAIU,OAAAA,IAAWA,OAAQC,CAAAA,QAAQ,KAAK,QAAA,EAClCzF,OAAUuE,GAAAA,GAAAA,CAAIF,aAAa,CAACrE,OAAAA,CAAAA,CAAAA;aAE5BA,OAAUoE,GAAAA,IAAAA,CAAKC,aAAa,CAACrE,OAAAA,CAAAA,CAAAA;aAC5B,IAAIiF,QAAAA,CAASjF,OAChBA,CAAAA,EAAAA,OAAAA,GAAU0F,KAAMC,CAAAA,SAAS,CAACN,KAAK,CAACO,IAAI,CAAC5F,OAAS,EAAA,CAAA,CAAA,CAAA;aAC3C,IAAI,CAAC0F,KAAMG,CAAAA,OAAO,CAAC7F,OAAAA,CAAAA,IAAYA,OAAQsC,CAAAA,WAAW,KAAKwD,UAAAA,EAC1D9F,OAAUA,GAAAA,OAAAA,CAAQY,QAAQ,EAAA,CAAA;;AAG5B,QAAA,IAAImF,IAAI/D,KAAMe,CAAAA,YAAY,CAAC/C,OACvBgG,CAAAA,EAAAA,CAAAA,GAAIhG,QAAQjB,MAAM,GAAG,CACrBkH,EAAAA,CAAAA,GAAK,YACL9D,CAAI,GAAA,CAAC,WACLmB,CAAI,GAAA,CAAC,YACL4C,CAAK,GAAA,SAAA,CAAA;;AAGT,QAAA,IAAK,IAAI1D,CAAI,GAAA,CAAA,EAAGA,IAAIuD,CAAEhH,CAAAA,MAAM,EAAEyD,CAAK,EAAA,CAAA;AACjCuD,YAAAA,CAAC,CAACvD,CAAAA,CAAE,GAAI,CAACuD,CAAC,CAACvD,CAAE,CAAA,IAAK,CAAMuD,GAAAA,CAAC,CAACvD,CAAE,CAAA,KAAK,EAAE,IAAK,UACjC,GAAC,CAACuD,CAAC,CAACvD,CAAAA,CAAE,IAAI,EAAA,GAAOuD,CAAC,CAACvD,CAAE,CAAA,KAAM,CAAC,IAAK,UAAA,CAAA;AAC1C,SAAA;;AAGAuD,QAAAA,CAAC,CAACC,CAAAA,KAAM,CAAE,CAAA,IAAI,QAASA,CAAI,GAAA,EAAA,CAAA;QAC3BD,CAAC,CAAC,CAAC,CAAEC,GAAI,OAAQ,CAAM,IAAA,CAAA,IAAK,EAAA,CAAG,GAAGA,CAAAA,CAAAA;;AAGlC,QAAA,IAAIG,EAAKZ,GAAAA,GAAAA,CAAIa,GAAG,EACZC,KAAKd,GAAIe,CAAAA,GAAG,EACZC,EAAAA,GAAKhB,GAAIiB,CAAAA,GAAG,EACZC,EAAAA,GAAKlB,IAAImB,GAAG,CAAA;QAEhB,IAAK,IAAIlE,IAAI,CAAGA,EAAAA,CAAAA,GAAIuD,EAAEhH,MAAM,EAAEyD,KAAK,EAAI,CAAA;AAErC,YAAA,IAAImE,KAAKV,CACLW,EAAAA,EAAAA,GAAKzE,CACL0E,EAAAA,EAAAA,GAAKvD,GACLwD,EAAKZ,GAAAA,CAAAA,CAAAA;YAETD,CAAIE,GAAAA,EAAAA,CAAGF,CAAG9D,EAAAA,CAAAA,EAAGmB,CAAG4C,EAAAA,CAAAA,EAAGH,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,SAAA,CAAA,CAAA;YACjC0D,CAAIC,GAAAA,EAAAA,CAAGD,CAAGD,EAAAA,CAAAA,EAAG9D,CAAGmB,EAAAA,CAAAA,EAAGyC,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YACjCc,CAAI6C,GAAAA,EAAAA,CAAG7C,CAAG4C,EAAAA,CAAAA,EAAGD,CAAG9D,EAAAA,CAAAA,EAAG4D,CAAC,CAACvD,CAAAA,GAAG,CAAE,CAAA,EAAE,EAAK,EAAA,SAAA,CAAA,CAAA;YACjCL,CAAIgE,GAAAA,EAAAA,CAAGhE,CAAGmB,EAAAA,CAAAA,EAAG4C,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjCyD,CAAIE,GAAAA,EAAAA,CAAGF,CAAG9D,EAAAA,CAAAA,EAAGmB,CAAG4C,EAAAA,CAAAA,EAAGH,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,SAAA,CAAA,CAAA;YACjC0D,CAAIC,GAAAA,EAAAA,CAAGD,CAAGD,EAAAA,CAAAA,EAAG9D,CAAGmB,EAAAA,CAAAA,EAAGyC,CAAC,CAACvD,CAAAA,GAAG,CAAE,CAAA,EAAE,EAAK,EAAA,UAAA,CAAA,CAAA;YACjCc,CAAI6C,GAAAA,EAAAA,CAAG7C,CAAG4C,EAAAA,CAAAA,EAAGD,CAAG9D,EAAAA,CAAAA,EAAG4D,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjCL,CAAIgE,GAAAA,EAAAA,CAAGhE,CAAGmB,EAAAA,CAAAA,EAAG4C,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,QAAA,CAAA,CAAA;YACjCyD,CAAIE,GAAAA,EAAAA,CAAGF,CAAG9D,EAAAA,CAAAA,EAAGmB,CAAG4C,EAAAA,CAAAA,EAAGH,CAAC,CAACvD,CAAAA,GAAG,CAAE,CAAA,EAAG,CAAI,EAAA,UAAA,CAAA,CAAA;YACjC0D,CAAIC,GAAAA,EAAAA,CAAGD,CAAGD,EAAAA,CAAAA,EAAG9D,CAAGmB,EAAAA,CAAAA,EAAGyC,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjCc,CAAI6C,GAAAA,EAAAA,CAAG7C,CAAG4C,EAAAA,CAAAA,EAAGD,CAAG9D,EAAAA,CAAAA,EAAG4D,CAAC,CAACvD,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,KAAA,CAAA,CAAA;YACjCL,CAAIgE,GAAAA,EAAAA,CAAGhE,CAAGmB,EAAAA,CAAAA,EAAG4C,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAACvD,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjCyD,CAAIE,GAAAA,EAAAA,CAAGF,CAAG9D,EAAAA,CAAAA,EAAGmB,CAAG4C,EAAAA,CAAAA,EAAGH,CAAC,CAACvD,CAAAA,GAAE,EAAG,CAAA,EAAG,CAAI,EAAA,UAAA,CAAA,CAAA;YACjC0D,CAAIC,GAAAA,EAAAA,CAAGD,CAAGD,EAAAA,CAAAA,EAAG9D,CAAGmB,EAAAA,CAAAA,EAAGyC,CAAC,CAACvD,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,QAAA,CAAA,CAAA;YACjCc,CAAI6C,GAAAA,EAAAA,CAAG7C,CAAG4C,EAAAA,CAAAA,EAAGD,CAAG9D,EAAAA,CAAAA,EAAG4D,CAAC,CAACvD,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjCL,CAAIgE,GAAAA,EAAAA,CAAGhE,CAAGmB,EAAAA,CAAAA,EAAG4C,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAACvD,CAAAA,GAAE,EAAG,CAAA,EAAE,EAAK,EAAA,UAAA,CAAA,CAAA;YAEjCyD,CAAII,GAAAA,EAAAA,CAAGJ,CAAG9D,EAAAA,CAAAA,EAAGmB,CAAG4C,EAAAA,CAAAA,EAAGH,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,SAAA,CAAA,CAAA;YACjC0D,CAAIG,GAAAA,EAAAA,CAAGH,CAAGD,EAAAA,CAAAA,EAAG9D,CAAGmB,EAAAA,CAAAA,EAAGyC,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,UAAA,CAAA,CAAA;YACjCc,CAAI+C,GAAAA,EAAAA,CAAG/C,CAAG4C,EAAAA,CAAAA,EAAGD,CAAG9D,EAAAA,CAAAA,EAAG4D,CAAC,CAACvD,CAAAA,GAAE,EAAG,CAAA,EAAE,EAAK,EAAA,SAAA,CAAA,CAAA;YACjCL,CAAIkE,GAAAA,EAAAA,CAAGlE,CAAGmB,EAAAA,CAAAA,EAAG4C,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YACjCyD,CAAII,GAAAA,EAAAA,CAAGJ,CAAG9D,EAAAA,CAAAA,EAAGmB,CAAG4C,EAAAA,CAAAA,EAAGH,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,SAAA,CAAA,CAAA;YACjC0D,CAAIG,GAAAA,EAAAA,CAAGH,CAAGD,EAAAA,CAAAA,EAAG9D,CAAGmB,EAAAA,CAAAA,EAAGyC,CAAC,CAACvD,CAAAA,GAAE,EAAG,CAAA,EAAG,CAAI,EAAA,QAAA,CAAA,CAAA;YACjCc,CAAI+C,GAAAA,EAAAA,CAAG/C,CAAG4C,EAAAA,CAAAA,EAAGD,CAAG9D,EAAAA,CAAAA,EAAG4D,CAAC,CAACvD,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YACjCL,CAAIkE,GAAAA,EAAAA,CAAGlE,CAAGmB,EAAAA,CAAAA,EAAG4C,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YACjCyD,CAAII,GAAAA,EAAAA,CAAGJ,CAAG9D,EAAAA,CAAAA,EAAGmB,CAAG4C,EAAAA,CAAAA,EAAGH,CAAC,CAACvD,CAAAA,GAAG,CAAE,CAAA,EAAG,CAAI,EAAA,SAAA,CAAA,CAAA;YACjC0D,CAAIG,GAAAA,EAAAA,CAAGH,CAAGD,EAAAA,CAAAA,EAAG9D,CAAGmB,EAAAA,CAAAA,EAAGyC,CAAC,CAACvD,CAAE,GAAA,EAAA,CAAG,EAAG,CAAA,EAAG,CAAC,UAAA,CAAA,CAAA;YACjCc,CAAI+C,GAAAA,EAAAA,CAAG/C,CAAG4C,EAAAA,CAAAA,EAAGD,CAAG9D,EAAAA,CAAAA,EAAG4D,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YACjCL,CAAIkE,GAAAA,EAAAA,CAAGlE,CAAGmB,EAAAA,CAAAA,EAAG4C,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAACvD,CAAAA,GAAG,CAAE,CAAA,EAAE,EAAK,EAAA,UAAA,CAAA,CAAA;YACjCyD,CAAII,GAAAA,EAAAA,CAAGJ,CAAG9D,EAAAA,CAAAA,EAAGmB,CAAG4C,EAAAA,CAAAA,EAAGH,CAAC,CAACvD,CAAE,GAAA,EAAA,CAAG,EAAG,CAAA,EAAG,CAAC,UAAA,CAAA,CAAA;YACjC0D,CAAIG,GAAAA,EAAAA,CAAGH,CAAGD,EAAAA,CAAAA,EAAG9D,CAAGmB,EAAAA,CAAAA,EAAGyC,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,QAAA,CAAA,CAAA;YACjCc,CAAI+C,GAAAA,EAAAA,CAAG/C,CAAG4C,EAAAA,CAAAA,EAAGD,CAAG9D,EAAAA,CAAAA,EAAG4D,CAAC,CAACvD,CAAAA,GAAG,CAAE,CAAA,EAAE,EAAK,EAAA,UAAA,CAAA,CAAA;YACjCL,CAAIkE,GAAAA,EAAAA,CAAGlE,CAAGmB,EAAAA,CAAAA,EAAG4C,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAACvD,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YAEjCyD,CAAIM,GAAAA,EAAAA,CAAGN,CAAG9D,EAAAA,CAAAA,EAAGmB,CAAG4C,EAAAA,CAAAA,EAAGH,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,MAAA,CAAA,CAAA;YACjC0D,CAAIK,GAAAA,EAAAA,CAAGL,CAAGD,EAAAA,CAAAA,EAAG9D,CAAGmB,EAAAA,CAAAA,EAAGyC,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjCc,CAAIiD,GAAAA,EAAAA,CAAGjD,CAAG4C,EAAAA,CAAAA,EAAGD,CAAG9D,EAAAA,CAAAA,EAAG4D,CAAC,CAACvD,CAAAA,GAAE,EAAG,CAAA,EAAE,EAAK,EAAA,UAAA,CAAA,CAAA;YACjCL,CAAIoE,GAAAA,EAAAA,CAAGpE,CAAGmB,EAAAA,CAAAA,EAAG4C,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAACvD,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,QAAA,CAAA,CAAA;YACjCyD,CAAIM,GAAAA,EAAAA,CAAGN,CAAG9D,EAAAA,CAAAA,EAAGmB,CAAG4C,EAAAA,CAAAA,EAAGH,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,UAAA,CAAA,CAAA;YACjC0D,CAAIK,GAAAA,EAAAA,CAAGL,CAAGD,EAAAA,CAAAA,EAAG9D,CAAGmB,EAAAA,CAAAA,EAAGyC,CAAC,CAACvD,CAAAA,GAAG,CAAE,CAAA,EAAE,EAAK,EAAA,UAAA,CAAA,CAAA;YACjCc,CAAIiD,GAAAA,EAAAA,CAAGjD,CAAG4C,EAAAA,CAAAA,EAAGD,CAAG9D,EAAAA,CAAAA,EAAG4D,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YACjCL,CAAIoE,GAAAA,EAAAA,CAAGpE,CAAGmB,EAAAA,CAAAA,EAAG4C,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAACvD,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjCyD,CAAIM,GAAAA,EAAAA,CAAGN,CAAG9D,EAAAA,CAAAA,EAAGmB,CAAG4C,EAAAA,CAAAA,EAAGH,CAAC,CAACvD,CAAAA,GAAE,EAAG,CAAA,EAAG,CAAI,EAAA,SAAA,CAAA,CAAA;YACjC0D,CAAIK,GAAAA,EAAAA,CAAGL,CAAGD,EAAAA,CAAAA,EAAG9D,CAAGmB,EAAAA,CAAAA,EAAGyC,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YACjCc,CAAIiD,GAAAA,EAAAA,CAAGjD,CAAG4C,EAAAA,CAAAA,EAAGD,CAAG9D,EAAAA,CAAAA,EAAG4D,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YACjCL,CAAIoE,GAAAA,EAAAA,CAAGpE,CAAGmB,EAAAA,CAAAA,EAAG4C,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAACvD,CAAAA,GAAG,CAAE,CAAA,EAAE,EAAK,EAAA,QAAA,CAAA,CAAA;YACjCyD,CAAIM,GAAAA,EAAAA,CAAGN,CAAG9D,EAAAA,CAAAA,EAAGmB,CAAG4C,EAAAA,CAAAA,EAAGH,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,SAAA,CAAA,CAAA;YACjC0D,CAAIK,GAAAA,EAAAA,CAAGL,CAAGD,EAAAA,CAAAA,EAAG9D,CAAGmB,EAAAA,CAAAA,EAAGyC,CAAC,CAACvD,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YACjCc,CAAIiD,GAAAA,EAAAA,CAAGjD,CAAG4C,EAAAA,CAAAA,EAAGD,CAAG9D,EAAAA,CAAAA,EAAG4D,CAAC,CAACvD,CAAAA,GAAE,EAAG,CAAA,EAAE,EAAK,EAAA,SAAA,CAAA,CAAA;YACjCL,CAAIoE,GAAAA,EAAAA,CAAGpE,CAAGmB,EAAAA,CAAAA,EAAG4C,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YAEjCyD,CAAIQ,GAAAA,EAAAA,CAAGR,CAAG9D,EAAAA,CAAAA,EAAGmB,CAAG4C,EAAAA,CAAAA,EAAGH,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,SAAA,CAAA,CAAA;YACjC0D,CAAIO,GAAAA,EAAAA,CAAGP,CAAGD,EAAAA,CAAAA,EAAG9D,CAAGmB,EAAAA,CAAAA,EAAGyC,CAAC,CAACvD,CAAAA,GAAG,CAAE,CAAA,EAAE,EAAK,EAAA,UAAA,CAAA,CAAA;YACjCc,CAAImD,GAAAA,EAAAA,CAAGnD,CAAG4C,EAAAA,CAAAA,EAAGD,CAAG9D,EAAAA,CAAAA,EAAG4D,CAAC,CAACvD,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjCL,CAAIsE,GAAAA,EAAAA,CAAGtE,CAAGmB,EAAAA,CAAAA,EAAG4C,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,QAAA,CAAA,CAAA;YACjCyD,CAAIQ,GAAAA,EAAAA,CAAGR,CAAG9D,EAAAA,CAAAA,EAAGmB,CAAG4C,EAAAA,CAAAA,EAAGH,CAAC,CAACvD,CAAAA,GAAE,EAAG,CAAA,EAAG,CAAI,EAAA,UAAA,CAAA,CAAA;YACjC0D,CAAIO,GAAAA,EAAAA,CAAGP,CAAGD,EAAAA,CAAAA,EAAG9D,CAAGmB,EAAAA,CAAAA,EAAGyC,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjCc,CAAImD,GAAAA,EAAAA,CAAGnD,CAAG4C,EAAAA,CAAAA,EAAGD,CAAG9D,EAAAA,CAAAA,EAAG4D,CAAC,CAACvD,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,OAAA,CAAA,CAAA;YACjCL,CAAIsE,GAAAA,EAAAA,CAAGtE,CAAGmB,EAAAA,CAAAA,EAAG4C,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjCyD,CAAIQ,GAAAA,EAAAA,CAAGR,CAAG9D,EAAAA,CAAAA,EAAGmB,CAAG4C,EAAAA,CAAAA,EAAGH,CAAC,CAACvD,CAAAA,GAAG,CAAE,CAAA,EAAG,CAAI,EAAA,UAAA,CAAA,CAAA;YACjC0D,CAAIO,GAAAA,EAAAA,CAAGP,CAAGD,EAAAA,CAAAA,EAAG9D,CAAGmB,EAAAA,CAAAA,EAAGyC,CAAC,CAACvD,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,QAAA,CAAA,CAAA;YACjCc,CAAImD,GAAAA,EAAAA,CAAGnD,CAAG4C,EAAAA,CAAAA,EAAGD,CAAG9D,EAAAA,CAAAA,EAAG4D,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjCL,CAAIsE,GAAAA,EAAAA,CAAGtE,CAAGmB,EAAAA,CAAAA,EAAG4C,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAACvD,CAAAA,GAAE,EAAG,CAAA,EAAE,EAAK,EAAA,UAAA,CAAA,CAAA;YACjCyD,CAAIQ,GAAAA,EAAAA,CAAGR,CAAG9D,EAAAA,CAAAA,EAAGmB,CAAG4C,EAAAA,CAAAA,EAAGH,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,SAAA,CAAA,CAAA;YACjC0D,CAAIO,GAAAA,EAAAA,CAAGP,CAAGD,EAAAA,CAAAA,EAAG9D,CAAGmB,EAAAA,CAAAA,EAAGyC,CAAC,CAACvD,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjCc,CAAImD,GAAAA,EAAAA,CAAGnD,CAAG4C,EAAAA,CAAAA,EAAGD,CAAG9D,EAAAA,CAAAA,EAAG4D,CAAC,CAACvD,CAAAA,GAAG,CAAE,CAAA,EAAE,EAAK,EAAA,SAAA,CAAA,CAAA;YACjCL,CAAIsE,GAAAA,EAAAA,CAAGtE,CAAGmB,EAAAA,CAAAA,EAAG4C,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAACvD,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YAEjCyD,CAAI,GAACA,IAAIU,EAAQ,KAAA,CAAA,CAAA;YACjBxE,CAAI,GAACA,IAAIyE,EAAQ,KAAA,CAAA,CAAA;YACjBtD,CAAI,GAACA,IAAIuD,EAAQ,KAAA,CAAA,CAAA;YACjBX,CAAI,GAACA,IAAIY,EAAQ,KAAA,CAAA,CAAA;AACnB,SAAA;QAEA,OAAO9E,KAAAA,CAAMK,MAAM,CAAC;AAAC4D,YAAAA,CAAAA;AAAG9D,YAAAA,CAAAA;AAAGmB,YAAAA,CAAAA;AAAG4C,YAAAA,CAAAA;AAAE,SAAA,CAAA,CAAA;AAClC,KAAA,CAAA;;AAGAX,IAAAA,GAAAA,CAAIa,GAAG,GAAI,SAAUH,CAAC,EAAE9D,CAAC,EAAEmB,CAAC,EAAE4C,CAAC,EAAEa,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAA;AACtC,QAAA,IAAI/E,CAAI+D,GAAAA,CAAAA,IAAK9D,CAAAA,GAAImB,CAAI,GAAA,CAACnB,CAAI+D,GAAAA,CAAAA,CAAMa,IAAAA,CAAM,KAAA,CAAA,CAAKE,GAAAA,CAAAA,CAAAA;QAC3C,OAAQ,CAAA,CAAC/E,IAAK8E,IAAM9E,CAAO,KAAA,EAAA,GAAK8E,CAAE,IAAK7E,CAAAA,CAAAA;AACzC,KAAA,CAAA;AACAoD,IAAAA,GAAAA,CAAIe,GAAG,GAAI,SAAUL,CAAC,EAAE9D,CAAC,EAAEmB,CAAC,EAAE4C,CAAC,EAAEa,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAA;AACtC,QAAA,IAAI/E,CAAI+D,GAAAA,CAAAA,IAAK9D,CAAAA,GAAI+D,CAAI5C,GAAAA,CAAAA,GAAI,CAAC4C,CAAAA,CAAMa,IAAAA,CAAM,KAAA,CAAA,CAAKE,GAAAA,CAAAA,CAAAA;QAC3C,OAAQ,CAAA,CAAC/E,IAAK8E,IAAM9E,CAAO,KAAA,EAAA,GAAK8E,CAAE,IAAK7E,CAAAA,CAAAA;AACzC,KAAA,CAAA;AACAoD,IAAAA,GAAAA,CAAIiB,GAAG,GAAI,SAAUP,CAAC,EAAE9D,CAAC,EAAEmB,CAAC,EAAE4C,CAAC,EAAEa,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAA;QACtC,IAAI/E,CAAAA,GAAI+D,CAAK9D,IAAAA,CAAImB,GAAAA,CAAAA,GAAI4C,CAAAA,CAAMa,IAAAA,CAAM,KAAA,CAAA,CAAKE,GAAAA,CAAAA,CAAAA;QACtC,OAAQ,CAAA,CAAC/E,IAAK8E,IAAM9E,CAAO,KAAA,EAAA,GAAK8E,CAAE,IAAK7E,CAAAA,CAAAA;AACzC,KAAA,CAAA;AACAoD,IAAAA,GAAAA,CAAImB,GAAG,GAAI,SAAUT,CAAC,EAAE9D,CAAC,EAAEmB,CAAC,EAAE4C,CAAC,EAAEa,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAA;AACtC,QAAA,IAAI/E,CAAI+D,GAAAA,CAAAA,IAAK3C,CAAAA,IAAKnB,CAAAA,GAAI,CAAC+D,CAAAA,CAAC,CAAA,IAAMa,CAAAA,KAAM,CAAA,CAAKE,GAAAA,CAAAA,CAAAA;QACzC,OAAQ,CAAA,CAAC/E,IAAK8E,IAAM9E,CAAO,KAAA,EAAA,GAAK8E,CAAE,IAAK7E,CAAAA,CAAAA;AACzC,KAAA,CAAA;;AAGAoD,IAAAA,GAAAA,CAAI2B,UAAU,GAAG,EAAA,CAAA;AACjB3B,IAAAA,GAAAA,CAAI4B,WAAW,GAAG,EAAA,CAAA;AAElBjD,IAAAA,aAAc,GAAG,SAAUlE,OAAO,EAAEwF,OAAO,EAAA;AACzC,QAAA,IAAIxF,YAAYoH,SAAapH,IAAAA,OAAAA,KAAY,MACvC,MAAM,IAAIV,MAAM,mBAAsBU,GAAAA,OAAAA,CAAAA,CAAAA;AAExC,QAAA,IAAIqH,WAAcrF,GAAAA,KAAAA,CAAMiB,YAAY,CAACsC,IAAIvF,OAASwF,EAAAA,OAAAA,CAAAA,CAAAA,CAAAA;AAClD,QAAA,OAAOA,OAAWA,IAAAA,OAAAA,CAAQ8B,OAAO,GAAGD,cAChC7B,OAAWA,IAAAA,OAAAA,CAAQ+B,QAAQ,GAAGhD,IAAIG,aAAa,CAAC2C,WAChDrF,CAAAA,GAAAA,KAAAA,CAAMkB,UAAU,CAACmE,WAAAA,CAAAA,CAAAA;AACvB,KAAA,CAAA;AAEF,CAAA,GAAA,CAAA;;;;;AC/JO,SAASG,QAASC,CAAAA,IAAY,EAAEC,OAAAA,GAAU,EAAE,EAAA;IACjD,MAAMtH,EAAAA,GAAK,IAAIuH,QAAAA,CAAAA,GAAYC,MAAOC,CAAAA,IAAI,CAACH,OAAAA,CAAAA,EAAU,CAAC,OAAO,EAAED,IAAAA,CAAK,CAAC,CAAA,CAAA;IACjE,OAAOrH,EAAAA,CAAAA,GAAMwH,MAAOE,CAAAA,MAAM,CAACJ,OAAAA,CAAAA,CAAAA,CAAAA;AAC7B,CAAA;AAWO,SAASK,UAAU/C,GAAiB,EAAA;AACzC,IAAA,IAAIA,GAAe/G,YAAAA,GAAAA,EAAK,OAAO,CAAC,QAAQ,EAAE8J,SAAUrC,CAAAA,KAAAA,CAAMsC,IAAI,CAAChD,GAAM,CAAA,CAAA,CAAA,CAAC,CAAC,CAAA;AAEvE,IAAA,IAAIA,GAAeiD,YAAAA,GAAAA,EACjB,OAAO,CAAC,QAAQ,EAAEF,SAAAA,CAAUrC,KAAMsC,CAAAA,IAAI,CAAChD,GAAAA,CAAIkD,OAAO,EAAA,CAAA,CAAA,CAAK,CAAC,CAAC,CAAA;AAE3D,IAAA,IAAIxC,MAAMG,OAAO,CAACb,GAAM,CAAA,EAAA,OAAO,CAAC,CAAC,EAAEA,GAAIpG,CAAAA,GAAG,CAACmJ,SAAW3E,CAAAA,CAAAA,IAAI,CAAC,GAAA,CAAA,CAAK,CAAC,CAAC,CAAA;AAElE,IAAA,IAAI,OAAO4B,GAAAA,KAAQ,QAAYA,IAAAA,GAAAA,KAAQ,IAAM,EAAA;AAC3C,QAAA,OAAO,CAAC,CAAC,EAAE4C,MAAAA,CAAOM,OAAO,CAAClD,GACvBpG,CAAAA,CAAAA,GAAG,CAAC,CAAC,CAACuJ,GAAAA,EAAKC,KAAM,CAAA,GAAK,CAAC,EAAEL,SAAUI,CAAAA,GAAAA,CAAAA,CAAK,EAAE,EAAEJ,SAAUK,CAAAA,KAAAA,CAAAA,CAAO,CAAC,CAAA,CAC9DhF,IAAI,CAAC,GAAK,CAAA,CAAA,CAAC,CAAC,CAAA;AACjB,KAAA;IACA,OAAOiF,IAAAA,CAAKC,SAAS,CAACtD,GAAAA,CAAAA,CAAAA;AACxB,CAAA;AAEO,SAASuD,YAAYjE,GAAW,EAAA;IACrC,IAAI;QACF,OAAO+D,IAAAA,CAAKG,KAAK,CAAClE,GAAAA,CAAAA,CAAAA;AACpB,KAAA,CAAE,OAAO7G,GAAK,EAAA;;AAEZ,QAAA,OAAO+J,SAAS,CAAC,CAAC,EAAElD,GAAAA,CAAI,CAAC,CAAC,CAAA,CAAA;AAC5B,KAAA;AACF,CAAA;AAEO,SAASmE,YAAYC,IAAc,EAAA;AACxC,IAAA,OAAOd,OAAOjC,SAAS,CAAC/E,QAAQ,CAACgF,IAAI,CAAC8C,IAAU,CAAA,KAAA,wBAAA,CAAA;AAClD;;AC7BO,MAAMC,aAAgB,GAAA,IAAIV,GAA4B,EAAA,CAAA;AAEtD,MAAMW,QAAAA,CAAAA;AAIX,IAAA,OAAOC,IACL1H,CAAAA,MAA8B,EAC9B2H,MAAc,EACd;QACA,OAAO,IAAIF,SAAYzH,MAAQ2H,EAAAA,MAAAA,CAAAA,CAAAA;AACjC,KAAA;IAgBAC,uBAA0B,GAAA;QACxB,IAAI,CAACC,KAAK,CAACC,KAAK,EAAA,CAAA;AAChB,QAAA,KAAK,MAAMC,WAAe,IAAA,IAAI,CAAC1H,SAAS,CAAC2H,eAAe,EAAI,CAAA;YAC1D,MAAMC,IAAAA,GAAOb,WAAYW,CAAAA,WAAAA,CAAYG,WAAW,CAAA,CAAA;AAChD,YAAA,MAAMlB,MAAMP,MAAOC,CAAAA,IAAI,CAACuB,IAAAA,CAAK,CAAC,CAAE,CAAA,CAAA;YAChC,MAAMhB,KAAAA,GAAQgB,IAAI,CAACjB,GAAI,CAAA,CAAA;AACvB,YAAA,IAAI,CAACa,KAAK,CAACM,GAAG,CAACnB,GAAK,EAAA;AAAEC,gBAAAA,KAAAA;AAAOc,gBAAAA,WAAAA;AAAY,aAAA,CAAA,CAAA;AAC3C,SAAA;AACF,KAAA;AACAK,IAAAA,GAAAA,CAAIpB,GAAW,EAAE;AACf,QAAA,OAAO,IAAI,CAACa,KAAK,CAACO,GAAG,CAACpB,GAAAA,CAAAA,CAAAA;AACxB,KAAA;IACA,MAAMqB,MAAAA,CAAOrB,GAAW,EAAE;AACxB,QAAA,IAAI,IAAI,CAACoB,GAAG,CAACpB,GAAM,CAAA,EAAA;YACjB,MAAM,EAAEe,WAAW,EAAE,GAAG,IAAI,CAACF,KAAK,CAACS,GAAG,CAACtB,GAAAA,CAAAA,CAAAA;AACvC,YAAA,MAAM5J,SAAS,IAAM,IAAI,CAACiD,SAAS,CAACkI,iBAAiB,CAACR,WAAAA,CAAAA,CAAAA,CAAAA;AACtD,YAAA,IAAI,CAACF,KAAK,CAACQ,MAAM,CAACrB,GAAAA,CAAAA,CAAAA;YAClB,OAAO,IAAA,CAAA;AACT,SAAA;QACA,OAAO,KAAA,CAAA;AACT,KAAA;AACA,IAAA,MAAMc,KAAQ,GAAA;AACZ,QAAA,KAAK,MAAM,GAAG,EAAEC,WAAW,EAAE,CAAC,IAAI,IAAI,CAACF,KAAK,CAC1C,MAAMzK,SAAS,IAAM,IAAI,CAACiD,SAAS,CAACkI,iBAAiB,CAACR,WAAAA,CAAAA,CAAAA,CAAAA;QAExD,IAAI,CAACF,KAAK,CAACC,KAAK,EAAA,CAAA;AAClB,KAAA;AACAQ,IAAAA,GAAAA,CAAItB,GAAW,EAAE;AACf,QAAA,OAAO,IAAI,CAACa,KAAK,CAACS,GAAG,CAACtB,GAAMC,CAAAA,EAAAA,KAAAA,CAAAA;AAC9B,KAAA;AACA,IAAA,MAAMkB,GAAInB,CAAAA,GAAW,EAAEC,KAAQ,EAAE;QAC/B,MAAM,IAAI,CAACoB,MAAM,CAACrB,GAAAA,CAAAA,CAAAA;AAClB,QAAA,MAAMiB,OAAOrB,SAAU,CAAA;AAAE,YAAA,CAACI,MAAMC,KAAAA;SAASuB,CAAAA,CAAAA,UAAU,CAAC,GAAK,EAAA,GAAA,CAAA,CAAA;AACzD,QAAA,IAAIP,KAAKrK,MAAM,GAAG,KAChB,EAAA,MAAM,IAAI6K,UAAW,CAAA,8BAAA,CAAA,CAAA;QACvB,MAAMrL,QAAAA,CAAS,IAAM,IAAI,CAACiD,SAAS,CAACqI,QAAQ,CAACT,IAAM,EAAA,CAAA,CAAA,CAAA,CAAA;AAEnD,QAAA,IAAI,CAACL,uBAAuB,EAAA,CAAA;AAC9B,KAAA;IACAe,MAAS,GAAA;AACP,QAAA,MAAMC,SAA4B,EAAC,CAAA;QACnC,KAAK,MAAM,CAAC5B,GAAAA,EAAKC,KAAM,CAAA,IAAI,IAAI,CAAE2B,MAAM,CAAC5B,GAAAA,CAAI,GAAGC,KAAAA,CAAAA;QAC/C,OAAO2B,MAAAA,CAAAA;AACT,KAAA;AACA,IAAA,CAAC7B,OAAkC,GAAA;AACjC,QAAA,KAAK,MAAM,CAACC,GAAK,EAAA,EAAEC,KAAK,EAAE,CAAC,IAAI,IAAI,CAACY,KAAK,CAACd,OAAO,GAAI,MAAM;AAACC,YAAAA,GAAAA;AAAKC,YAAAA,KAAAA;AAAM,SAAA,CAAA;AACzE,KAAA;AACA,IAAA,CAACP,IAA0B,GAAA;QACzB,KAAK,MAAMM,OAAO,IAAI,CAACa,KAAK,CAACnB,IAAI,GAAI,MAAMM,GAAAA,CAAAA;AAC7C,KAAA;AACA,IAAA,CAACL,MAAuB,GAAA;QACtB,KAAK,MAAM,EAAEM,KAAK,EAAE,IAAI,IAAI,CAACY,KAAK,CAAClB,MAAM,EAAA,CAAI,MAAMM,KAAAA,CAAAA;AACrD,KAAA;IACA,CAAC4B,MAAAA,CAAOC,QAAQ,CAAC,GAAG;QAClB,OAAO,IAAI,CAAC/B,OAAO,EAAA,CAAA;AACrB,KAAA;IAtEA5F,WAAYnB,CAAAA,MAA8B,EAAE2H,MAAc,CAAE;AAa5DE,QAAAA,IAAAA,CAAAA,KAAAA,GAAQ,IAAIf,GAAAA,EAAAA,CAAAA;AAZV,QAAA,MAAM3G,EAAKiE,GAAAA,GAAAA,CAAI,CAAC,GAAG,EAAEuD,MAAO,CAAA,CAAC,EAAE3H,MAAAA,CAAOG,EAAE,CAAC,CAAC,CAAE+D,CAAAA,KAAK,CAAC,CAAG,EAAA,EAAA,CAAA,CAAA;QACrD,IAAI,CAAC/D,EAAE,GAAGA,EAAAA,CAAAA;QACV,IAAI,CAACE,SAAS,GAAGH,iBAAAA,CAAkBC,IAAI,CAAC,GAAG,EAAEwH,MAAAA,CAAO,CAAC,CAAA,CAAA;;;AAKrD,QAAA,IAAI,CAACC,uBAAuB,EAAA,CAAA;QAE5BJ,aAAcW,CAAAA,GAAG,CAAChI,EAAAA,EAAI,IAAI,CAAA,CAAA;AAC5B,KAAA;AA4DF;;ACrEO,MAAM4I,MAAAA,CAAAA;IACX,aAAaC,OAAAA,CAAW,EACtBC,KAAQ,GAAA,IAAI,EACZC,IAAI,EACJhM,MAAM,EACNiM,QAAW,GAAA,WAAa,EAAC,CAAO,EAChCC,SAAY,GAAA,WAAa,EAAC,CAAO,EAOlC,EAA0B;AACzB,QAAA,IAAI,CAACF,IAAAA,IAAQ,CAAChM,MAAAA,EAAQ,MAAM,IAAIiB,KAAAA,EAAAA,CAAAA;QAChC,MAAMkL,IAAAA,GAAO,MAAMjM,QAAS,CAAA,IAAA;AAC1B,YAAA,OAAO,IAAI2L,MAAU,CAAA;AACnBO,gBAAAA,MAAAA,EAAQ,IAAIC,eAAAA,EAAAA,CACTN,KAAK,CAACA,KACNC,CAAAA,CAAAA,IAAI,CAACA,IAAAA,CAAAA,CACLM,OAAO,CAAC,QACRC,CAAAA,CAAAA,OAAO,CAAC,IAAA,CAAA;gBACXC,OAASP,EAAAA,QAAAA;gBACTQ,eAAiBR,EAAAA,QAAAA;gBACjBS,eAAiBR,EAAAA,SAAAA;AACnB,aAAA,CAAA,CAAA;AACF,SAAA,CAAA,CAAA;QAEA,OAAO,MAAMC,IAAKQ,CAAAA,IAAI,CAAC3M,MAAAA,CAAAA,CAAAA;AACzB,KAAA;IAyBA,MAAM2M,IAAAA,CAAK3M,MAAc,EAA0B;QACjD,IAAI4M,QAAAA,CAAAA;AAEJ5M,QAAAA,MAAAA,CAAOsC,WAAW,CAAC,4BAAA,CAAA,CAAA;QAEnB,GAAG;AACDsK,YAAAA,QAAAA,GAAW,MAAM,IAAI,CAACR,MAAM,CAACO,IAAI,CAAC3M,MAAAA,CAAAA,CAAAA;AACpC,SAAA,OAAS4M,QAASC,CAAAA,iBAAiB,KAAKC,qBAAAA,CAAsBC,QAAQ,CAAC;AAEvE,QAAA,IACEH,QAASI,CAAAA,QAAQ,IACjBJ,QAAAA,CAASC,iBAAiB,KAAKC,qBAAsBG,CAAAA,UAAU,EAE/D,OAAO,MAAM,IAAI,CAACT,OAAO,EAAA,CAAA;AAE3B,QAAA,IAAII,oBAAoBM,iBAAmB,EAAA;AACzC,YAAA,IAAI,CAACN,QAASO,CAAAA,UAAU,EAAE,MAAM,IAAIlM,KAAM,CAAA,mBAAA,CAAA,CAAA;AAE1C,YAAA,OAAO,MAAM,IAAI,CAACmM,QAAQ,CAACR,SAASO,UAAU,CAAA,CAAA;AAChD,SAAA;AAEA,QAAA,IAAIP,oBAAoBS,mBAAqB,EAAA;YAC3C,IAAIT,QAAAA,CAASU,SAAS,KAAK,CAAA,EAAG,OAAO,MAAM,IAAI,CAACb,eAAe,EAAA,CAAA;YAC/D,IAAIG,QAAAA,CAASU,SAAS,KAAK,CAAA,EAAG,OAAO,MAAM,IAAI,CAACZ,eAAe,EAAA,CAAA;AAE/D,YAAA,MAAM,IAAIzL,KAAM,CAAA,mBAAA,CAAA,CAAA;AAClB,SAAA;AAEA,QAAA,IAAI2L,oBAAoBW,kBAAoB,EAAA;AAC1C,YAAA,IAAI,CAACX,QAASU,CAAAA,SAAS,EAAE,MAAM,IAAIrM,KAAM,CAAA,mBAAA,CAAA,CAAA;AAEzC,YAAA,OAAO,MAAM,IAAI,CAACuM,QAAQ,CAACZ,SAASU,SAAS,CAAA,CAAA;AAC/C,SAAA;AACF,KAAA;AAjDArJ,IAAAA,WAAAA,CAAY,EACVmI,MAAM,EACNI,OAAU,GAAA,WAAa,EAAC,CAAO,EAC/BY,WAAW,WAAa,EAAC,CAAO,EAChCX,eAAkB,GAAA,WAAa,EAAC,CAAO,EACvCC,eAAkB,GAAA,WAAa,EAAC,CAAO,EACvCc,WAAW,WAAa,EAAC,CAAO,EACd,CAAE;QACpB,IAAI,CAACpB,MAAM,GAAGA,MAAAA,CAAAA;QACd,IAAI,CAACgB,QAAQ,GAAGA,QAAAA,CAAAA;QAChB,IAAI,CAACX,eAAe,GAAGA,eAAAA,CAAAA;QACvB,IAAI,CAACC,eAAe,GAAGA,eAAAA,CAAAA;QACvB,IAAI,CAACc,QAAQ,GAAGA,QAAAA,CAAAA;QAChB,IAAI,CAAChB,OAAO,GAAGA,OAAAA,CAAAA;AACjB,KAAA;AAoCF;;AClHO,SAASiB,MAAM5J,CAAS,EAAA;AAC7B,IAAA,IAAIA,CAAK,IAAA,CAAA,EAAG,OAAOU,IAAAA,CAAKkJ,KAAK,CAAC5J,CAAAA,CAAAA,CAAAA;IAC9B,OAAOA,CAAAA,GAAI,QAAQ,CAAIU,GAAAA,IAAAA,CAAKC,KAAK,CAACX,CAAAA,CAAAA,GAAKU,IAAKkJ,CAAAA,KAAK,CAAC5J,CAAAA,CAAAA,CAAAA;AACpD,CAAA;AAUO,SAAS6J,MAAO9F,CAAAA,CAAS,EAAE9D,CAAS,EAAE6J,UAAU,QAAQ,EAAA;AAC7D,IAAA,OAAOpJ,KAAKqJ,GAAG,CAAChG,CAAI9D,GAAAA,CAAAA,CAAAA,IAAM6J,UAAUpJ,IAAKsJ,CAAAA,GAAG,CAAC,CAAA,EAAGtJ,KAAKqJ,GAAG,CAAChG,CAAIrD,CAAAA,EAAAA,IAAAA,CAAKqJ,GAAG,CAAC9J,CAAAA,CAAAA,CAAAA,CAAAA;AACxE,CAAA;AAwBO,SAASgK,KAAMnE,CAAAA,IAAY,EAAEoE,EAAU,EAAEC,OAAO,CAAC,EAAA;AACtD,IAAA,MAAMtC,SAAS,EAAE,CAAA;IACjB,IAAK,IAAIvH,IAAIwF,IAAMxF,EAAAA,CAAAA,GAAI4J,IAAI5J,CAAK6J,IAAAA,IAAAA,CAAMtC,MAAOpH,CAAAA,IAAI,CAACH,CAAAA,CAAAA,CAAAA;IAClD,OAAOuH,MAAAA,CAAAA;AACT;;ACvCA;;AAEC,IACM,MAAMuC,OAAAA,CAAAA;AAWX,IAAA,IAAIvF,CAAI,GAAA;QACN,OAAO,IAAI,CAAC0C,GAAG,CAAC,CAAA,CAAA,CAAA;AAClB,KAAA;IACA,IAAI1C,CAAAA,CAAEqB,KAAK,EAAE;QACX,IAAI,CAACkB,GAAG,CAAC,CAAGlB,EAAAA,KAAAA,CAAAA,CAAAA;AACd,KAAA;AACA,IAAA,IAAImE,CAAI,GAAA;QACN,OAAO,IAAI,CAAC9C,GAAG,CAAC,CAAA,CAAA,CAAA;AAClB,KAAA;IACA,IAAI8C,CAAAA,CAAEnE,KAAK,EAAE;QACX,IAAI,CAACkB,GAAG,CAAC,CAAGlB,EAAAA,KAAAA,CAAAA,CAAAA;AACd,KAAA;AACA,IAAA,IAAIoE,CAAI,GAAA;QACN,OAAO,IAAI,CAAC/C,GAAG,CAAC,CAAA,CAAA,CAAA;AAClB,KAAA;IACA,IAAI+C,CAAAA,CAAEpE,KAAK,EAAE;QACX,IAAI,CAACkB,GAAG,CAAC,CAAGlB,EAAAA,KAAAA,CAAAA,CAAAA;AACd,KAAA;AACA,IAAA,IAAIqE,CAAI,GAAA;QACN,OAAO,IAAI,CAAChD,GAAG,CAAC,CAAA,CAAA,CAAA;AAClB,KAAA;IACA,IAAIgD,CAAAA,CAAErE,KAAK,EAAE;QACX,IAAI,CAACkB,GAAG,CAAC,CAAGlB,EAAAA,KAAAA,CAAAA,CAAAA;AACd,KAAA;AAEA;;;;MAKA,OAAOsE,MAAOC,CAAAA,MAAyB,EAAW;AAChD,QAAA,IAAIjH,MAAMG,OAAO,CAAC8G,SAAS,OAAO,IAAI,IAAI,CAAIA,GAAAA,MAAAA,CAAAA,CAAAA;AAC9C,QAAA,IAAI,OAAOA,MAAW,KAAA,QAAA,EAAU,OAAO,IAAI,CAACnE,KAAK,CAACmE,MAAAA,CAAAA,CAAAA;AAElD,QAAA,MAAM,IAAIrN,KAAM,CAAA,CAAC,wBAAwB,EAAEyI,SAAAA,CAAU4E,QAAQ,CAAC,CAAA,CAAA;AAChE,KAAA;AAEA;;;;MAKA,OAAOnE,KAAMoE,CAAAA,SAAiB,EAAW;QACvC,OAAO,IAAI,CAACF,MAAM,CAACE,UAAUnN,KAAK,CAAC,GAAKb,CAAAA,CAAAA,GAAG,CAAC2D,MAAAA,CAAAA,CAAAA,CAAAA;AAC9C,KAAA;AAEA;;;AAGC,MACD+F,SAAoB,GAAA;;AAElB,QAAA,OAAO,IAAI,CAAC0B,MAAO6C,CAAAA,WAAW,CAAC,CAAC,QAAA,CAAA,CAAA;AAClC,KAAA;AAEA;;;AAGC,MACDC,OAAyB,GAAA;QACvB,OAAO;eAAI,IAAI;AAAC,SAAA,CAAA;AAClB,KAAA;AAEA;;;;AAIC,MACD,CAAC9C,MAAO6C,CAAAA,WAAW,CAAC,CAACE,IAAY,EAAoB;QACnD,IAAIA,IAAAA,KAAS,UAAU,OAAO,IAAI,CAACC,IAAI,CAAC5J,IAAI,CAAC,GAAA,CAAA,CAAA;AAC7C,QAAA,OAAO,IAAI,CAAA;AACb,KAAA;AAEA;;;AAGC,MACD,CAAC4G,MAAAA,CAAOC,QAAQ,CAAC,GAAqB;AACpC,QAAA,OAAO,IAAI,CAAC+C,IAAI,CAAChD,MAAAA,CAAOC,QAAQ,CAAC,EAAA,CAAA;AACnC,KAAA;AAEA;;;AAGC,MACD,IAAIgD,UAAqB,GAAA;AACvB,QAAA,OAAO,IAAI,CAACD,IAAI,CAACjO,MAAM,CAAA;AACzB,KAAA;AAEA;;;;MAKA0K,GAAAA,CAAIyD,KAAa,EAAU;AACzB,QAAA,OAAO,IAAI,CAACF,IAAI,CAACE,KAAM,CAAA,CAAA;AACzB,KAAA;AAEA;;;;AAIC,MACD5D,GAAI4D,CAAAA,KAAa,EAAE9E,KAAa,EAAE;AAChC,QAAA,IAAI,CAAC4E,IAAI,CAACE,KAAAA,CAAM,GAAG9E,KAAAA,CAAAA;AACrB,KAAA;AAEA;;;;MAKAxJ,GAAAA,CACEuO,UAAoE,EAC3D;QACT,OAAOb,OAAAA,CAAQI,MAAM,CAAC,IAAI,CAACM,IAAI,CAACpO,GAAG,CAACuO,UAAAA,CAAAA,CAAAA,CAAAA;AACtC,KAAA;AA5HA;;;MAIA7K,WAAAA,CAAY,GAAG0K,IAAc,CAAE;QAC7B,IAAI,CAACA,IAAI,GAAGA,IAAAA,CAAAA;AACd,KAAA;AAuHF;;ACpIA;;AAEC,IACM,MAAMI,YAAAA,CAAAA;AACX;;;;MAKA,OAAOV,MAAOC,CAAAA,MAAqB,EAAE;QACnC,OAAOL,OAAAA,CAAQI,MAAM,CAACC,MAAAA,CAAAA,CAAAA;AACxB,KAAA;AAEA;;;;MAKA,OAAOU,KAAMpH,CAAAA,CAAU,EAAE;AACvB,QAAA,OAAO,IAAI,CAACyG,MAAM,CAACzG,EAAE6G,OAAO,EAAA,CAAA,CAAA;AAC9B,KAAA;AAEA;;;;;AAKC,MACD,OAAOQ,iBAAAA,CAAkBrH,CAAU,EAAE9D,CAAU,EAAE;QAC/C,IAAI8D,CAAAA,CAAEgH,UAAU,KAAK9K,CAAAA,CAAE8K,UAAU,EAC/B,MAAM,IAAI3N,KAAM,CAAA,wCAAA,CAAA,CAAA;AACpB,KAAA;AAEA;;;;;AAKC,MACD,OAAOK,GAAAA,CAAIsG,CAAU,EAAE9D,CAAU,EAAE;QACjCiL,YAAaE,CAAAA,iBAAiB,CAACrH,CAAG9D,EAAAA,CAAAA,CAAAA,CAAAA;QAClC,OAAO8D,CAAAA,CAAErH,GAAG,CAAC,CAAC2O,KAAKL,KAAUK,GAAAA,GAAAA,GAAMpL,CAAEsH,CAAAA,GAAG,CAACyD,KAAAA,CAAAA,CAAAA,CAAAA;AAC3C,KAAA;AAEA;;;;;AAKC,MACD,OAAOM,QAAAA,CAASvH,CAAU,EAAE9D,CAAU,EAAE;QACtCiL,YAAaE,CAAAA,iBAAiB,CAACrH,CAAG9D,EAAAA,CAAAA,CAAAA,CAAAA;QAClC,OAAO8D,CAAAA,CAAErH,GAAG,CAAC,CAAC2O,KAAKL,KAAUK,GAAAA,GAAAA,GAAMpL,CAAEsH,CAAAA,GAAG,CAACyD,KAAAA,CAAAA,CAAAA,CAAAA;AAC3C,KAAA;AAEA;;;;;AAKC,MACD,OAAOO,QAAAA,CAASxH,CAAU,EAAE9D,CAAU,EAAE;QACtCiL,YAAaE,CAAAA,iBAAiB,CAACrH,CAAG9D,EAAAA,CAAAA,CAAAA,CAAAA;QAClC,OAAO8D,CAAAA,CAAErH,GAAG,CAAC,CAAC2O,KAAKL,KAAUK,GAAAA,GAAAA,GAAMpL,CAAEsH,CAAAA,GAAG,CAACyD,KAAAA,CAAAA,CAAAA,CAAAA;AAC3C,KAAA;AAEA;;;;;AAKC,MACD,OAAOQ,MAAAA,CAAOzH,CAAU,EAAE9D,CAAU,EAAE;QACpCiL,YAAaE,CAAAA,iBAAiB,CAACrH,CAAG9D,EAAAA,CAAAA,CAAAA,CAAAA;QAClC,OAAO8D,CAAAA,CAAErH,GAAG,CAAC,CAAC2O,KAAKL,KAAUK,GAAAA,GAAAA,GAAMpL,CAAEsH,CAAAA,GAAG,CAACyD,KAAAA,CAAAA,CAAAA,CAAAA;AAC3C,KAAA;AAEA;;;;;AAKC,MACD,OAAOS,KAAAA,CAAM1H,CAAU,EAAE/D,CAAS,EAAE;AAClC,QAAA,OAAO+D,CAAErH,CAAAA,GAAG,CAAC,CAAC2O,MAAQA,GAAMrL,GAAAA,CAAAA,CAAAA,CAAAA;AAC9B,KAAA;AAEA;;;;MAKA,OAAO0L,MAAO3H,CAAAA,CAAU,EAAE;AACxB,QAAA,OAAOA,CAAErH,CAAAA,GAAG,CAAC,CAAC2O,MAAQ,CAACA,GAAAA,CAAAA,CAAAA;AACzB,KAAA;AAEA;;;;MAKA,OAAOM,OAAQ5H,CAAAA,CAAU,EAAE;AACzB,QAAA,OAAOA,CAAErH,CAAAA,GAAG,CAAC,CAAC2O,MAAQ,CAAIA,GAAAA,GAAAA,CAAAA,CAAAA;AAC5B,KAAA;AAEA;;;;;;;AAOC,MACD,OAAOO,QAAS7H,CAAAA,CAAU,EAAE8H,KAAa,EAAEC,KAAa,EAAE;AACxD,QAAA,MAAMjE,MAAS,GAAA,IAAI,CAACsD,KAAK,CAACpH,CAAAA,CAAAA,CAAAA;QAC1B,MAAMgI,EAAAA,GAAKlE,MAAON,CAAAA,GAAG,CAACsE,KAAAA,CAAAA,CAAAA;QACtB,MAAMG,EAAAA,GAAKnE,MAAON,CAAAA,GAAG,CAACuE,KAAAA,CAAAA,CAAAA;QACtBjE,MAAOT,CAAAA,GAAG,CAACyE,KAAOG,EAAAA,EAAAA,CAAAA,CAAAA;QAClBnE,MAAOT,CAAAA,GAAG,CAAC0E,KAAOC,EAAAA,EAAAA,CAAAA,CAAAA;QAClB,OAAOlE,MAAAA,CAAAA;AACT,KAAA;AAEA;;;;;AAKC,MACD,OAAOoE,WAAAA,CAAYlI,CAAU,EAAE9D,CAAU,EAAE;QACzCiL,YAAaE,CAAAA,iBAAiB,CAACrH,CAAG9D,EAAAA,CAAAA,CAAAA,CAAAA;QAClC,OAAO8D,CAAAA,CAAE+G,IAAI,CAACoB,KAAK,CAAC,CAACb,GAAAA,EAAKL,KAAUK,GAAAA,GAAAA,KAAQpL,CAAEsH,CAAAA,GAAG,CAACyD,KAAAA,CAAAA,CAAAA,CAAAA;AACpD,KAAA;AAEA;;;;;AAKC,MACD,OAAOnB,MAAAA,CAAO9F,CAAU,EAAE9D,CAAU,EAAE;QACpCiL,YAAaE,CAAAA,iBAAiB,CAACrH,CAAG9D,EAAAA,CAAAA,CAAAA,CAAAA;AAClC,QAAA,OAAO8D,CAAE+G,CAAAA,IAAI,CAACoB,KAAK,CAAC,CAACb,GAAKL,EAAAA,KAAAA,GAAUnB,MAAOwB,CAAAA,GAAAA,EAAKpL,CAAEsH,CAAAA,GAAG,CAACyD,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AACxD,KAAA;AAEA;;;;AAIC,MACD,OAAOhB,GAAAA,CAAI,GAAGmC,OAAkB,EAAE;AAChC,QAAA,MAAMtP,MAASsP,GAAAA,OAAO,CAAC,CAAA,CAAE,CAACpB,UAAU,CAAA;AAEpC,QAAA,MAAMqB,OAAUD,GAAAA,OAAAA,CAAQE,MAAM,CAAC,CAACC,GAAK7B,EAAAA,MAAAA,GAAAA;AACnCA,YAAAA,MAAAA,CAAOK,IAAI,CAACyB,OAAO,CAAC,CAAClB,GAAKL,EAAAA,KAAAA,GAAAA;gBACxB,IAAIK,GAAAA,GAAMiB,GAAG,CAACtB,KAAAA,CAAM,EAAEsB,GAAG,CAACtB,MAAM,GAAGK,GAAAA,CAAAA;AACrC,aAAA,CAAA,CAAA;YACA,OAAOiB,GAAAA,CAAAA;AACT,SAAA,EAAG,IAAI9I,KAAM3G,CAAAA,MAAAA,CAAAA,CAAQ2P,IAAI,CAACnM,OAAOoM,iBAAiB,CAAA,CAAA,CAAA;QAElD,OAAO,IAAI,CAACjC,MAAM,CAAC4B,OAAAA,CAAAA,CAAAA;AACrB,KAAA;AAEA;;;;AAIC,MACD,OAAOM,GAAAA,CAAI,GAAGP,OAAkB,EAAE;AAChC,QAAA,MAAMtP,MAASsP,GAAAA,OAAO,CAAC,CAAA,CAAE,CAACpB,UAAU,CAAA;AAEpC,QAAA,MAAM4B,OAAUR,GAAAA,OAAAA,CAAQE,MAAM,CAAC,CAACC,GAAK7B,EAAAA,MAAAA,GAAAA;AACnCA,YAAAA,MAAAA,CAAOK,IAAI,CAACyB,OAAO,CAAC,CAAClB,GAAKL,EAAAA,KAAAA,GAAAA;gBACxB,IAAIK,GAAAA,GAAMiB,GAAG,CAACtB,KAAAA,CAAM,EAAEsB,GAAG,CAACtB,MAAM,GAAGK,GAAAA,CAAAA;AACrC,aAAA,CAAA,CAAA;YACA,OAAOiB,GAAAA,CAAAA;AACT,SAAA,EAAG,IAAI9I,KAAM3G,CAAAA,MAAAA,CAAAA,CAAQ2P,IAAI,CAACnM,OAAOuM,iBAAiB,CAAA,CAAA,CAAA;QAElD,OAAO,IAAI,CAACpC,MAAM,CAACmC,OAAAA,CAAAA,CAAAA;AACrB,KAAA;AAEA;;;;MAKA,OAAOhM,KAAMoD,CAAAA,CAAU,EAAE;AACvB,QAAA,OAAOA,EAAErH,GAAG,CAAC,CAAC2O,GAAQ3K,GAAAA,IAAAA,CAAKC,KAAK,CAAC0K,GAAAA,CAAAA,CAAAA,CAAAA;AACnC,KAAA;AAEA;;;;MAKA,OAAOwB,IAAK9I,CAAAA,CAAU,EAAE;AACtB,QAAA,OAAOA,EAAErH,GAAG,CAAC,CAAC2O,GAAQ3K,GAAAA,IAAAA,CAAKmM,IAAI,CAACxB,GAAAA,CAAAA,CAAAA,CAAAA;AAClC,KAAA;AAEA;;;;MAKA,OAAOzB,KAAM7F,CAAAA,CAAU,EAAE;AACvB,QAAA,OAAOA,CAAErH,CAAAA,GAAG,CAAC,CAAC2O,MAAQzB,KAAMyB,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA;AAC9B,KAAA;AAEA;;;;MAKA,OAAOtB,GAAIhG,CAAAA,CAAU,EAAE;AACrB,QAAA,OAAOA,EAAErH,GAAG,CAAC,CAAC2O,GAAQ3K,GAAAA,IAAAA,CAAKqJ,GAAG,CAACsB,GAAAA,CAAAA,CAAAA,CAAAA;AACjC,KAAA;AAEA;;;;AAIC,MACD,OAAOyB,YAAAA,CAAa,GAAGX,OAAkB,EAAE;AACzC,QAAA,OAAOA,OAAQE,CAAAA,MAAM,CAAC,CAACU,MAAMC,IAC3B9B,GAAAA,YAAAA,CAAa+B,SAAS,CAACD,IAAQ9B,CAAAA,GAAAA,YAAAA,CAAa+B,SAAS,CAACF,QAAQC,IAAOD,GAAAA,IAAAA,CAAAA,CAAAA;AAEzE,KAAA;AAEA;;;;AAIC,MACD,OAAOG,YAAAA,CAAa,GAAGf,OAAkB,EAAE;AACzC,QAAA,OAAOA,OAAQE,CAAAA,MAAM,CAAC,CAACU,MAAMC,IAC3B9B,GAAAA,YAAAA,CAAa+B,SAAS,CAACD,IAAQ9B,CAAAA,GAAAA,YAAAA,CAAa+B,SAAS,CAACF,QAAQC,IAAOD,GAAAA,IAAAA,CAAAA,CAAAA;AAEzE,KAAA;AAEA;;;;MAKA,OAAOE,SAAUlJ,CAAAA,CAAU,EAAE;AAC3B,QAAA,OAAOrD,IAAKyM,CAAAA,IAAI,CAACjC,YAAAA,CAAakC,gBAAgB,CAACrJ,CAAAA,CAAAA,CAAAA,CAAAA;AACjD,KAAA;AAEA;;;;MAKA,OAAOqJ,gBAAiBrJ,CAAAA,CAAU,EAAE;QAClC,OAAOA,CAAAA,CAAE+G,IAAI,CAACuB,MAAM,CAAC,CAACgB,GAAKhC,EAAAA,GAAAA,GAAQgC,GAAMhC,GAAAA,GAAAA,IAAO,CAAG,EAAA,CAAA,CAAA,CAAA;AACrD,KAAA;AAEA;;;;;AAKC,MACD,OAAOiC,QAAAA,CAASvJ,CAAU,EAAE9D,CAAU,EAAE;AACtC,QAAA,OAAOS,KAAKyM,IAAI,CAACjC,YAAaqC,CAAAA,eAAe,CAACxJ,CAAG9D,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AACnD,KAAA;AAEA;;;;;AAKC,MACD,OAAOsN,eAAAA,CAAgBxJ,CAAU,EAAE9D,CAAU,EAAE;QAC7CiL,YAAaE,CAAAA,iBAAiB,CAACrH,CAAG9D,EAAAA,CAAAA,CAAAA,CAAAA;AAClC,QAAA,OAAO8D,EAAE+G,IAAI,CAACuB,MAAM,CAAC,CAACgB,KAAKhC,GAAKL,EAAAA,KAAAA,GAAAA;AAC9B,YAAA,MAAMwC,IAAOnC,GAAAA,GAAAA,GAAMpL,CAAEsH,CAAAA,GAAG,CAACyD,KAAAA,CAAAA,CAAAA;AACzB,YAAA,OAAOqC,MAAMG,IAAQ,IAAA,CAAA,CAAA;SACpB,EAAA,CAAA,CAAA,CAAA;AACL,KAAA;AAEA;;;;;AAKC,MACD,OAAOC,GAAAA,CAAI1J,CAAU,EAAE9D,CAAU,EAAE;QACjCiL,YAAaE,CAAAA,iBAAiB,CAACrH,CAAG9D,EAAAA,CAAAA,CAAAA,CAAAA;AAClC,QAAA,OAAO8D,CAAE+G,CAAAA,IAAI,CAACuB,MAAM,CAAC,CAACgB,GAAAA,EAAKhC,GAAKL,EAAAA,KAAAA,GAAUqC,GAAMhC,GAAAA,GAAAA,GAAMpL,CAAEsH,CAAAA,GAAG,CAACyD,KAAQ,CAAA,EAAA,CAAA,CAAA,CAAA;AACtE,KAAA;AAEA;;;;MAKA,OAAO0C,SAAU3J,CAAAA,CAAU,EAAE;AAC3B,QAAA,MAAMkJ,SAAY,GAAA,IAAI,CAACA,SAAS,CAAClJ,CAAAA,CAAAA,CAAAA;AACjC,QAAA,IAAIkJ,WAAW,OAAO,IAAI,CAACxB,KAAK,CAAC1H,GAAG,CAAIkJ,GAAAA,SAAAA,CAAAA,CAAAA;QACxC,OAAO,IAAI,CAACzC,MAAM,CAAC,IAAIhH,MAAMO,CAAEgH,CAAAA,UAAU,CAAEyB,CAAAA,IAAI,CAAC,CAAA,CAAA,CAAA,CAAA;AAClD,KAAA;AAEA;;;;;AAKC,MACD,OAAOmB,KAAAA,CAAM5J,CAAU,EAAE9D,CAAU,EAAE;AACnC,QAAA,MAAM2N,QAAW,GAAA,IAAI,CAACH,GAAG,CAAC,IAAI,CAACC,SAAS,CAAC3J,CAAAA,CAAAA,EAAI,IAAI,CAAC2J,SAAS,CAACzN,CAAAA,CAAAA,CAAAA,CAAAA;QAC5D,OAAOS,IAAAA,CAAKmN,IAAI,CAACD,QAAAA,CAAAA,CAAAA;AACnB,KAAA;AAEA;;;;;AAKC,MACD,OAAOhN,MAAOmK,CAAAA,UAAkB,EAAEU,KAAAA,GAAQ,CAAC,EAAE;QAC3C,MAAMX,IAAAA,GAAOtH,KAAMsC,CAAAA,IAAI,CAAC;YAAEjJ,MAAQkO,EAAAA,UAAAA;AAAW,SAAA,EAAG,IAAMrK,IAAAA,CAAKE,MAAM,EAAA,GAAK,CAAI,GAAA,CAAA,CAAA,CAAA;QAC1E,OAAO,IAAI,CAAC6K,KAAK,CAAC,IAAI,CAACjB,MAAM,CAACM,IAAOW,CAAAA,EAAAA,KAAAA,CAAAA,CAAAA;AACvC,KAAA;AAEA;;;;;;AAMC,MACD,OAAOqC,IAAK/J,CAAAA,CAAU,EAAE9D,CAAU,EAAE8E,CAAS,EAAE;QAC7CmG,YAAaE,CAAAA,iBAAiB,CAACrH,CAAG9D,EAAAA,CAAAA,CAAAA,CAAAA;AAClC,QAAA,OAAO8D,CAAErH,CAAAA,GAAG,CAAC,CAAC2O,KAAKL,KAAUK,GAAAA,GAAAA,IAAO,CAAA,GAAItG,CAAAA,CAAAA,GAAK9E,CAAEsH,CAAAA,GAAG,CAACyD,KAASjG,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA;AAC9D,KAAA;AAEA;;;;;;AAMC,MACD,OAAOgJ,KAAMhK,CAAAA,CAAU,EAAE9D,CAAU,EAAE8E,CAAS,EAAE;AAC9C,QAAA,IAAIA,KAAK,CAAG,EAAA,OAAO,IAAI,CAACoG,KAAK,CAACpH,CAAAA,CAAAA,CAAAA;AAC9B,QAAA,IAAIgB,KAAK,CAAG,EAAA,OAAO,IAAI,CAACoG,KAAK,CAAClL,CAAAA,CAAAA,CAAAA;AAE9B,QAAA,MAAM+N,KAAQ,GAAA,IAAI,CAACL,KAAK,CAAC5J,CAAG9D,EAAAA,CAAAA,CAAAA,CAAAA;QAC5B,MAAMgO,QAAAA,GAAWvN,IAAKwN,CAAAA,GAAG,CAACF,KAAAA,CAAAA,CAAAA;QAE1B,IAAIC,QAAAA,IAAY5N,MAAO8N,CAAAA,OAAO,EAAE,OAAO,IAAI,CAACL,IAAI,CAAC/J,CAAAA,EAAG9D,CAAG8E,EAAAA,CAAAA,CAAAA,CAAAA;QAEvD,MAAMqJ,MAAAA,GAAS1N,KAAKwN,GAAG,CAACF,SAAS,CAAA,GAAIjJ,CAAAA,CAAMkJ,CAAAA,GAAAA,QAAAA,CAAAA;AAC3C,QAAA,MAAMI,MAAS3N,GAAAA,IAAAA,CAAKwN,GAAG,CAACF,QAAQjJ,CAAKkJ,CAAAA,GAAAA,QAAAA,CAAAA;QACrC,OAAOlK,CAAAA,CAAErH,GAAG,CAAC,CAAC2O,GAAAA,EAAKL,KAAUK,GAAAA,GAAAA,GAAM+C,MAASnO,GAAAA,CAAAA,CAAEsH,GAAG,CAACyD,KAASqD,CAAAA,GAAAA,MAAAA,CAAAA,CAAAA;AAC7D,KAAA;AAEA;;;;;AAKC,MACD,OAAOC,MAAAA,CAAOC,MAAiB,EAAExJ,CAAS,EAAW;QACnD,MAAM/E,CAAAA,GAAIuO,MAAO1R,CAAAA,MAAM,GAAG,CAAA,CAAA;AAE1B,QAAA,IAAI,CAACmD,CAAAA,EAAG,OAAOuO,MAAM,CAAC,CAAE,CAAA,CAAA;AAExB,QAAA,MAAMC,YAAY,EAAE,CAAA;AACpB,QAAA,IAAK,IAAIlO,CAAAA,GAAI,CAAGA,EAAAA,CAAAA,GAAIN,GAAGM,CAAK,EAAA,CAAA;AAC1BkO,YAAAA,SAAAA,CAAU/N,IAAI,CAAC,IAAI,CAACqN,IAAI,CAACS,MAAM,CAACjO,CAAAA,CAAE,EAAEiO,MAAM,CAACjO,CAAAA,GAAI,EAAE,EAAEyE,CAAAA,CAAAA,CAAAA,CAAAA;AACrD,SAAA;AAEA,QAAA,OAAO,IAAI,CAACuJ,MAAM,CAACE,SAAWzJ,EAAAA,CAAAA,CAAAA,CAAAA;AAChC,KAAA;AACF;;ACvXA;;IAGO,MAAM0J,YAAqBvD,SAAAA,YAAAA,CAAAA;AAChC;;;MAIA,OAAOV,MACLC,CAAAA,MAA+D,EACtD;QACT,OAAOiE,OAAAA,CAAQlE,MAAM,CAACC,MAAAA,CAAAA,CAAAA;AACxB,KAAA;AAEA;;;;;AAKC,MACD,OAAOkE,KAAAA,CAAM5K,CAAU,EAAE9D,CAAU,EAAW;QAC5C,OAAO,IAAI,CAACuK,MAAM,CAAC;YACjBzG,CAAEsG,CAAAA,CAAC,GAAGpK,CAAEqK,CAAAA,CAAC,GAAGvG,CAAEuG,CAAAA,CAAC,GAAGrK,CAAAA,CAAEoK,CAAC;YACrBtG,CAAEuG,CAAAA,CAAC,GAAGrK,CAAE4E,CAAAA,CAAC,GAAGd,CAAEc,CAAAA,CAAC,GAAG5E,CAAAA,CAAEqK,CAAC;YACrBvG,CAAEc,CAAAA,CAAC,GAAG5E,CAAEoK,CAAAA,CAAC,GAAGtG,CAAEsG,CAAAA,CAAC,GAAGpK,CAAAA,CAAE4E,CAAC;AACtB,SAAA,CAAA,CAAA;AACH,KAAA;AACF;;ACrBA;;;IAIO,MAAM6J,OAAgBtE,SAAAA,OAAAA,CAAAA;AAW3B;;;MAIA,OAAOI,MAAOC,CAAAA,MAAmB,EAAW;AAC1C,QAAA,IAAIjH,MAAMG,OAAO,CAAC8G,SAAS,OAAO,IAAI,IAAI,CAAIA,GAAAA,MAAAA,CAAAA,CAAAA;;AAE9C,QAAA,IAAI,OAAOA,MAAW,KAAA,QAAA,EAAU,OAAO,IAAI,CAACnE,KAAK,CAACmE,MAAAA,CAAAA,CAAAA;AAClD,QAAA,IAAI,OAAOA,MAAAA,KAAW,QACpB,EAAA,OAAO,IAAI,IAAI,CAACA,MAAO5F,CAAAA,CAAC,EAAE4F,MAAAA,CAAOJ,CAAC,EAAEI,OAAOH,CAAC,CAAA,CAAA;AAE9C,QAAA,MAAM,IAAIlN,KAAM,CAAA,CAAC,2BAA2B,EAAEyI,SAAAA,CAAU4E,QAAQ,CAAC,CAAA,CAAA;AACnE,KAAA;AAEA,IAAA,IAAIwC,SAAY,GAAA;QACd,OAAOwB,YAAAA,CAAaxB,SAAS,CAAC,IAAI,CAAA,CAAA;AACpC,KAAA;AACA,IAAA,IAAIG,gBAAmB,GAAA;QACrB,OAAOqB,YAAAA,CAAarB,gBAAgB,CAAC,IAAI,CAAA,CAAA;AAC3C,KAAA;AAEA,IAAA,IAAIwB,UAAa,GAAA;QACf,OAAOH,YAAAA,CAAaf,SAAS,CAAC,IAAI,CAAA,CAAA;AACpC,KAAA;AACA,IAAA,IAAImB,OAAU,GAAA;QACZ,OAAOJ,YAAAA,CAAa9N,KAAK,CAAC,IAAI,CAAA,CAAA;AAChC,KAAA;AACA,IAAA,IAAImO,MAAS,GAAA;QACX,OAAOL,YAAAA,CAAa5B,IAAI,CAAC,IAAI,CAAA,CAAA;AAC/B,KAAA;AACA,IAAA,IAAIkC,OAAU,GAAA;QACZ,OAAON,YAAAA,CAAa7E,KAAK,CAAC,IAAI,CAAA,CAAA;AAChC,KAAA;AACA,IAAA,IAAIoF,SAAY,GAAA;QACd,OAAOP,YAAAA,CAAa1E,GAAG,CAAC,IAAI,CAAA,CAAA;AAC9B,KAAA;AAEA;;;;MAKArN,GAAAA,CACEuO,UAAoE,EAC3D;QACT,OAAOyD,OAAAA,CAAQlE,MAAM,CAAC,IAAI,CAACM,IAAI,CAACpO,GAAG,CAACuO,UAAAA,CAAAA,CAAAA,CAAAA;AACtC,KAAA;AAEAgE,IAAAA,IAAAA,CAAKC,CAAoB,EAAE;AACzB,QAAA,IAAI,CAACrK,CAAC,GAAGqK,CAAAA,CAAErK,CAAC,CAAA;AACZ,QAAA,IAAI,CAACwF,CAAC,GAAG6E,CAAAA,CAAE7E,CAAC,CAAA;AACZ,QAAA,IAAI,CAACC,CAAC,GAAG4E,CAAAA,CAAE5E,CAAC,CAAA;AACZ,QAAA,OAAO,IAAI,CAAA;AACb,KAAA;IACAa,KAAQ,GAAA;AACN,QAAA,OAAO,IAAIuD,OAAAA,CAAQ,IAAI,CAAC7J,CAAC,EAAE,IAAI,CAACwF,CAAC,EAAE,IAAI,CAACC,CAAC,CAAA,CAAA;AAC3C,KAAA;AACAT,IAAAA,MAAAA,CAAOqF,CAAU,EAAE;AACjB,QAAA,OAAOT,YAAa5E,CAAAA,MAAM,CAAC,IAAI,EAAEqF,CAAAA,CAAAA,CAAAA;AACnC,KAAA;AAEAC,IAAAA,UAAAA,CAAWD,CAAU,EAAE;AACrB,QAAA,OAAOT,YAAanB,CAAAA,QAAQ,CAAC,IAAI,EAAE4B,CAAAA,CAAAA,CAAAA;AACrC,KAAA;AACAE,IAAAA,iBAAAA,CAAkBF,CAAU,EAAE;AAC5B,QAAA,OAAOT,YAAalB,CAAAA,eAAe,CAAC,IAAI,EAAE2B,CAAAA,CAAAA,CAAAA;AAC5C,KAAA;AAEAzR,IAAAA,GAAAA,CAAIyR,CAAU,EAAE;QACd,OAAO,IAAI,CAACD,IAAI,CAACR,aAAahR,GAAG,CAAC,IAAI,EAAEyR,CAAAA,CAAAA,CAAAA,CAAAA;AAC1C,KAAA;AACA5D,IAAAA,QAAAA,CAAS4D,CAAU,EAAE;QACnB,OAAO,IAAI,CAACD,IAAI,CAACR,aAAanD,QAAQ,CAAC,IAAI,EAAE4D,CAAAA,CAAAA,CAAAA,CAAAA;AAC/C,KAAA;AACA3D,IAAAA,QAAAA,CAAS2D,CAAU,EAAE;QACnB,OAAO,IAAI,CAACD,IAAI,CAACR,aAAalD,QAAQ,CAAC,IAAI,EAAE2D,CAAAA,CAAAA,CAAAA,CAAAA;AAC/C,KAAA;AACA1D,IAAAA,MAAAA,CAAO0D,CAAU,EAAE;QACjB,OAAO,IAAI,CAACD,IAAI,CAACR,aAAajD,MAAM,CAAC,IAAI,EAAE0D,CAAAA,CAAAA,CAAAA,CAAAA;AAC7C,KAAA;AACAzD,IAAAA,KAAAA,CAAMzL,CAAS,EAAE;QACf,OAAO,IAAI,CAACiP,IAAI,CAACR,aAAahD,KAAK,CAAC,IAAI,EAAEzL,CAAAA,CAAAA,CAAAA,CAAAA;AAC5C,KAAA;IACA0L,MAAS,GAAA;AACP,QAAA,OAAO,IAAI,CAACuD,IAAI,CAACR,YAAa/C,CAAAA,MAAM,CAAC,IAAI,CAAA,CAAA,CAAA;AAC3C,KAAA;IACAC,OAAU,GAAA;AACR,QAAA,OAAO,IAAI,CAACsD,IAAI,CAACR,YAAa9C,CAAAA,OAAO,CAAC,IAAI,CAAA,CAAA,CAAA;AAC5C,KAAA;IAEAhL,KAAQ,GAAA;AACN,QAAA,OAAO,IAAI,CAACsO,IAAI,CAAC,IAAI,CAACJ,OAAO,CAAA,CAAA;AAC/B,KAAA;IACAhC,IAAO,GAAA;AACL,QAAA,OAAO,IAAI,CAACoC,IAAI,CAAC,IAAI,CAACH,MAAM,CAAA,CAAA;AAC9B,KAAA;IACAlF,KAAQ,GAAA;AACN,QAAA,OAAO,IAAI,CAACqF,IAAI,CAAC,IAAI,CAACF,OAAO,CAAA,CAAA;AAC/B,KAAA;IACAhF,GAAM,GAAA;AACJ,QAAA,OAAO,IAAI,CAACkF,IAAI,CAAC,IAAI,CAACD,SAAS,CAAA,CAAA;AACjC,KAAA;IAEAtB,SAAY,GAAA;AACV,QAAA,OAAO,IAAI,CAACuB,IAAI,CAAC,IAAI,CAACL,UAAU,CAAA,CAAA;AAClC,KAAA;AAnHA;;;;;MAMAxO,WAAAA,CAAYyE,IAAI,CAAC,EAAEwF,IAAI,CAAC,EAAEC,CAAI,GAAA,CAAC,CAAE;QAC/B,KAAK,CAACzF,GAAGwF,CAAGC,EAAAA,CAAAA,CAAAA,CAAAA;AACd,KAAA;AA4GF;;AC9HO,MAAM+E,QAAiBX,SAAAA,OAAAA,CAAAA;AAC5B,IAAA,IAAIY,eAAkB,GAAA;QACpB,OAAOD,QAAAA,CAAS7E,MAAM;QAEpBiE,YAAahR,CAAAA,GAAG,CAAC,IAAI,CAACoR,OAAO,EAAE,IAAIH,OAAQ,CAAA,GAAA,EAAK,GAAK,EAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAEzD,KAAA;IAEA,OAAOlE,MAAAA,CAAOC,MAAmB,EAAE;QACjC,OAAOiE,OAAAA,CAAQlE,MAAM,CAACC,MAAAA,CAAAA,CAAAA;AACxB,KAAA;IAEAU,KAAQ,GAAA;AACN,QAAA,OAAO,IAAIkE,QAAAA,CAAS,IAAI,CAACxK,CAAC,EAAE,IAAI,CAACwF,CAAC,EAAE,IAAI,CAACC,CAAC,CAAA,CAAA;AAC5C,KAAA;AACAT,IAAAA,MAAAA,CAAOqF,CAAW,EAAE;AAClB,QAAA,OAAOT,YAAaxC,CAAAA,WAAW,CAAC,IAAI,EAAEiD,CAAAA,CAAAA,CAAAA;AACxC,KAAA;IACAK,QAASL,CAAAA,CAA2B,EAAE5B,QAAgB,EAAE;AACtD,QAAA,OAAO,IAAI,CAAC6B,UAAU,CAACD,CAAM5B,CAAAA,IAAAA,QAAAA,CAAAA;AAC/B,KAAA;AAEAkC,IAAAA,MAAAA,CAAON,CAA2B,EAAE;QAClC,OAAO,IAAI,CAACzR,GAAG,CAACyR,CAAAA,CAAAA,CAAAA;AAClB,KAAA;AACF;;ACvBO,MAAMO,YAAAA,CAAAA;IAgBXC,OAAU,GAAA;QACR,OAAO;AACLC,YAAAA,QAAAA,EAAU,CAAC,EAAE,IAAI,CAACA,QAAQ,CAAC,CAAC;AAC5BC,YAAAA,SAAAA,EAAW,IAAI,CAACA,SAAS,CAACxQ,EAAE;AAC9B,SAAA,CAAA;AACF,KAAA;AAEA,IAAA,CAAC0I,MAAO6C,CAAAA,WAAW,CAAC,CAACE,IAAY,EAAE;AACjC,QAAA,IAAIA,SAAS,QACX,EAAA,OAAO,CAAC,EAAEnL,wBAAAA,CAAyB,IAAI,CAACkQ,SAAS,CAACxQ,EAAE,EAAE,EAAE,EAAE,IAAI,CAACuQ,QAAQ,CAAC,CAAC,CAAA;AAC3E,QAAA,OAAO,IAAI,CAAA;AACb,KAAA;AAvBAvP,IAAAA,WAAAA,CAAY,EACVuP,QAAQ,EACRC,SAAS,EAIV,CAAE;QACD,IAAI,CAACD,QAAQ,GACXA,QAAAA,YAAoBN,WAAWM,QAAWN,GAAAA,QAAAA,CAAS7E,MAAM,CAACmF,QAAAA,CAAAA,CAAAA;QAC5D,IAAI,CAACC,SAAS,GACZA,SAAAA,YAAqBC,YAAYD,SAAYjU,GAAAA,KAAAA,CAAMC,YAAY,CAACgU,SAAAA,CAAAA,CAAAA;AACpE,KAAA;AAaF;;AC5BO,MAAME,oBAAuB,GAAA,IAAI/J,GAAoB,EAAA,CAAA;AAErD,MAAMgK,KAAAA,CAAAA;IAYX,OAAOC,IAAAA,CAAK/Q,MAAc,EAAE;QAC1B,MAAMgR,EAAAA,GAAK,IAAIF,KAAM9Q,CAAAA,MAAAA,CAAAA,CAAAA;QACrB6Q,oBAAqB1I,CAAAA,GAAG,CAACnI,MAAQgR,EAAAA,EAAAA,CAAAA,CAAAA;QACjC,OAAOA,EAAAA,CAAAA;AACT,KAAA;IAEA,MAAM7I,GAAAA,CAAI,EACR/H,IAAI,EACJ6Q,UAAAA,GAAa,KAAK,EAClBC,KAAAA,GAAQ,KAAK,EAKd,EAAE;AACD,QAAA,MAAMC,IAAO,GAAA,IAAIX,YAAa,CAAA,IAAI,CAACxQ,MAAM,CAAA,CAAA;AACzC,QAAA,MAAMoR,SAAY,GAAA,UAAA;AAChB,YAAA,MAAM,IAAI,CAACJ,EAAE,CAAC7I,GAAG,CAAC/H,IAAM,EAAA;AACtB+Q,gBAAAA,IAAAA,EAAMA,KAAKV,OAAO,EAAA;AAClBQ,gBAAAA,UAAAA;AACF,aAAA,CAAA,CAAA;YACA,OAAOE,IAAAA,CAAAA;AACT,SAAA,CAAA;QACA,IAAI,CAACD,SAAS,IAAI,CAACF,EAAE,CAAC5I,GAAG,CAAChI,IAAO,CAAA,EAAA;YAC/B,OAAO,MAAM2I,MAAOC,CAAAA,OAAO,CAAC;AAC1BE,gBAAAA,IAAAA,EAAM,CAAC,GAAG,EAAE9I,IAAAA,CAAK,WAAW,CAAC;gBAC7BlD,MAAQ,EAAA,IAAI,CAAC8C,MAAM;AACnBoJ,gBAAAA,SAAAA,EAAW,UAAY,MAAMgI,SAAAA,EAAAA;AAC/B,aAAA,CAAA,CAAA;AACF,SAAA;AACA,QAAA,OAAO,MAAMA,SAAAA,EAAAA,CAAAA;AACf,KAAA;IACA,MAAM9I,GAAAA,CAAIlI,IAAY,EAAE;AACtB,QAAA,IAAI,CAAC,IAAI,CAAC4Q,EAAE,CAAC5I,GAAG,CAAChI,IAAO,CAAA,EAAA,OAAA;AACxB,QAAA,MAAM6H,OAAO,IAAI,CAAC+I,EAAE,CAAC1I,GAAG,CAAClI,IAAAA,CAAAA,CAAAA;AAEzB,QAAA,IAAI,CAAC6H,IAAM,EAAA,OAAA;QAEX,IAAIA,IAAAA,CAAKgJ,UAAU,EAAE,MAAM,IAAI,CAACD,EAAE,CAAC3I,MAAM,CAACjI,IAAAA,CAAAA,CAAAA;AAC1C,QAAA,IAAI6H,KAAKkJ,IAAI,EAAE,OAAO,IAAIX,YAAAA,CAAavI,KAAKkJ,IAAI,CAAA,CAAA;AAClD,KAAA;IACA,MAAME,MAAAA,CAAOjR,IAAY,EAAE;QACzB,IAAI,CAAC,IAAI,CAAC4Q,EAAE,CAAC5I,GAAG,CAAChI,OAAO,OAAO,KAAA,CAAA;QAE/B,OAAO,MAAM2I,MAAOC,CAAAA,OAAO,CAAC;AAC1BE,YAAAA,IAAAA,EAAM,CAAC,KAAK,EAAE9I,IAAAA,CAAK,CAAC,CAAC;YACrBlD,MAAQ,EAAA,IAAI,CAAC8C,MAAM;AACnBoJ,YAAAA,SAAAA,EAAW,UAAY,MAAM,IAAI,CAAC4H,EAAE,CAAC3I,MAAM,CAACjI,IAAAA,CAAAA;AAC9C,SAAA,CAAA,CAAA;AACF,KAAA;IACAuI,MAAS,GAAA;AACP,QAAA,MAAMC,SAKD,EAAE,CAAA;AAEP,QAAA,KAAK,MAAM,CAACxI,IAAM,EAAA,EAAE+Q,MAAMlJ,IAAI,EAAEgJ,UAAU,EAAE,CAAC,IAAI,IAAI,CAACD,EAAE,CAAE;YACxD,MAAMG,IAAAA,GAAO,IAAIX,YAAavI,CAAAA,IAAAA,CAAAA,CAAAA;AAC9BW,YAAAA,MAAAA,CAAOpH,IAAI,CAAC;AACVpB,gBAAAA,IAAAA;AACA+Q,gBAAAA,IAAAA;AACAF,gBAAAA,UAAAA;gBACAK,IAAM,EAAA,CAAC,EAAElR,IAAAA,CAAK,EAAE,EAAE+Q,IAAK,CAAA,CAAC,EAAEF,UAAAA,GAAa,QAAW,GAAA,EAAA,CAAG,CAAC;AACxD,aAAA,CAAA,CAAA;AACF,SAAA;QAEA,OAAOrI,MAAAA,CAAAA;AACT,KAAA;AA1EAzH,IAAAA,WAAAA,CAAYnB,MAAc,CAAE;QAC1B,IAAI,CAACA,MAAM,GAAGA,MAAAA,CAAAA;AACd,QAAA,IAAI,CAACgR,EAAE,GAAGvJ,QAASC,CAAAA,IAAI,CAAC1H,MAAQ,EAAA,KAAA,CAAA,CAAA;AAClC,KAAA;AAwEF;;ACxFO,MAAMuR,YAAAA,CAAAA;IAGXC,EAAGC,CAAAA,SAAiB,EAAEC,QAAkB,EAAE;AACxC,QAAA,IAAIpK,YAAYoK,QAAW,CAAA,EAAA;AACzB,YAAA,MAAMC,UAAa,GAAA,CAAC,EAAEF,SAAAA,CAAU,MAAM,CAAC,CAAA;AACvC,YAAA,IAAI,IAAI,CAACG,OAAO,CAACD,UAAW,CAAA,EAAE,IAAI,CAACC,OAAO,CAACD,UAAW,CAAA,CAACnQ,IAAI,CAACkQ,QAAAA,CAAAA,CAAAA;AACvD,iBAAA,IAAI,CAACE,OAAO,CAACD,UAAAA,CAAW,GAAG;AAACD,gBAAAA,QAAAA;AAAS,aAAA,CAAA;SACrC,MAAA;AACL,YAAA,IAAI,IAAI,CAACE,OAAO,CAACH,SAAU,CAAA,EAAE,IAAI,CAACG,OAAO,CAACH,SAAU,CAAA,CAACjQ,IAAI,CAACkQ,QAAAA,CAAAA,CAAAA;AACrD,iBAAA,IAAI,CAACE,OAAO,CAACH,SAAAA,CAAU,GAAG;AAACC,gBAAAA,QAAAA;AAAS,aAAA,CAAA;AAC3C,SAAA;AACA,QAAA,OAAO,IAAI,CAAA;AACb,KAAA;IACAG,IAAKJ,CAAAA,SAAiB,EAAEC,QAAkB,EAAE;AAC1C,QAAA,IAAIpK,YAAYoK,QAAW,CAAA,EAAA;AACzB,YAAA,MAAMC,UAAa,GAAA,CAAC,EAAEF,SAAAA,CAAU,MAAM,CAAC,CAAA;YACvC,MAAMK,SAAAA,GAAY,OAAO,GAAGC,IAAAA,GAAAA;AAC1B,gBAAA,MAAML,QAAYK,CAAAA,GAAAA,IAAAA,CAAAA,CAAAA;gBAClB,IAAI,CAACC,cAAc,CAACL,UAAYG,EAAAA,SAAAA,CAAAA,CAAAA;AAClC,aAAA,CAAA;AACA,YAAA,IAAI,IAAI,CAACF,OAAO,CAACD,UAAW,CAAA,EAAE,IAAI,CAACC,OAAO,CAACD,UAAW,CAAA,CAACnQ,IAAI,CAACsQ,SAAAA,CAAAA,CAAAA;AACvD,iBAAA,IAAI,CAACF,OAAO,CAACD,UAAAA,CAAW,GAAG;AAACG,gBAAAA,SAAAA;AAAU,aAAA,CAAA;SACtC,MAAA;YACL,MAAMA,SAAAA,GAAY,CAAC,GAAGC,IAAAA,GAAAA;gBACpBL,QAAYK,CAAAA,GAAAA,IAAAA,CAAAA,CAAAA;gBACZ,IAAI,CAACC,cAAc,CAACP,SAAWK,EAAAA,SAAAA,CAAAA,CAAAA;AACjC,aAAA,CAAA;AACA,YAAA,IAAI,IAAI,CAACF,OAAO,CAACH,SAAU,CAAA,EAAE,IAAI,CAACG,OAAO,CAACH,SAAU,CAAA,CAACjQ,IAAI,CAACsQ,SAAAA,CAAAA,CAAAA;AACrD,iBAAA,IAAI,CAACF,OAAO,CAACH,SAAAA,CAAU,GAAG;AAACK,gBAAAA,SAAAA;AAAU,aAAA,CAAA;AAC5C,SAAA;AACA,QAAA,OAAO,IAAI,CAAA;AACb,KAAA;IACAE,cAAeP,CAAAA,SAAiB,EAAEC,QAAkB,EAAE;AACpD,QAAA,IAAI,IAAI,CAACE,OAAO,CAACH,UAAU,EAAE;AAC3B,YAAA,MAAMQ,eAA2B,EAAE,CAAA;AACnC,YAAA,KAAK,MAAMH,SAAa,IAAA,IAAI,CAACF,OAAO,CAACH,UAAU,CAAE;AAC/C,gBAAA,IAAIK,SAAcJ,KAAAA,QAAAA,EAAUO,YAAazQ,CAAAA,IAAI,CAACsQ,SAAAA,CAAAA,CAAAA;AAChD,aAAA;AACA,YAAA,IAAI,CAACF,OAAO,CAACH,SAAAA,CAAU,GAAGQ,YAAAA,CAAAA;AAC5B,SAAA;AACA,QAAA,OAAO,IAAI,CAAA;AACb,KAAA;AACA,IAAA,MAAMC,IAAKT,CAAAA,SAAiB,EAAE,GAAGM,IAAW,EAAE;AAC5C,QAAA,IAAI,IAAI,CAACH,OAAO,CAACH,UAAU,EAAE;YAC3B,KAAK,MAAMC,YAAY,IAAI,CAACE,OAAO,CAACH,SAAAA,CAAU,CAAEC,QAAYK,CAAAA,GAAAA,IAAAA,CAAAA,CAAAA;AAC9D,SAAA;AACA,QAAA,MAAM,IAAI,CAACI,SAAS,CAACV,SAAcM,EAAAA,GAAAA,IAAAA,CAAAA,CAAAA;AACrC,KAAA;AACA,IAAA,MAAMI,SAAUV,CAAAA,SAAiB,EAAE,GAAGM,IAAW,EAAE;AACjD,QAAA,MAAMJ,UAAa,GAAA,CAAC,EAAEF,SAAAA,CAAU,MAAM,CAAC,CAAA;AACvC,QAAA,IAAI,IAAI,CAACG,OAAO,CAACD,WAAW,EAAE;YAC5B,KAAK,MAAMD,YAAY,IAAI,CAACE,OAAO,CAACD,UAAAA,CAAW,CAAE,MAAMD,QAAYK,CAAAA,GAAAA,IAAAA,CAAAA,CAAAA;AACrE,SAAA;AACF,KAAA;IACAK,WAAYX,CAAAA,SAAiB,EAAEC,QAAkB,EAAE;AACjD,QAAA,OAAO,IAAI,CAACF,EAAE,CAACC,SAAWC,EAAAA,QAAAA,CAAAA,CAAAA;AAC5B,KAAA;IACAW,GAAIZ,CAAAA,SAAiB,EAAEC,QAAkB,EAAE;AACzC,QAAA,OAAO,IAAI,CAACM,cAAc,CAACP,SAAWC,EAAAA,QAAAA,CAAAA,CAAAA;AACxC,KAAA;;AA3DAE,QAAAA,IAAAA,CAAAA,OAAAA,GAAsC,EAAC,CAAA;;AA4DzC;;AC3DO,MAAMU,WAAAA,CAAAA;IAUX3G,OAAU,GAAA;AACR,QAAA,OAAOX,KAAM,CAAA,IAAI,CAACyC,GAAG,EAAE,IAAI,CAAC1C,GAAG,GAAG,IAAI,CAACG,IAAI,EAAE,IAAI,CAACA,IAAI,CAAA,CAAA;AACxD,KAAA;AAEA,IAAA,IAAIqH,KAAQ,GAAA;QACV,OAAO,IAAI,CAAC5G,OAAO,EAAA,CAAA;AACrB,KAAA;AAEA6G,IAAAA,QAAAA,CAASzR,CAAS,EAAE;AAClB,QAAA,OAAO,IAAI,CAACwR,KAAK,CAACC,QAAQ,CAACzR,CAAAA,CAAAA,CAAAA;AAC7B,KAAA;IAEA,CAAC8H,MAAAA,CAAOC,QAAQ,CAAC,GAAG;AAClB,QAAA,OAAO,IAAI,CAACyJ,KAAK,CAAC5L,MAAM,EAAA,CAAA;AAC1B,KAAA;AAnBAxF,IAAAA,WAAAA,CAAYsM,GAAW,EAAE1C,GAAW,EAAEG,IAAAA,GAAO,CAAC,CAAE;QAC9C,IAAI,CAACuC,GAAG,GAAGA,GAAAA,CAAAA;QACX,IAAI,CAAC1C,GAAG,GAAGA,GAAAA,CAAAA;QACX,IAAI,CAACG,IAAI,GAAGA,IAAAA,CAAAA;AACd,KAAA;AAgBF;;ACXO,MAAMuH,eAAAA,CAAAA;AAyCXC,IAAAA,MAAAA,CAAOzL,KAAa,EAAE;QACpB,IAAI,IAAI,CAAC0L,QAAQ,KAAK1L,SAAS,IAAI,CAAC2L,SAAS,CAAC3L,KAAQ,CAAA,EAAA;AACpD,YAAA,IAAI,CAAC4L,QAAQ,GAAG,IAAI,CAACF,QAAQ,CAAA;YAC7B,IAAI,CAACA,QAAQ,GAAG1L,KAAAA,CAAAA;AAChB,YAAA,IAAI,CAAC6L,MAAM,CAACZ,IAAI,CAAC,YAAY,IAAI,CAACS,QAAQ,EAAE,IAAI,CAACE,QAAQ,EAAE,IAAI,CAACE,OAAO,CAAA,CAAA;AACvE,YAAA,IAAI,CAACD,MAAM,CAACZ,IAAI,CAAC,WAAW,IAAI,CAACS,QAAQ,EAAE,IAAI,CAACE,QAAQ,EAAE,IAAI,CAACE,OAAO,CAAA,CAAA;YACtE,OAAO,IAAA,CAAA;AACT,SAAA;QACA,OAAO,KAAA,CAAA;AACT,KAAA;AACAH,IAAAA,SAAAA,CAAU3L,KAAa,EAAE;AACvB,QAAA,OAAO,IAAI,CAAC+D,KAAK,CAACwH,QAAQ,CAACvL,KAAAA,CAAAA,CAAAA;AAC7B,KAAA;AA1CA9F,IAAAA,WAAAA,CAAY,EACVf,IAAI,EACJ4S,WAAW,EACXhI,KAAQ,GAAA;AAAC,QAAA,CAAA;AAAG,QAAA,CAAA;AAAG,QAAA,CAAA;KAAE,EACjBiI,YAAY,EACZH,MAAM,EACNI,MAAM,EACNH,OAAO,EAGW,CAAE;QACpB,IAAI,CAAC3S,IAAI,GAAGA,IAAAA,CAAAA;QACZ,IAAI,CAAC4S,WAAW,GAAGA,WAAAA,CAAAA;AACnB,QAAA,IAAI,CAAChI,KAAK,GAAG,IAAIsH,WAAetH,CAAAA,GAAAA,KAAAA,CAAAA,CAAAA;QAChC,IAAI,CAAC8H,MAAM,GAAG,IAAIvB,YAAAA,EAAAA,CAAAA;QAClB,IAAI,CAAC2B,MAAM,GAAGA,MAAAA,CAAAA;QACd,IAAI,CAACH,OAAO,GAAGA,OAAAA,CAAAA;AAEf,QAAA,IAAID,MAAQ,EAAA;AACV,YAAA,KAAK,MAAM,CAACrB,SAAWC,EAAAA,QAAAA,CAAS,IAAIjL,MAAOM,CAAAA,OAAO,CAAC+L,MAAAA,CAAAA,CACjD,IAAI,CAACA,MAAM,CAACtB,EAAE,CAACC,SAAWC,EAAAA,QAAAA,CAAAA,CAAAA;AAC9B,SAAA;QAEA,IAAIuB,YAAAA,KAAiBhN,SAAa,IAAA,IAAI,CAAC2M,SAAS,CAACK,YAC/C,CAAA,EAAA,IAAI,CAACN,QAAQ,GAAGM,YAAAA,CAAAA;AACb,aAAA,IAAI,CAACN,QAAQ,GAAG,IAAI,CAAC3H,KAAK,CAACyC,GAAG,CAAA;QAEnC,IAAI,CAACqF,MAAM,CAACZ,IAAI,CAAC,QAAU,EAAA,IAAI,CAACS,QAAQ,EAAEI,OAAAA,CAAAA,CAAAA;QAC1C,IAAI,CAACD,MAAM,CAACZ,IAAI,CAAC,WAAW,IAAI,CAACS,QAAQ,EAAE1M,SAAW8M,EAAAA,OAAAA,CAAAA,CAAAA;AACxD,KAAA;AAcF;;ACvDO,MAAMI,mBAAAA,CAAAA;AA8CXT,IAAAA,MAAAA,CAAOzL,KAAQ,EAAE;QACf,IAAI,IAAI,CAAC0L,QAAQ,KAAK1L,SAAS,IAAI,CAACmM,MAAM,CAACnM,KAAQ,CAAA,EAAA;AACjD,YAAA,IAAI,CAAC4L,QAAQ,GAAG,IAAI,CAACF,QAAQ,CAAA;YAC7B,IAAI,CAACA,QAAQ,GAAG1L,KAAAA,CAAAA;AAChB,YAAA,IAAI,CAAC6L,MAAM,CAACZ,IAAI,CAAC,YAAY,IAAI,CAACS,QAAQ,EAAE,IAAI,CAACE,QAAQ,EAAE,IAAI,CAACE,OAAO,CAAA,CAAA;AACvE,YAAA,IAAI,CAACD,MAAM,CAACZ,IAAI,CAAC,WAAW,IAAI,CAACS,QAAQ,EAAE,IAAI,CAACE,QAAQ,EAAE,IAAI,CAACE,OAAO,CAAA,CAAA;YACtE,OAAO,IAAA,CAAA;AACT,SAAA;QACA,OAAO,KAAA,CAAA;AACT,KAAA;AACAK,IAAAA,MAAAA,CAAOnM,KAAQ,EAAE;AACf,QAAA,OAAO,IAAI,CAACN,MAAM,CAACyB,GAAG,CAACnB,KAAU,CAAA,IAAA,CAAC,IAAI,CAACN,MAAM,CAAC0M,IAAI,CAAA;AACpD,KAAA;AA/CAlS,IAAAA,WAAAA,CAAY,EACVf,IAAI,EACJ4S,WAAW,EACXrM,SAAS,EAAE,EACXsM,YAAY,EACZH,MAAM,EACNI,MAAM,EACNH,OAAO,EACuC,CAAE;QAChD,IAAI,CAAC3S,IAAI,GAAGA,IAAAA,CAAAA;QACZ,IAAI,CAAC4S,WAAW,GAAGA,WAAAA,CAAAA;AACnB,QAAA,IAAI,CAACrM,MAAM,GAAG,IAAIG;QAEhBH,MAAOlJ,CAAAA,GAAG,CAAC,CAACwJ,KAAAA,GAAAA;AACV,YAAA,IAAIA,KAAK,CAAC,CAAE,CAAA,KAAK,IAAQ,IAAA,CAACA,KAAK,CAAC,CAAE,CAAA,EAAEA,KAAK,CAAC,EAAE,GAAG,IAAA,CAAA;AAC1C,iBAAA,IAAIA,KAAK,CAAC,CAAE,CAAA,KAAK,KAAS,IAAA,CAACA,KAAK,CAAC,CAAE,CAAA,EAAEA,KAAK,CAAC,EAAE,GAAG,IAAA,CAAA;YACrD,OAAOA,KAAAA,CAAAA;AACT,SAAA,CAAA,CAAA,CAAA;QAEF,IAAI,CAAC6L,MAAM,GAAG,IAAIvB,YAAAA,EAAAA,CAAAA;QAClB,IAAI,CAAC2B,MAAM,GAAGA,MAAAA,CAAAA;QACd,IAAI,CAACH,OAAO,GAAGA,OAAAA,CAAAA;AAEf,QAAA,IAAID,MAAQ,EAAA;AACV,YAAA,KAAK,MAAM,CAACrB,SAAWC,EAAAA,QAAAA,CAAS,IAAIjL,MAAOM,CAAAA,OAAO,CAAC+L,MAAAA,CAAAA,CACjD,IAAI,CAACA,MAAM,CAACtB,EAAE,CAACC,SAAWC,EAAAA,QAAAA,CAAAA,CAAAA;AAC9B,SAAA;QAEA,IAAIuB,YAAAA,KAAiBhN,SAAa,IAAA,IAAI,CAACmN,MAAM,CAACH,YAC5C,CAAA,EAAA,IAAI,CAACN,QAAQ,GAAGM,YAAAA,CAAAA;AACb,aAAA,IAAItM,MAAM,CAAC,CAAE,CAAA,EAAE,IAAI,CAACgM,QAAQ,GAAGhM,MAAM,CAAC,CAAE,CAAA,CAAC,CAAE,CAAA,CAAA;QAEhD,IAAI,CAACmM,MAAM,CAACZ,IAAI,CAAC,QAAU,EAAA,IAAI,CAACS,QAAQ,EAAEI,OAAAA,CAAAA,CAAAA;QAC1C,IAAI,CAACD,MAAM,CAACZ,IAAI,CAAC,WAAW,IAAI,CAACS,QAAQ,EAAE1M,SAAW8M,EAAAA,OAAAA,CAAAA,CAAAA;AACxD,KAAA;AAcF;;ACjEO,MAAMO,YAAAA,CAAAA;AAcXC,IAAAA,OAAAA,CACEC,IAA0E,EAC1E;;AAEA,QAAA,IAAIA,IAAKxI,CAAAA,KAAK,EAAE,IAAI,CAACyI,KAAK,CAACD,IAAAA,CAAKpT,IAAI,CAAC,GAAG,IAAIqS,eAAgBe,CAAAA,IAAAA,CAAAA,CAAAA;AAEvD,aAAA,IAAIA,IAAK7M,CAAAA,MAAM,EAAE,IAAI,CAAC8M,KAAK,CAACD,IAAAA,CAAKpT,IAAI,CAAC,GAAG,IAAI+S,mBAAoBK,CAAAA,IAAAA,CAAAA,CAAAA;AAEtE,QAAA,OAAO,IAAI,CAAA;AACb,KAAA;AACA,IAAA,MAAME,SAAY,GAAA;QAChB,MAAMzL,IAAAA,GAAO,IAAI,CAAC0L,aAAa,EAAA,CAAA;AAC/B,QAAA,KAAK,MAAM,CAACvT,IAAAA,EAAM6G,KAAM,CAAA,IAAIR,OAAOM,OAAO,CAACkB,IACzC,CAAA,CAAA,MAAM,IAAI,CAAC+I,EAAE,CAAC7I,GAAG,CAAC/H,IAAM6G,EAAAA,KAAAA,CAAAA,CAAAA;AAE1B,QAAA,KAAK,MAAM,CAAC7G,IAAAA,CAAK,IAAI,IAAI,CAAC4Q,EAAE,CAAE;AAC5B,YAAA,IAAI,CAAC,IAAI,CAAC4C,OAAO,CAACxT,IAAAA,CAAAA,EAAO,MAAM,IAAI,CAAC4Q,EAAE,CAAC3I,MAAM,CAACjI,IAAAA,CAAAA,CAAAA;AAChD,SAAA;AACF,KAAA;AACA,IAAA,MAAMyT,WAAc,GAAA;AAClB,QAAA,KAAK,MAAM,CAACzT,IAAM6G,EAAAA,KAAAA,CAAM,IAAI,IAAI,CAAC+J,EAAE,CACjC,IAAI,CAAC8C,UAAU,CAAC1T,IAAAA,EAAM6G,OAAOhB,SAAW,EAAA;YAAE8N,UAAY,EAAA,IAAA;AAAK,SAAA,CAAA,CAAA;QAC7D,MAAM,IAAI,CAACL,SAAS,EAAA,CAAA;AACtB,KAAA;AACA,IAAA,MAAM3C,IAAO,GAAA;QACX,IAAI,CAACwC,OAAO,GAAG,IAAA;AACb,YAAA,MAAM,IAAIpV,KAAM,CAAA,sCAAA,CAAA,CAAA;AAClB,SAAA,CAAA;QAEA,MAAM,IAAI,CAAC0V,WAAW,EAAA,CAAA;QAEtB,OAAO,IAAI,CAACF,aAAa,EAAA,CAAA;AAC3B,KAAA;AAEAK,IAAAA,QAAAA,CAAS5T,IAAY,EAAE;AACrB,QAAA,OAAO,IAAI,CAACqT,KAAK,CAACrT,IAAK,CAAA,CAAA;AACzB,KAAA;AACAwT,IAAAA,OAAAA,CAAQxT,IAAY,EAAE;AACpB,QAAA,OAAO,CAAC,CAAC,IAAI,CAACqT,KAAK,CAACrT,IAAK,CAAA,CAAA;AAC3B,KAAA;AACA0T,IAAAA,UAAAA,CACE1T,IAAY,EACZ6G,KAAQ,EACRhJ,WAIY,IAAO,EAAC,EACpB,EAAE8V,aAAa,KAAK,EAAE,GAAG,EAAE,EAC3B;AACA,QAAA,MAAME,IAAO,GAAA,IAAI,CAACD,QAAQ,CAAC5T,IAAAA,CAAAA,CAAAA;AAC3B,QAAA,IAAI6T,IAAM,EAAA;;YAER,MAAMC,MAAAA,GAASD,IAAKvB,CAAAA,MAAM,CAACzL,KAAAA,CAAAA,CAAAA;AAC3B,YAAA,IAAIiN,MAAQ,EAAA;gBACV,IAAI,CAACH,cAAcE,IAAKf,CAAAA,MAAM,EAAE,IAAI,CAACA,MAAM,GAAG,IAAA,CAAA;gBAC9CjV,QAASgW,CAAAA,IAAAA,CAAKtB,QAAQ,EAAEsB,IAAAA,CAAKpB,QAAQ,EAAE,IAAI,CAACc,aAAa,EAAA,CAAA,CAAA;AAC3D,aAAA;AACF,SAAA;AACA,QAAA,OAAO,IAAI,CAAA;AACb,KAAA;AACAQ,IAAAA,UAAAA,CAAW/T,IAAY,EAAE;AACvB,QAAA,MAAM6T,IAAO,GAAA,IAAI,CAACD,QAAQ,CAAC5T,IAAAA,CAAAA,CAAAA;QAC3B,IAAI6T,IAAAA,EAAM,OAAOA,IAAAA,CAAKtB,QAAQ,CAAA;AAChC,KAAA;IACAgB,aAAgB,GAAA;;AAEd,QAAA,MAAMO,SAA8B,EAAC,CAAA;AACrC,QAAA,KAAK,MAAM,CAAC9T,IAAAA,CAAK,IAAIqG,MAAOM,CAAAA,OAAO,CAAC,IAAI,CAAC0M,KAAK,CAAA,CAC5CS,MAAM,CAAC9T,IAAAA,CAAK,GAAG,IAAI,CAAC+T,UAAU,CAAC/T,IAAAA,CAAAA,CAAAA;QACjC,OAAO8T,MAAAA,CAAAA;AACT,KAAA;IACA,MAAME,IAAAA,CAAKC,YAA0B,EAAE;QACrC,MAAMC,UAAAA,GAAa,OAAO,EAAEC,KAAAA,GAAQ,IAAI,EAAE,GAAG,EAAE,GAAA;YAC7C,MAAM,IAAI,CAACb,SAAS,EAAA,CAAA;AACpB,YAAA,IAAIa,OAAO,IAAI,CAACvU,MAAM,CAACR,WAAW,CAAC,UAAA,CAAA,CAAA;AACrC,SAAA,CAAA;QACA,IAAI,IAAI,CAAC0T,MAAM,EAAE;YACf,IAAI,CAACA,MAAM,GAAG,KAAA,CAAA;YACd,MAAMnK,MAAAA,CAAOC,OAAO,CAAC;gBACnBE,IAAM,EAAA,mDAAA;gBACNhM,MAAQ,EAAA,IAAI,CAAC8C,MAAM;gBACnBoJ,SAAW,EAAA,UAAA;AACT,oBAAA,MAAMkL,UAAW,CAAA;wBAAEC,KAAO,EAAA,KAAA;AAAM,qBAAA,CAAA,CAAA;;AAElC,iBAAA;gBACApL,QAAU,EAAA,UAAA;oBACR,MAAM,IAAI,CAAC0K,WAAW,EAAA,CAAA;oBACtB,MAAM,IAAI,CAACW,UAAU,CAACH,YAAAA,CAAAA,CAAAA;AACxB,iBAAA;AACF,aAAA,CAAA,CAAA;AACF,SAAA,MAAO,MAAMC,UAAAA,EAAAA,CAAAA;AACf,KAAA;IACA,MAAME,UAAAA,CAAWH,YAA0B,EAAE;AAC3C,QAAA,MAAMhL,IAAO,GAAA,IAAIoL,aAAgBxL,EAAAA,CAAAA,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC7I,IAAI,CAAC,GAAG,CAAC,CAAA,CAAA;AACxD,QAAA,MAAMsU,UAMD,EAAE,CAAA;QAEP,KAAK,MAAM,GAAGT,IAAAA,CAAK,IAAIxN,MAAAA,CAAOM,OAAO,CAAC,IAAI,CAAC0M,KAAK,CAAG,CAAA;AACjD,YAAA,IAAIQ,gBAAgBd,mBAAqB,EAAA;gBACvC,MAAM,EAAE/S,IAAI,EAAE4S,WAAW,EAAErM,MAAM,EAAEgM,QAAQ,EAAE,GAAGsB,IAAAA,CAAAA;gBAEhD,IAAItN,MAAAA,CAAO0M,IAAI,KAAK,CAAK1M,IAAAA,MAAAA,CAAO2B,GAAG,CAAC,IAAS3B,CAAAA,IAAAA,MAAAA,CAAO2B,GAAG,CAAC,KAAQ,CAAA,EAAA;AAC9D,oBAAA,MAAMqM,YAAY,IAAI7N,GAAAA,EAAAA,CAAAA;oBACtB,KAAK,MAAM,CAACpJ,CAAE,CAAA,IAAIiJ,OAAQgO,SAAUxM,CAAAA,GAAG,CAACzK,CAAGA,EAAAA,CAAAA,CAAAA,CAAAA;AAC3CgX,oBAAAA,OAAAA,CAAQlT,IAAI,CAAC;AAAEpB,wBAAAA,IAAAA;AAAMuU,wBAAAA,SAAAA;AAAU,qBAAA,CAAA,CAAA;oBAE/BtL,IAAKuL,CAAAA,MAAM,CAAC5B,WAAaL,EAAAA,QAAAA,CAAAA,CAAAA;iBACpB,MAAA;AACL,oBAAA,MAAMkC,UAAa,GAAA;AAAIlO,wBAAAA,GAAAA,MAAAA;AAAO,qBAAA,CAAA;AAE9B,oBAAA,MAAMgO,YAAY,IAAI7N,GAAAA,EAAAA,CAAAA;AACtB,oBAAA,IAAK,IAAIzF,CAAI,GAAA,CAAA,EAAGA,IAAIwT,UAAWjX,CAAAA,MAAM,EAAEyD,CAAK,EAAA,CAAA;AAC1C,wBAAA,MAAM,CAAC3D,CAAAA,CAAE,GAAGmX,UAAU,CAACxT,CAAE,CAAA,CAAA;wBACzBsT,SAAUxM,CAAAA,GAAG,CAAC9G,CAAG3D,EAAAA,CAAAA,CAAAA,CAAAA;AACnB,qBAAA;AACAgX,oBAAAA,OAAAA,CAAQlT,IAAI,CAAC;AAAEpB,wBAAAA,IAAAA;AAAMuU,wBAAAA,SAAAA;AAAU,qBAAA,CAAA,CAAA;oBAE/BtL,IAAKyL,CAAAA,QAAQ,CACX9B,WAAAA,EACA6B,UAAWpX,CAAAA,GAAG,CAAC,CAACC,CAAAA,GAAMA,CAAC,CAAC,CAAE,CAAA,CAAA,EAC1BmX,WAAWpX,GAAG,CAAC,CAACC,CAAAA,GAAMA,CAAC,CAAC,CAAE,CAAA,CAAA,CAAEqX,SAAS,CAAC,CAACrX,CAAAA,GAAMA,CAAMiV,KAAAA,QAAAA,CAAAA,CAAAA,CAAAA;AAEvD,iBAAA;aACK,MAAA,IAAIsB,gBAAgBxB,eAAiB,EAAA;gBAC1C,MAAM,EAAErS,IAAI,EAAE4S,WAAW,EAAEhI,KAAK,EAAE2H,QAAQ,EAAE,GAAGsB,IAAAA,CAAAA;AAE/C,gBAAA,MAAMU,YAAY,IAAI7N,GAAAA,EAAAA,CAAAA;AACtB,gBAAA,KAAK,MAAMzF,CAAK2J,IAAAA,KAAAA,CAAO2J,SAAUxM,CAAAA,GAAG,CAAC9G,CAAGA,EAAAA,CAAAA,CAAAA,CAAAA;AACxCqT,gBAAAA,OAAAA,CAAQlT,IAAI,CAAC;AAAEpB,oBAAAA,IAAAA;AAAMuU,oBAAAA,SAAAA;AAAU,iBAAA,CAAA,CAAA;gBAE/BtL,IAAK2L,CAAAA,MAAM,CAAChC,WAAAA,EAAahI,KAAMyC,CAAAA,GAAG,EAAEzC,KAAAA,CAAMD,GAAG,EAAEC,KAAME,CAAAA,IAAI,EAAEyH,QAAAA,CAAAA,CAAAA;AAC7D,aAAA;AACF,SAAA;QAEA,MAAMrJ,MAAAA,GAAS,IAAIP,MAAa,CAAA;YAC9BO,MAAQD,EAAAA,IAAAA;YACRK,OAAS,EAAA,UAAA;AACP,gBAAA,IAAI2K,cAAc,MAAMA,YAAAA,CAAaxK,IAAI,CAAC,IAAI,CAAC7J,MAAM,CAAA,CAAA;AACvD,aAAA;AACAsK,YAAAA,QAAAA,EAAU,OAAO4J,MAAAA,GAAAA;AACf,gBAAA,IAAK,IAAIe,SAAY,GAAA,CAAA,EAAGA,YAAYf,MAAOtW,CAAAA,MAAM,EAAEqX,SAAa,EAAA,CAAA;oBAC9D,MAAMC,UAAAA,GAAahB,MAAM,CAACe,SAAU,CAAA,CAAA;oBAEpC,MAAM,EAAE7U,IAAI,EAAEuU,SAAS,EAAE,GAAGD,OAAO,CAACO,SAAU,CAAA,CAAA;;oBAE9C,MAAMhO,KAAAA,GAAQ0N,SAAUrM,CAAAA,GAAG,CAAC4M,UAAAA,CAAAA,CAAAA;oBAC5B,IAAI,CAACpB,UAAU,CAAC1T,IAAM6G,EAAAA,KAAAA,CAAAA,CAAAA;AACxB,iBAAA;gBACA,MAAM,IAAI,CAACmN,IAAI,CAACC,YAAAA,CAAAA,CAAAA;AAClB,aAAA;AACF,SAAA,CAAA,CAAA;AACA,QAAA,MAAM/K,MAAOO,CAAAA,IAAI,CAAC,IAAI,CAAC7J,MAAM,CAAA,CAAA;AAC/B,KAAA;IAvKAmB,WAAYnB,CAAAA,MAAc,EAAEI,IAAY,CAAE;AAM1CqT,QAAAA,IAAAA,CAAAA,KAAAA,GAAoE,EAAC,CAAA;aACrEP,MAAS,GAAA,KAAA,CAAA;QANP,IAAI,CAAC9S,IAAI,GAAGA,IAAAA,CAAAA;QACZ,IAAI,CAAC4Q,EAAE,GAAGvJ,QAASC,CAAAA,IAAI,CAAC1H,MAAAA,EAAQ,CAAC,eAAe,EAAEI,IAAAA,CAAK,CAAC,CAAA,CAAA;QACxD,IAAI,CAACJ,MAAM,GAAGA,MAAAA,CAAAA;AAChB,KAAA;AAoKF;;ACjLO,MAAMmV,eAAAA,CAAAA;AAUX5B,IAAAA,OAAAA,CAAQC,IAAkD,EAAE;AAC1D,QAAA,IAAI,CAAC4B,MAAM,CAAC5W,GAAG,CAACgV,IAAAA,CAAAA,CAAAA;AAChB,QAAA,OAAO,IAAI,CAAA;AACb,KAAA;AACA6B,IAAAA,WAAAA,CAAYrV,MAAc,EAAE;AAC1B,QAAA,IAAI,IAAI,CAACL,OAAO,CAACyI,GAAG,CAACpI,MAAS,CAAA,EAAA,OAAO,IAAI,CAACL,OAAO,CAAC2I,GAAG,CAACtI,MAAAA,CAAAA,CAAAA;AACtD,QAAA,MAAMsV,YAAY,IAAIhC,YAAAA,CAAatT,MAAQ,EAAA,IAAI,CAACI,IAAI,CAAA,CAAA;AACpD,QAAA,KAAK,MAAM6T,IAAAA,IAAQ,IAAI,CAACmB,MAAM,CAAE;;AAE9BnB,YAAAA,IAAAA,CAAKlB,OAAO,GAAG/S,MAAAA,CAAAA;;AAEfsV,YAAAA,SAAAA,CAAU/B,OAAO,CAACU,IAAAA,CAAAA,CAAAA;AACpB,SAAA;AAEA,QAAA,IAAI,CAACtU,OAAO,CAACwI,GAAG,CAACnI,MAAQsV,EAAAA,SAAAA,CAAAA,CAAAA;QACzB,OAAOA,SAAAA,CAAAA;AACT,KAAA;AACA,IAAA,MAAMC,eAAkB,GAAA;AACtB,QAAA,MAAMvV,SAAS,MAAMN,8BAAAA,EAAAA,CAAAA;QACrB,OAAO,IAAI,CAAC2V,WAAW,CAACrV,MAAAA,CAAAA,CAAAA;AAC1B,KAAA;AACA,IAAA,MAAM+Q,IAAO,GAAA;AACX,QAAA,MAAMyE,WAAW,IAAI1O,GAAAA,EAAAA,CAAAA;QACrB,KAAK,MAAM,CAAC9G,MAAQsV,EAAAA,SAAAA,CAAU,IAAI,IAAI,CAAC3V,OAAO,CAAE;YAC9C,MAAMuU,MAAAA,GAAS,MAAMoB,SAAAA,CAAUvE,IAAI,EAAA,CAAA;YACnCyE,QAASrN,CAAAA,GAAG,CAACnI,MAAQkU,EAAAA,MAAAA,CAAAA,CAAAA;AACvB,SAAA;QACA,IAAI,CAACmB,WAAW,GAAG,IAAA;AACjB,YAAA,MAAM,IAAIlX,KAAM,CAAA,0CAAA,CAAA,CAAA;AAClB,SAAA,CAAA;QACA,OAAOqX,QAAAA,CAAAA;AACT,KAAA;AACAC,IAAAA,SAAAA,CAAUzV,MAAc,EAAE;AACxB,QAAA,MAAM0V,eAAe,IAAI,CAAC/V,OAAO,CAAC2I,GAAG,CAACtI,MAAAA,CAAAA,CAAAA;AAEtC,QAAA,IAAI,CAAC0V,YAAAA,EAAc,MAAM,IAAIvX,KAAM,CAAA,4BAAA,CAAA,CAAA;QAEnC,OAAOuX,YAAAA,CAAAA;AACT,KAAA;AA7CAvU,IAAAA,WAAAA,CAAYf,IAAY,CAAE;AAI1BT,QAAAA,IAAAA,CAAAA,OAAAA,GAAU,IAAImH,GAAAA,EAAAA,CAAAA;AACdsO,QAAAA,IAAAA,CAAAA,MAAAA,GAAS,IAAItY,GAAAA,EAAAA,CAAAA;QAJX,IAAI,CAACsD,IAAI,GAAGA,IAAAA,CAAAA;AACd,KAAA;AA4CF;;ACnDO,MAAMuV,aAAAA,CAAAA;AAGXC,IAAAA,kBAAAA,CAAmBxV,IAAY,EAAE;QAC/B,MAAMyV,UAAAA,GAAa,IAAIV,eAAgB/U,CAAAA,IAAAA,CAAAA,CAAAA;AACvC,QAAA,IAAI,CAACyV,UAAU,CAAC1N,GAAG,CAAC/H,IAAMyV,EAAAA,UAAAA,CAAAA,CAAAA;QAC1B,OAAOA,UAAAA,CAAAA;AACT,KAAA;AACAC,IAAAA,aAAAA,CAAc1V,IAAY,EAAE;AAC1B,QAAA,MAAM2V,YAAY,IAAI,CAACF,UAAU,CAACvN,GAAG,CAAClI,IAAAA,CAAAA,CAAAA;AAEtC,QAAA,IAAI,CAAC2V,SAAAA,EAAW,MAAM,IAAI5X,KAAM,CAAA,sBAAA,CAAA,CAAA;QAEhC,OAAO4X,SAAAA,CAAAA;AACT,KAAA;IACA,MAAMvB,UAAAA,CAAWxU,MAAc,EAAE;AAC/B,QAAA,MAAMqJ,OAAO,IAAI2M,cAAAA,EAAAA,CACd/M,KAAK,CAAC,MAAA,CAAA,CACNC,IAAI,CAAC,WAAA,CAAA,CAAA;AACR,QAAA,MAAMwL,UAAoB,EAAE,CAAA;AAC5B,QAAA,KAAK,MAAM,CAACtU,IAAAA,CAAK,IAAI,IAAI,CAACyV,UAAU,CAAE;AACpCnB,YAAAA,OAAAA,CAAQlT,IAAI,CAACpB,IAAAA,CAAAA,CAAAA;YACbiJ,IAAK4M,CAAAA,MAAM,CAAC7V,IAAAA,CAAAA;;AACd,SAAA;QAEA,MAAMkJ,MAAAA,GAAS,IAAIP,MAAO,CAAA;YACxBO,MAAQD,EAAAA,IAAAA;AACRqB,YAAAA,QAAAA,EAAU,OAAOF,SAAAA,GAAAA;gBACf,MAAMpK,IAAAA,GAAOsU,OAAO,CAAClK,SAAU,CAAA,CAAA;gBAC/B,MAAM,IAAI,CAACsL,aAAa,CAAC1V,MAAMqV,SAAS,CAACzV,MAAQwU,CAAAA,CAAAA,UAAU,CAAClL,MAAAA,CAAAA,CAAAA;AAC9D,aAAA;AACF,SAAA,CAAA,CAAA;QACA,MAAMA,MAAAA,CAAOO,IAAI,CAAC7J,MAAAA,CAAAA,CAAAA;AACpB,KAAA;;AAhCA6V,QAAAA,IAAAA,CAAAA,UAAAA,GAAa,IAAI/O,GAAAA,EAAAA,CAAAA;;AAiCnB;;ACrCO,MAAMoP,aAAgB,GAAA,IAAIP,aAAe,EAAA;;ACIhD5Y,QAAAA,CAASe,QAAQ,CAAC,GAAK,EAAA,QAAA,EAAU,OAAOO,IAAMU,EAAAA,MAAAA,GAAAA;IAC5C,OAAQV,IAAI,CAAC,CAAE,CAAA;QACb,KAAK,QAAA,CAAA;QACL,KAAK,IAAA,CAAA;QACL,KAAK4H,SAAAA;AAAW,YAAA;;AAEd,gBAAA,MAAM7I,QAAS,CAAA,IAAM8Y,aAAc1B,CAAAA,UAAU,CAACzV,MAAAA,CAAAA,CAAAA,CAAAA;AAC9C,gBAAA,MAAA;AACF,aAAA;AACA,QAAA;AAAS,YAAA;AACP,gBAAA,MAAMO,aAAa,QAAUP,EAAAA,MAAAA,CAAAA,CAAAA;AAC/B,aAAA;AACF,KAAA;AACF,CAAA,CAAA;;ACbA,eAAeoX,uBAAuBvX,KAA0B,EAAA;IAC9D,MAAMoB,MAAAA,GAASpB,MAAMwX,UAAU,CAAA;IAC/B,MAAMC,OAAAA,GAAU,IAAIC,OAAQtW,CAAAA,MAAAA,CAAAA,CAAAA;IAE5B,MAAMqW,OAAAA,CAAQlO,GAAG,CAAC;QAChB/H,IAAM,EAAA,WAAA;QACNmW,MAAQ,EAAA;YACNtF,UAAY,EAAA,IAAA;YACZC,KAAO,EAAA,IAAA;AACT,SAAA;AACF,KAAA,CAAA,CAAA;AACF,CAAA;AAEO,MAAMqF,MAASL,GAAAA,aAAAA,CACnBN,kBAAkB,CAAC,KAAA,CAAA,CACnBrC,OAAO,CAAC;IACPnT,IAAM,EAAA,iBAAA;IACN4S,WAAa,EAAA,qBAAA;IACbrM,MAAQ,EAAA;AAAC,QAAA;AAAC,YAAA,IAAA;AAAK,SAAA;AAAE,QAAA;AAAC,YAAA,KAAA;AAAM,SAAA;AAAC,KAAA;IACzBsM,YAAc,EAAA,IAAA;IACdH,MAAQ,EAAA;QACN0D,OAAS,EAAA,CAAC7D,UAAUE,QAClBtW,GAAAA,OAAAA,CAAQka,IAAI,CAAC,6BAAA,EAA+B5D,UAAU,IAAMF,EAAAA,QAAAA,CAAAA;AAChE,KAAA;AACF,CAAA,CAAA,CACCY,OAAO,CAAC;IACPnT,IAAM,EAAA,kBAAA;IACN4S,WAAa,EAAA,cAAA;IACbrM,MAAQ,EAAA;AAAC,QAAA;AAAC,YAAA,IAAA;AAAK,SAAA;AAAE,QAAA;AAAC,YAAA,KAAA;AAAM,SAAA;AAAC,KAAA;IACzBsM,YAAc,EAAA,IAAA;IACdH,MAAQ,EAAA;AACN0D,QAAAA,OAAAA,EAAS,CAAC7D,QAAUE,EAAAA,QAAAA,GAAAA;AAClBtW,YAAAA,OAAAA,CAAQka,IAAI,CAAC,8BAAgC5D,EAAAA,QAAAA,EAAU,IAAMF,EAAAA,QAAAA,CAAAA,CAAAA;YAE7D,IAAIA,QAAAA,EACFjW,MAAMmD,WAAW,CAAC6W,SAAS,CAAC/X,SAAS,CAACwX,sBAAwB,EAAA;gBAC5DQ,WAAa,EAAA;AAAC,oBAAA,kBAAA;AAAmB,iBAAA;AACnC,aAAA,CAAA,CAAA;AACGja,iBAAAA,KAAAA,CAAMmD,WAAW,CAAC6W,SAAS,CAACzW,WAAW,CAACkW,sBAAAA,CAAAA,CAAAA;AAC/C,SAAA;AACF,KAAA;AACF,CAAA,CAAA,CACC5C,OAAO,CAAC;IACPnT,IAAM,EAAA,UAAA;IACN4S,WAAa,EAAA,iBAAA;IACbrM,MAAQ,EAAA;AAAC,QAAA;AAAC,YAAA,IAAA;AAAK,SAAA;AAAE,QAAA;AAAC,YAAA,KAAA;AAAM,SAAA;AAAC,KAAA;IACzBsM,YAAc,EAAA,KAAA;IACdC,MAAQ,EAAA,IAAA;IACRJ,MAAQ,EAAA;QACN0D,OAAS,EAAA,CAAC7D,UAAUE,QAClBtW,GAAAA,OAAAA,CAAQka,IAAI,CAAC,sBAAA,EAAwB5D,UAAU,IAAMF,EAAAA,QAAAA,CAAAA;AACzD,KAAA;AACF,CAAA,CAAA,CACCY,OAAO,CAAC;IACPnT,IAAM,EAAA,UAAA;IACN4S,WAAa,EAAA,iBAAA;IACbrM,MAAQ,EAAA;AAAC,QAAA;AAAC,YAAA,IAAA;AAAK,SAAA;AAAE,QAAA;AAAC,YAAA,KAAA;AAAM,SAAA;AAAC,KAAA;IACzBsM,YAAc,EAAA,KAAA;IACdC,MAAQ,EAAA,IAAA;IACRJ,MAAQ,EAAA;QACN0D,OAAS,EAAA,CAAC7D,UAAUE,QAClBtW,GAAAA,OAAAA,CAAQka,IAAI,CAAC,sBAAA,EAAwB5D,UAAU,IAAMF,EAAAA,QAAAA,CAAAA;AACzD,KAAA;AACF,CAAE,CAAA;;AC7DG,MAAM2D,OAAAA,CAAAA;IAgBX,MAAMnO,GAAAA,CAAI,EACR/H,IAAO,GAAA,SAAS,EAChBmW,MAAS,GAAA,EAAE,EAOZ,EAAE;QACD,MAAMpF,IAAAA,GAAO,MAAM,IAAI,CAACyF,QAAQ,CAACzO,GAAG,CAAC1B,MAAOoQ,CAAAA,MAAM,CAAC;AAAEzW,YAAAA,IAAAA;SAAQmW,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA;AAC7D,QAAA,IAAInW,IAAS,KAAA,UAAA,IAAcA,IAAS,KAAA,WAAA,EAAa,OAAO;AAAE+Q,YAAAA,IAAAA;AAAK,SAAA,CAAA;AACjE,KAAA;AACA,IAAA,MAAME,MAAO,CAAA,EAAEjR,IAAO,GAAA,SAAS,EAAE,EAAE;AACjC,QAAA,OAAO,MAAM,IAAI,CAACwW,QAAQ,CAACvF,MAAM,CAACjR,IAAAA,CAAAA,CAAAA;AACpC,KAAA;AACA,IAAA,MAAM0W,QAAS,CAAA,EAAE1W,IAAO,GAAA,SAAS,EAAE,EAAE;AACnC,QAAA,MAAM+Q,OAAO,MAAM,IAAI,CAACyF,QAAQ,CAACtO,GAAG,CAAClI,IAAAA,CAAAA,CAAAA;AACrC,QAAA,IAAI+Q,IAAM,EAAA;YACR,IACE,IAAI,CAACuE,YAAY,CAACvB,UAAU,CAAC,iBAAA,CAAA,IAC7B/T,SAAS,WACT,EAAA;gBACA,MAAM,IAAI,CAAC+H,GAAG,CAAC;oBACb/H,IAAM,EAAA,UAAA;oBACNmW,MAAQ,EAAA;wBACNtF,UAAY,EAAA,IAAA;wBACZC,KAAO,EAAA,IAAA;AACT,qBAAA;AACF,iBAAA,CAAA,CAAA;AACF,aAAA;YACA,MAAM9T,QAAAA,CAAS,IACb,IAAI,CAAC4C,MAAM,CAAC8W,QAAQ,CAAC3F,IAAKT,CAAAA,QAAQ,EAAE;AAClCC,oBAAAA,SAAAA,EAAWQ,KAAKR,SAAS;oBACzBoG,cAAgB,EAAA,KAAA;oBAChBC,YAAc,EAAA,KAAA;AAChB,iBAAA,CAAA,CAAA,CAAA;YAEF,OAAO;AAAE7F,gBAAAA,IAAAA;AAAK,aAAA,CAAA;AAChB,SAAA;AACF,KAAA;AACA,IAAA,MAAM8F,WAAY,CAAA,EAChBC,KAAQ,GAAA,EAAE,EAGX,EAAE;QACD,KAAK,MAAM9W,QAAQ8W,KAAO,CAAA;AACxB,YAAA,MAAMhD,MAAS,GAAA,MAAM,IAAI,CAAC4C,QAAQ,CAAC;AAAE1W,gBAAAA,IAAAA;AAAK,aAAA,CAAA,CAAA;AAC1C,YAAA,IAAI8T,QAAQ,OAAOA,MAAAA,CAAAA;AACrB,SAAA;AACF,KAAA;IACAiD,IAAO,GAAA;AACL,QAAA,MAAMC,KAAQ,GAAA,IAAI,CAACR,QAAQ,CAACjO,MAAM,EAAGlL,CAAAA,GAAG,CAAC,CAAC,EAAE6T,IAAI,EAAE,GAAKA,IAAAA,CAAAA,CAAAA;QACvD,IAAI8F,KAAAA,CAAMxZ,MAAM,EAAE,OAAO;YAAEyZ,GAAKD,EAAAA,KAAAA;AAAM,SAAA,CAAA;AACxC,KAAA;AAjEAjW,IAAAA,WAAAA,CAAYnB,MAAc,CAAE;QAC1B,IAAI,CAACA,MAAM,GAAGA,MAAAA,CAAAA;AACd,QAAA,IAAI,CAAC0V,YAAY,GAAGa,MAAAA,CAAOd,SAAS,CAACzV,MAAAA,CAAAA,CAAAA;QAErC,MAAM4W,QAAAA,GAAW/F,oBAAqBvI,CAAAA,GAAG,CAACtI,MAAAA,CAAAA,CAAAA;AAE1C,QAAA,IAAI,CAAC4W,QAAAA,EAAU,MAAM,IAAIzY,KAAM,CAAA,4BAAA,CAAA,CAAA;QAE/B,IAAI,CAACyY,QAAQ,GAAGA,QAAAA,CAAAA;AAClB,KAAA;AAyDF;;ACtEA,MAAMU,YAAe,GAAA;AACnB,IAAA,KAAA;AACA,IAAA,IAAA;AACA,IAAA,QAAA;AACA,IAAA,IAAA;AACA,IAAA,IAAA;AACA,IAAA,MAAA;AACA,IAAA,IAAA;AACA,IAAA,IAAA;AACA,IAAA,MAAA;AACA,IAAA,IAAA;AACA,IAAA,IAAA;AACA,IAAA,MAAA;AACA,IAAA,IAAA;AACA,IAAA,QAAA;AACA,IAAA,KAAA;AACA,IAAA,IAAA;AACD,CAAA,CAAA;AAEM,eAAeC,UAAAA,CAAWlZ,IAAc,EAAEU,MAAqB,EAAA;AACpE,IAAA,IAAIA,kBAAkByY,MAAQ,EAAA;AAC5B,QAAA,MAAMpX,IAAO/B,GAAAA,IAAI,CAAC,CAAA,CAAE,IAAI,SAAA,CAAA;QACxB,MAAMgY,OAAAA,GAAU,IAAIC,OAAQvX,CAAAA,MAAAA,CAAAA,CAAAA;QAE5B,OAAQV,IAAI,CAAC,CAAE,CAAA;YACb,KAAK,KAAA,CAAA;YACL,KAAK,IAAA;AAAM,gBAAA;AACT,oBAAA,IAAIiZ,YAAa9E,CAAAA,QAAQ,CAACpS,IAAAA,CAAAA,IAASA,SAAS,UAC1C,EAAA,MAAMd,YAAa,CAAA,CAAC,UAAU,EAAEc,IAAK,CAAA,KAAK,CAAC,EAAErB,MAAAA,CAAAA,CAAAA;AAE/C,oBAAA,MAAMmV,MAAS,GAAA,MAAMmC,OAAQlO,CAAAA,GAAG,CAAC;AAC/B/H,wBAAAA,IAAAA;wBACAmW,MAAQ,EAAA;4BACNtF,UACE5S,EAAAA,IAAI,CAAC,CAAA,CAAE,KAAK,MAAA,GACR,IACAA,GAAAA,IAAI,CAAC,CAAA,CAAE,KAAK,OAAA,GACV,KACA4H,GAAAA,SAAAA;AACV,yBAAA;AACF,qBAAA,CAAA,CAAA;AAEA,oBAAA,IAAIiO,MAAQnV,EAAAA,MAAAA,CAAOS,WAAW,CAAC,CAAC,KAAK,EAAEY,IAAAA,CAAK,GAAG,EAAE8T,MAAO/C,CAAAA,IAAI,CAAC,CAAC,CAAA,CAAA;AAE9D,oBAAA,MAAA;AACF,iBAAA;YACA,KAAK,QAAA,CAAA;YACL,KAAK,IAAA,CAAA;YACL,KAAK,IAAA;AAAM,gBAAA;AACT,oBAAA,MAAM+C,MAAS,GAAA,MAAMmC,OAAQhF,CAAAA,MAAM,CAAC;AAAEjR,wBAAAA,IAAAA;AAAK,qBAAA,CAAA,CAAA;oBAE3C,IAAI8T,MAAAA,KAAW,MAAMnV,MAAOS,CAAAA,WAAW,CAAC,CAAC,KAAK,EAAEY,IAAAA,CAAK,CAAC,CAAA,CAAA;yBACjD,IAAI8T,MAAAA,KAAW,OAClB,MAAM5U,YAAAA,CAAa,CAAC,SAAS,EAAEc,IAAK,CAAA,CAAC,EAAErB,MAAAA,CAAAA,CAAAA;AAEzC,oBAAA,MAAA;AACF,iBAAA;YACA,KAAK,MAAA,CAAA;YACL,KAAK,IAAA,CAAA;YACL,KAAK,IAAA;AAAM,gBAAA;AACT,oBAAA,MAAMmV,MAAS,GAAA,MAAMmC,OAAQY,CAAAA,WAAW,CAAC;wBACvCC,KAAO,EAAA;AAAC,4BAAA,WAAA;AAAa,4BAAA,UAAA;AAAW,yBAAA;AAClC,qBAAA,CAAA,CAAA;oBAEA,IAAIhD,MAAAA,EAAQnV,MAAOS,CAAAA,WAAW,CAAC,CAAC,KAAK,EAAE0U,MAAAA,CAAO/C,IAAI,CAAC,CAAC,CAAA,CAAA;AAC/C,yBAAA,MAAM7R,aAAa,aAAeP,EAAAA,MAAAA,CAAAA,CAAAA;AAEvC,oBAAA,MAAA;AACF,iBAAA;YACA,KAAK,MAAA,CAAA;YACL,KAAK,IAAA,CAAA;YACL,KAAK,IAAA;AAAM,gBAAA;oBACT,MAAMmV,MAAAA,GAASmC,QAAQc,IAAI,EAAA,CAAA;AAE3B,oBAAA,IAAIjD,MAAQ,EAAA;wBACVA,MAAOmD,CAAAA,GAAG,CAACI,OAAO,CAAC,SAAA,CAAA,CAAA;AACnB1Y,wBAAAA,MAAAA,CAAOS,WAAW,CAAC0U,MAAAA,CAAOmD,GAAG,CAACpV,IAAI,CAAC,MAAA,CAAA,CAAA,CAAA;qBAC9BlD,MAAAA,MAAAA,CAAOS,WAAW,CAAC,UAAA,CAAA,CAAA;AAE1B,oBAAA,MAAA;AACF,iBAAA;YACA,KAAK,MAAA,CAAA;YACL,KAAK,IAAA;AAAM,gBAAA;;AAETT,oBAAAA,MAAAA,CAAOS,WAAW,CAAC,QAAA,CAAA,CAAA;AACnB,oBAAA,MAAA;AACF,iBAAA;YACA,KAAK,QAAA,CAAA;YACL,KAAK,KAAA,CAAA;YACL,KAAK,IAAA;AAAM,gBAAA;AACT,oBAAA,MAAMpC,SAAS,IAAMmZ,MAAAA,CAAOd,SAAS,CAAC1W,QAAQyV,UAAU,EAAA,CAAA,CAAA;AACxD,oBAAA,MAAA;AACF,iBAAA;AACA,YAAA;AAAS,gBAAA;AACP,oBAAA,MAAMN,MAAS,GAAA,MAAMmC,OAAQS,CAAAA,QAAQ,CAAC;wBAAE1W,IAAM/B,EAAAA,IAAI,CAAC,CAAE,CAAA;AAAC,qBAAA,CAAA,CAAA;oBAEtD,IAAI6V,MAAAA,EAAQnV,MAAOS,CAAAA,WAAW,CAAC,CAAC,KAAK,EAAE0U,MAAAA,CAAO/C,IAAI,CAAC,CAAC,CAAA,CAAA;yBAC/C,MAAM7R,YAAAA,CAAa,CAAC,YAAY,EAAEjB,IAAI,CAAC,CAAA,CAAE,CAAC,CAAC,EAAEU,MAAAA,CAAAA,CAAAA;AACpD,iBAAA;AACF,SAAA;AACF,KAAA;AAEA,IAAA,MAAM,IAAIZ,KAAM,CAAA,0BAAA,CAAA,CAAA;AAClB,CAAA;AAEO,eAAeuZ,WAAAA,CAAYC,CAAW,EAAE5Y,MAAqB,EAAA;AAClE,IAAA,IAAIA,kBAAkByY,MAAQ,EAAA;QAC5B,IAAIjB,MAAAA,CAAOd,SAAS,CAAC1W,MAAQoV,CAAAA,CAAAA,UAAU,CAAC,UAAA,CAAA,EACtC,MAAMpX,QAAAA,CAASK,QAAQ,CAAC,WAAa2B,EAAAA,MAAAA,CAAAA,CAAAA;AAClCA,aAAAA,MAAAA,CAAOS,WAAW,CAAC,SAAA,CAAA,CAAA;AAC1B,KAAA;AAEA,IAAA,MAAM,IAAIrB,KAAM,CAAA,0BAAA,CAAA,CAAA;AAClB,CAAA;AAEO,eAAeyZ,WAAAA,CAAYvZ,IAAc,EAAEU,MAAqB,EAAA;AACrE,IAAA,IAAIA,kBAAkByY,MAAQ,EAAA;AAC5B,QAAA,IAAIjB,OAAOd,SAAS,CAAC1W,MAAQoV,CAAAA,CAAAA,UAAU,CAAC,UAAa,CAAA,EAAA;YACnD,OAAQ9V,IAAI,CAAC,CAAE,CAAA;gBACb,KAAK,KAAA;AAAO,oBAAA;wBACV,MAAMtB,QAAAA,CAASK,QAAQ,CAAC,mBAAqB2B,EAAAA,MAAAA,CAAAA,CAAAA;AAC7C,wBAAA,MAAA;AACF,qBAAA;AACA,gBAAA;AAAS,oBAAA;wBACP,MAAMhC,QAAAA,CAASK,QAAQ,CAAC,eAAiB2B,EAAAA,MAAAA,CAAAA,CAAAA;AAC3C,qBAAA;AACF,aAAA;SACKA,MAAAA,MAAAA,CAAOS,WAAW,CAAC,SAAA,CAAA,CAAA;AAC5B,KAAA;AAEA,IAAA,MAAM,IAAIrB,KAAM,CAAA,0BAAA,CAAA,CAAA;AAClB;;ACnIAoY,MACGhB,CAAAA,eAAe,EACfsC,CAAAA,IAAI,CAAC,IAAA;AACJ,IAAA,KAAK,MAAM7X,MAAAA,IAAUtD,KAAMkD,CAAAA,aAAa,EAAI,CAAA;AAC1C2W,QAAAA,MAAAA,CAAOlB,WAAW,CAACrV,MAAAA,CAAAA,CAAAA;AACrB,KAAA;AACF,CACC6X,CAAAA,CAAAA,IAAI,CAAC,IAAMtB,MAAAA,CAAOxF,IAAI,EACtB8G,CAAAA,CAAAA,IAAI,CAAC,CAACC,MAAAA,GAAAA;;;AAGL,IAAA,KAAK,MAAM9X,MAAU8X,IAAAA,MAAAA,CAAOpR,IAAI,EAAIoK,CAAAA,KAAAA,CAAMC,IAAI,CAAC/Q,MAAAA,CAAAA,CAAAA;IAE/CjD,QAASe,CAAAA,QAAQ,CAAC,GAAA,EAAK,KAAOyZ,EAAAA,UAAAA,CAAAA,CAAAA;AAE9B,IAAA,MAAM5Q,MAAS,GAAA;AAAImR,QAAAA,GAAAA,MAAAA,CAAOnR,MAAM,EAAA;AAAG,KAAA,CAAA;AACnC,IAAA,IAAIA,MAAOoR,CAAAA,IAAI,CAAC,CAAC,EAAEC,QAAQ,EAAE,GAAKA,QAChCjb,CAAAA,EAAAA,QAAAA,CAASe,QAAQ,CAAC,KAAK,MAAQ4Z,EAAAA,WAAAA,CAAAA,CAAAA;AACjC,IAAA,IAAI/Q,MAAOoR,CAAAA,IAAI,CAAC,CAAC,EAAEE,QAAQ,EAAE,GAAKA,QAChClb,CAAAA,EAAAA,QAAAA,CAASe,QAAQ,CAAC,KAAK,MAAQ8Z,EAAAA,WAAAA,CAAAA,CAAAA;AACnC,CACC5Y,CAAAA,CAAAA,KAAK,CAAC5C,aAAAA,CAAcC,KAAK,CAAA","x_google_ignoreList":[3,4,5,6]}