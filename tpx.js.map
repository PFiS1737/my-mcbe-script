{"version":3,"file":"tpx.js","sources":["../src/lib/BetterConsole.class.ts","../src/lib/util/index.ts","../src/lib/commands/Commands.class.ts","../src/lib/util/game.ts","../node_modules/.pnpm/crypt@0.0.2/node_modules/crypt/crypt.js","../node_modules/.pnpm/charenc@0.0.2/node_modules/charenc/charenc.js","../node_modules/.pnpm/is-buffer@1.1.6/node_modules/is-buffer/index.js","../node_modules/.pnpm/md5@2.3.0/node_modules/md5/md5.js","../node_modules/.pnpm/randombytes@2.1.0/node_modules/randombytes/index.js","../node_modules/.pnpm/serialize-javascript@6.0.2/node_modules/serialize-javascript/index.js","../src/lib/database/Database.class.ts","../src/lib/dialog/Dialog.class.ts","../src/lib/util/math.ts","../src/lib/vector/VectorN.class.ts","../src/lib/vector/VectorNUtils.class.ts","../src/lib/vector/Vector3Utils.class.ts","../src/lib/vector/Vector3.class.ts","../src/lib/location/Location.class.ts","../src/lib/location/LocationInfo.class.ts","../src/script/tpx/db.ts","../src/lib/EventEmitter.class.ts","../src/lib/NumberRange.class.ts","../src/lib/option-manager/OptionItemRange.class.ts","../src/lib/option-manager/OptionItemSelection.class.ts","../src/lib/option-manager/PlayerOption.class.ts","../src/lib/option-manager/OptionNamespace.class.ts","../src/lib/option-manager/OptionManager.class.ts","../src/lib/option-manager/manager.ts","../src/lib/option-manager/command.ts","../src/script/tpx/option.ts","../src/script/tpx/Handler.class.ts","../src/script/tpx/command.ts","../src/script/tpx/index.ts"],"sourcesContent":["export class BetterConsole {\n  static error(err) {\n    console.error(`${err}\\n${err.stack}`)\n  }\n}\n","export function each(target, callbackfn, thisArg) {\n  if (Array.isArray(target)) target.forEach(callbackfn, thisArg)\n  else if (target?.[Symbol.iterator])\n    for (const item of target) callbackfn.call(thisArg, item, target)\n  else if (typeof target === \"object\")\n    each(Object.keys(target), (key, i) =>\n      callbackfn.call(thisArg, target[key], key, i, target)\n    )\n}\n\nexport async function eachAsync(target, asyncfn, thisArg) {\n  if (Array.isArray(target))\n    for (let i = 0; i < target.length; i++)\n      await asyncfn.call(thisArg, target[i], i, target)\n  else if (target?.[Symbol.iterator])\n    for (const item of target) await asyncfn.call(thisArg, item, target)\n  else if (typeof target === \"object\")\n    await eachAsync(\n      Object.keys(target),\n      async (key, i) => await asyncfn.call(thisArg, target[key], key, i, target)\n    )\n}\n\nexport function safeEval(code, context = {}) {\n  const fn = new Function(...Object.keys(context), `return ${code}`)\n  return fn(...Object.values(context))\n}\n\nexport function deserialize(str) {\n  try {\n    return JSON.parse(str)\n  } catch (err) {\n    // console.warn(`Could not use \\`JSON.parse()\\` to deserialise the string, trying \\`safeEval()\\`.`, { string: str })\n    return safeEval(`(${str})`)\n  }\n}\n\nexport const AsyncFunction = (async () => {}).constructor\nexport function isAsyncFunc(func) {\n  return func[Symbol.toStringTag] === \"AsyncFunction\"\n}\n\nexport function arraySample(arr) {\n  return arr[Math.floor(Math.random() * arr.length)]\n}\n\nexport function arrayAt(arr, index) {\n  return index >= 0 ? arr[index] : arr[arr.length + index]\n}\n\nexport function toCamelCase(str) {\n  return str.replace(/(\\w)[\\. _-](\\w)/g, (_, $1, $2) => $1 + $2.toUpperCase())\n}\n","import {\n  Dimension,\n  Entity,\n  MinecraftDimensionTypes,\n  world,\n} from \"@minecraft/server\"\n\n// import { Parser } from \"mcbe-command-parser\"\n\nimport { BetterConsole } from \"../BetterConsole.class\"\nimport { eachAsync } from \"../util/index\"\n\nconst overworld = world.getDimension(MinecraftDimensionTypes.overworld)\n\nconst CUSTOM_COMMAND_SET = new Set()\n\nexport class Commands {\n  static run(commandString, target = overworld) {\n    // @ts-ignore\n    if (target instanceof Dimension || target instanceof Entity)\n      return target.runCommand(commandString)\n    throw new TypeError(\"Target must be Entity or Dimension.\")\n  }\n  static async asyncRun(commandString, target = overworld) {\n    // @ts-ignore\n    if (target instanceof Dimension || target instanceof Entity) {\n      const customCommands = [...CUSTOM_COMMAND_SET]\n        .filter(({ regex }) => regex.test(commandString))\n        .map((e) => e.runner)\n      if (customCommands.length)\n        await eachAsync(\n          customCommands,\n          async (runner) => await runner(commandString, target)\n        )\n      else return await target.runCommandAsync(commandString)\n    } else throw new TypeError(\"Target must be Entity or Dimension.\")\n  }\n  static register(prefix, command, /* grammar, */ callback) {\n    if (prefix.startsWith(\"/\"))\n      throw new Error(\"Unable to register slash commands.\")\n\n    const regex = new RegExp(`^${prefix}${command}( |$)`)\n    const runner = async (commandString, target) => {\n      // callback(new Parser(commandString, grammar), target)\n      const argv = commandString\n        .split(/(\".*?\"|[^\"\\s]+)+(?=\\s*|\\s*$)/g)\n        .filter((e) => e.trim().length > 0)\n      await callback(argv, target)\n    }\n\n    CUSTOM_COMMAND_SET.add({ regex, runner })\n\n    world.beforeEvents.chatSend.subscribe((event) => {\n      if (regex.test(event.message)) {\n        event.cancel = true\n\n        runner(event.message, event.sender).catch(BetterConsole.error)\n      }\n    })\n  }\n}\n\nexport default Commands\n","import { system, world } from \"@minecraft/server\"\n\nexport const sleepAsync = (ms) =>\n  // @ts-ignore\n  new Promise((resolve) => system.runTimeout(resolve, ms))\n\nexport function asyncRun(fn) {\n  return new Promise((resolve, reject) => {\n    system.run(() => {\n      try {\n        resolve(fn())\n      } catch (err) {\n        reject(err)\n      }\n    })\n  })\n}\n\nexport function errorHandler(errText, target) {\n  const err = new Error(errText)\n  target.sendMessage(err.toString())\n  return err\n}\n\nexport function waitForFirstPlayerInitialSpawn() {\n  const players = world.getAllPlayers()\n  if (players.length) return Promise.resolve(players[0])\n\n  return new Promise((resolve) => {\n    const callback = world.afterEvents.playerSpawn.subscribe((event) => {\n      if (event.initialSpawn) resolve(event.player)\n      world.afterEvents.playerSpawn.unsubscribe(callback)\n    })\n  })\n}\n\nexport function getOrAddObjective(id, name) {\n  const objective = world.scoreboard.getObjective(id)\n  if (!objective && !name) throw new Error(`Couldn't find objective \"${id}\".`)\n  if (!objective) return world.scoreboard.addObjective(id, name)\n  return objective\n}\n\nexport function removeMinecraftNamespace(identifier) {\n  return identifier.replace(/^minecraft\\:/, \"\")\n}\n\nexport function addMinecraftNamespaceIfNeed(identifier) {\n  return /^(.+)\\:/.test(identifier) ? identifier : `minecraft:${identifier}`\n}\n","(function() {\n  var base64map\n      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n\n  crypt = {\n    // Bit-wise rotation left\n    rotl: function(n, b) {\n      return (n << b) | (n >>> (32 - b));\n    },\n\n    // Bit-wise rotation right\n    rotr: function(n, b) {\n      return (n << (32 - b)) | (n >>> b);\n    },\n\n    // Swap big-endian to little-endian and vice versa\n    endian: function(n) {\n      // If number given, swap endian\n      if (n.constructor == Number) {\n        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;\n      }\n\n      // Else, assume array and swap all items\n      for (var i = 0; i < n.length; i++)\n        n[i] = crypt.endian(n[i]);\n      return n;\n    },\n\n    // Generate an array of any length of random bytes\n    randomBytes: function(n) {\n      for (var bytes = []; n > 0; n--)\n        bytes.push(Math.floor(Math.random() * 256));\n      return bytes;\n    },\n\n    // Convert a byte array to big-endian 32-bit words\n    bytesToWords: function(bytes) {\n      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\n        words[b >>> 5] |= bytes[i] << (24 - b % 32);\n      return words;\n    },\n\n    // Convert big-endian 32-bit words to a byte array\n    wordsToBytes: function(words) {\n      for (var bytes = [], b = 0; b < words.length * 32; b += 8)\n        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a hex string\n    bytesToHex: function(bytes) {\n      for (var hex = [], i = 0; i < bytes.length; i++) {\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n      }\n      return hex.join('');\n    },\n\n    // Convert a hex string to a byte array\n    hexToBytes: function(hex) {\n      for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n      return bytes;\n    },\n\n    // Convert a byte array to a base-64 string\n    bytesToBase64: function(bytes) {\n      for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n        for (var j = 0; j < 4; j++)\n          if (i * 8 + j * 6 <= bytes.length * 8)\n            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\n          else\n            base64.push('=');\n      }\n      return base64.join('');\n    },\n\n    // Convert a base-64 string to a byte array\n    base64ToBytes: function(base64) {\n      // Remove non-base-64 characters\n      base64 = base64.replace(/[^A-Z0-9+\\/]/ig, '');\n\n      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;\n          imod4 = ++i % 4) {\n        if (imod4 == 0) continue;\n        bytes.push(((base64map.indexOf(base64.charAt(i - 1))\n            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))\n            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\n      }\n      return bytes;\n    }\n  };\n\n  module.exports = crypt;\n})();\n","var charenc = {\n  // UTF-8 encoding\n  utf8: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));\n    }\n  },\n\n  // Binary encoding\n  bin: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      for (var bytes = [], i = 0; i < str.length; i++)\n        bytes.push(str.charCodeAt(i) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      for (var str = [], i = 0; i < bytes.length; i++)\n        str.push(String.fromCharCode(bytes[i]));\n      return str.join('');\n    }\n  }\n};\n\nmodule.exports = charenc;\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","(function(){\r\n  var crypt = require('crypt'),\r\n      utf8 = require('charenc').utf8,\r\n      isBuffer = require('is-buffer'),\r\n      bin = require('charenc').bin,\r\n\r\n  // The core\r\n  md5 = function (message, options) {\r\n    // Convert to byte array\r\n    if (message.constructor == String)\r\n      if (options && options.encoding === 'binary')\r\n        message = bin.stringToBytes(message);\r\n      else\r\n        message = utf8.stringToBytes(message);\r\n    else if (isBuffer(message))\r\n      message = Array.prototype.slice.call(message, 0);\r\n    else if (!Array.isArray(message) && message.constructor !== Uint8Array)\r\n      message = message.toString();\r\n    // else, assume byte array already\r\n\r\n    var m = crypt.bytesToWords(message),\r\n        l = message.length * 8,\r\n        a =  1732584193,\r\n        b = -271733879,\r\n        c = -1732584194,\r\n        d =  271733878;\r\n\r\n    // Swap endian\r\n    for (var i = 0; i < m.length; i++) {\r\n      m[i] = ((m[i] <<  8) | (m[i] >>> 24)) & 0x00FF00FF |\r\n             ((m[i] << 24) | (m[i] >>>  8)) & 0xFF00FF00;\r\n    }\r\n\r\n    // Padding\r\n    m[l >>> 5] |= 0x80 << (l % 32);\r\n    m[(((l + 64) >>> 9) << 4) + 14] = l;\r\n\r\n    // Method shortcuts\r\n    var FF = md5._ff,\r\n        GG = md5._gg,\r\n        HH = md5._hh,\r\n        II = md5._ii;\r\n\r\n    for (var i = 0; i < m.length; i += 16) {\r\n\r\n      var aa = a,\r\n          bb = b,\r\n          cc = c,\r\n          dd = d;\r\n\r\n      a = FF(a, b, c, d, m[i+ 0],  7, -680876936);\r\n      d = FF(d, a, b, c, m[i+ 1], 12, -389564586);\r\n      c = FF(c, d, a, b, m[i+ 2], 17,  606105819);\r\n      b = FF(b, c, d, a, m[i+ 3], 22, -1044525330);\r\n      a = FF(a, b, c, d, m[i+ 4],  7, -176418897);\r\n      d = FF(d, a, b, c, m[i+ 5], 12,  1200080426);\r\n      c = FF(c, d, a, b, m[i+ 6], 17, -1473231341);\r\n      b = FF(b, c, d, a, m[i+ 7], 22, -45705983);\r\n      a = FF(a, b, c, d, m[i+ 8],  7,  1770035416);\r\n      d = FF(d, a, b, c, m[i+ 9], 12, -1958414417);\r\n      c = FF(c, d, a, b, m[i+10], 17, -42063);\r\n      b = FF(b, c, d, a, m[i+11], 22, -1990404162);\r\n      a = FF(a, b, c, d, m[i+12],  7,  1804603682);\r\n      d = FF(d, a, b, c, m[i+13], 12, -40341101);\r\n      c = FF(c, d, a, b, m[i+14], 17, -1502002290);\r\n      b = FF(b, c, d, a, m[i+15], 22,  1236535329);\r\n\r\n      a = GG(a, b, c, d, m[i+ 1],  5, -165796510);\r\n      d = GG(d, a, b, c, m[i+ 6],  9, -1069501632);\r\n      c = GG(c, d, a, b, m[i+11], 14,  643717713);\r\n      b = GG(b, c, d, a, m[i+ 0], 20, -373897302);\r\n      a = GG(a, b, c, d, m[i+ 5],  5, -701558691);\r\n      d = GG(d, a, b, c, m[i+10],  9,  38016083);\r\n      c = GG(c, d, a, b, m[i+15], 14, -660478335);\r\n      b = GG(b, c, d, a, m[i+ 4], 20, -405537848);\r\n      a = GG(a, b, c, d, m[i+ 9],  5,  568446438);\r\n      d = GG(d, a, b, c, m[i+14],  9, -1019803690);\r\n      c = GG(c, d, a, b, m[i+ 3], 14, -187363961);\r\n      b = GG(b, c, d, a, m[i+ 8], 20,  1163531501);\r\n      a = GG(a, b, c, d, m[i+13],  5, -1444681467);\r\n      d = GG(d, a, b, c, m[i+ 2],  9, -51403784);\r\n      c = GG(c, d, a, b, m[i+ 7], 14,  1735328473);\r\n      b = GG(b, c, d, a, m[i+12], 20, -1926607734);\r\n\r\n      a = HH(a, b, c, d, m[i+ 5],  4, -378558);\r\n      d = HH(d, a, b, c, m[i+ 8], 11, -2022574463);\r\n      c = HH(c, d, a, b, m[i+11], 16,  1839030562);\r\n      b = HH(b, c, d, a, m[i+14], 23, -35309556);\r\n      a = HH(a, b, c, d, m[i+ 1],  4, -1530992060);\r\n      d = HH(d, a, b, c, m[i+ 4], 11,  1272893353);\r\n      c = HH(c, d, a, b, m[i+ 7], 16, -155497632);\r\n      b = HH(b, c, d, a, m[i+10], 23, -1094730640);\r\n      a = HH(a, b, c, d, m[i+13],  4,  681279174);\r\n      d = HH(d, a, b, c, m[i+ 0], 11, -358537222);\r\n      c = HH(c, d, a, b, m[i+ 3], 16, -722521979);\r\n      b = HH(b, c, d, a, m[i+ 6], 23,  76029189);\r\n      a = HH(a, b, c, d, m[i+ 9],  4, -640364487);\r\n      d = HH(d, a, b, c, m[i+12], 11, -421815835);\r\n      c = HH(c, d, a, b, m[i+15], 16,  530742520);\r\n      b = HH(b, c, d, a, m[i+ 2], 23, -995338651);\r\n\r\n      a = II(a, b, c, d, m[i+ 0],  6, -198630844);\r\n      d = II(d, a, b, c, m[i+ 7], 10,  1126891415);\r\n      c = II(c, d, a, b, m[i+14], 15, -1416354905);\r\n      b = II(b, c, d, a, m[i+ 5], 21, -57434055);\r\n      a = II(a, b, c, d, m[i+12],  6,  1700485571);\r\n      d = II(d, a, b, c, m[i+ 3], 10, -1894986606);\r\n      c = II(c, d, a, b, m[i+10], 15, -1051523);\r\n      b = II(b, c, d, a, m[i+ 1], 21, -2054922799);\r\n      a = II(a, b, c, d, m[i+ 8],  6,  1873313359);\r\n      d = II(d, a, b, c, m[i+15], 10, -30611744);\r\n      c = II(c, d, a, b, m[i+ 6], 15, -1560198380);\r\n      b = II(b, c, d, a, m[i+13], 21,  1309151649);\r\n      a = II(a, b, c, d, m[i+ 4],  6, -145523070);\r\n      d = II(d, a, b, c, m[i+11], 10, -1120210379);\r\n      c = II(c, d, a, b, m[i+ 2], 15,  718787259);\r\n      b = II(b, c, d, a, m[i+ 9], 21, -343485551);\r\n\r\n      a = (a + aa) >>> 0;\r\n      b = (b + bb) >>> 0;\r\n      c = (c + cc) >>> 0;\r\n      d = (d + dd) >>> 0;\r\n    }\r\n\r\n    return crypt.endian([a, b, c, d]);\r\n  };\r\n\r\n  // Auxiliary functions\r\n  md5._ff  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & c | ~b & d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._gg  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & d | c & ~d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._hh  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b ^ c ^ d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._ii  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n\r\n  // Package private blocksize\r\n  md5._blocksize = 16;\r\n  md5._digestsize = 16;\r\n\r\n  module.exports = function (message, options) {\r\n    if (message === undefined || message === null)\r\n      throw new Error('Illegal argument ' + message);\r\n\r\n    var digestbytes = crypt.wordsToBytes(md5(message, options));\r\n    return options && options.asBytes ? digestbytes :\r\n        options && options.asString ? bin.bytesToString(digestbytes) :\r\n        crypt.bytesToHex(digestbytes);\r\n  };\r\n\r\n})();\r\n","module.exports = require('crypto').randomBytes\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n'use strict';\n\nvar randomBytes = require('randombytes');\n\n// Generate an internal UID to make the regexp pattern harder to guess.\nvar UID_LENGTH          = 16;\nvar UID                 = generateUID();\nvar PLACE_HOLDER_REGEXP = new RegExp('(\\\\\\\\)?\"@__(F|R|D|M|S|A|U|I|B|L)-' + UID + '-(\\\\d+)__@\"', 'g');\n\nvar IS_NATIVE_CODE_REGEXP = /\\{\\s*\\[native code\\]\\s*\\}/g;\nvar IS_PURE_FUNCTION = /function.*?\\(/;\nvar IS_ARROW_FUNCTION = /.*?=>.*?/;\nvar UNSAFE_CHARS_REGEXP   = /[<>\\/\\u2028\\u2029]/g;\n\nvar RESERVED_SYMBOLS = ['*', 'async'];\n\n// Mapping of unsafe HTML and invalid JavaScript line terminator chars to their\n// Unicode char counterparts which are safe to use in JavaScript strings.\nvar ESCAPED_CHARS = {\n    '<'     : '\\\\u003C',\n    '>'     : '\\\\u003E',\n    '/'     : '\\\\u002F',\n    '\\u2028': '\\\\u2028',\n    '\\u2029': '\\\\u2029'\n};\n\nfunction escapeUnsafeChars(unsafeChar) {\n    return ESCAPED_CHARS[unsafeChar];\n}\n\nfunction generateUID() {\n    var bytes = randomBytes(UID_LENGTH);\n    var result = '';\n    for(var i=0; i<UID_LENGTH; ++i) {\n        result += bytes[i].toString(16);\n    }\n    return result;\n}\n\nfunction deleteFunctions(obj){\n    var functionKeys = [];\n    for (var key in obj) {\n        if (typeof obj[key] === \"function\") {\n            functionKeys.push(key);\n        }\n    }\n    for (var i = 0; i < functionKeys.length; i++) {\n        delete obj[functionKeys[i]];\n    }\n}\n\nmodule.exports = function serialize(obj, options) {\n    options || (options = {});\n\n    // Backwards-compatibility for `space` as the second argument.\n    if (typeof options === 'number' || typeof options === 'string') {\n        options = {space: options};\n    }\n\n    var functions = [];\n    var regexps   = [];\n    var dates     = [];\n    var maps      = [];\n    var sets      = [];\n    var arrays    = [];\n    var undefs    = [];\n    var infinities= [];\n    var bigInts = [];\n    var urls = [];\n\n    // Returns placeholders for functions and regexps (identified by index)\n    // which are later replaced by their string representation.\n    function replacer(key, value) {\n\n        // For nested function\n        if(options.ignoreFunction){\n            deleteFunctions(value);\n        }\n\n        if (!value && value !== undefined && value !== BigInt(0)) {\n            return value;\n        }\n\n        // If the value is an object w/ a toJSON method, toJSON is called before\n        // the replacer runs, so we use this[key] to get the non-toJSONed value.\n        var origValue = this[key];\n        var type = typeof origValue;\n\n        if (type === 'object') {\n            if(origValue instanceof RegExp) {\n                return '@__R-' + UID + '-' + (regexps.push(origValue) - 1) + '__@';\n            }\n\n            if(origValue instanceof Date) {\n                return '@__D-' + UID + '-' + (dates.push(origValue) - 1) + '__@';\n            }\n\n            if(origValue instanceof Map) {\n                return '@__M-' + UID + '-' + (maps.push(origValue) - 1) + '__@';\n            }\n\n            if(origValue instanceof Set) {\n                return '@__S-' + UID + '-' + (sets.push(origValue) - 1) + '__@';\n            }\n\n            if(origValue instanceof Array) {\n                var isSparse = origValue.filter(function(){return true}).length !== origValue.length;\n                if (isSparse) {\n                    return '@__A-' + UID + '-' + (arrays.push(origValue) - 1) + '__@';\n                }\n            }\n\n            if(origValue instanceof URL) {\n                return '@__L-' + UID + '-' + (urls.push(origValue) - 1) + '__@';\n            }\n        }\n\n        if (type === 'function') {\n            return '@__F-' + UID + '-' + (functions.push(origValue) - 1) + '__@';\n        }\n\n        if (type === 'undefined') {\n            return '@__U-' + UID + '-' + (undefs.push(origValue) - 1) + '__@';\n        }\n\n        if (type === 'number' && !isNaN(origValue) && !isFinite(origValue)) {\n            return '@__I-' + UID + '-' + (infinities.push(origValue) - 1) + '__@';\n        }\n\n        if (type === 'bigint') {\n            return '@__B-' + UID + '-' + (bigInts.push(origValue) - 1) + '__@';\n        }\n\n        return value;\n    }\n\n    function serializeFunc(fn) {\n      var serializedFn = fn.toString();\n      if (IS_NATIVE_CODE_REGEXP.test(serializedFn)) {\n          throw new TypeError('Serializing native function: ' + fn.name);\n      }\n\n      // pure functions, example: {key: function() {}}\n      if(IS_PURE_FUNCTION.test(serializedFn)) {\n          return serializedFn;\n      }\n\n      // arrow functions, example: arg1 => arg1+5\n      if(IS_ARROW_FUNCTION.test(serializedFn)) {\n          return serializedFn;\n      }\n\n      var argsStartsAt = serializedFn.indexOf('(');\n      var def = serializedFn.substr(0, argsStartsAt)\n        .trim()\n        .split(' ')\n        .filter(function(val) { return val.length > 0 });\n\n      var nonReservedSymbols = def.filter(function(val) {\n        return RESERVED_SYMBOLS.indexOf(val) === -1\n      });\n\n      // enhanced literal objects, example: {key() {}}\n      if(nonReservedSymbols.length > 0) {\n          return (def.indexOf('async') > -1 ? 'async ' : '') + 'function'\n            + (def.join('').indexOf('*') > -1 ? '*' : '')\n            + serializedFn.substr(argsStartsAt);\n      }\n\n      // arrow functions\n      return serializedFn;\n    }\n\n    // Check if the parameter is function\n    if (options.ignoreFunction && typeof obj === \"function\") {\n        obj = undefined;\n    }\n    // Protects against `JSON.stringify()` returning `undefined`, by serializing\n    // to the literal string: \"undefined\".\n    if (obj === undefined) {\n        return String(obj);\n    }\n\n    var str;\n\n    // Creates a JSON string representation of the value.\n    // NOTE: Node 0.12 goes into slow mode with extra JSON.stringify() args.\n    if (options.isJSON && !options.space) {\n        str = JSON.stringify(obj);\n    } else {\n        str = JSON.stringify(obj, options.isJSON ? null : replacer, options.space);\n    }\n\n    // Protects against `JSON.stringify()` returning `undefined`, by serializing\n    // to the literal string: \"undefined\".\n    if (typeof str !== 'string') {\n        return String(str);\n    }\n\n    // Replace unsafe HTML and invalid JavaScript line terminator chars with\n    // their safe Unicode char counterpart. This _must_ happen before the\n    // regexps and functions are serialized and added back to the string.\n    if (options.unsafe !== true) {\n        str = str.replace(UNSAFE_CHARS_REGEXP, escapeUnsafeChars);\n    }\n\n    if (functions.length === 0 && regexps.length === 0 && dates.length === 0 && maps.length === 0 && sets.length === 0 && arrays.length === 0 && undefs.length === 0 && infinities.length === 0 && bigInts.length === 0 && urls.length === 0) {\n        return str;\n    }\n\n    // Replaces all occurrences of function, regexp, date, map and set placeholders in the\n    // JSON string with their string representations. If the original value can\n    // not be found, then `undefined` is used.\n    return str.replace(PLACE_HOLDER_REGEXP, function (match, backSlash, type, valueIndex) {\n        // The placeholder may not be preceded by a backslash. This is to prevent\n        // replacing things like `\"a\\\"@__R-<UID>-0__@\"` and thus outputting\n        // invalid JS.\n        if (backSlash) {\n            return match;\n        }\n\n        if (type === 'D') {\n            return \"new Date(\\\"\" + dates[valueIndex].toISOString() + \"\\\")\";\n        }\n\n        if (type === 'R') {\n            return \"new RegExp(\" + serialize(regexps[valueIndex].source) + \", \\\"\" + regexps[valueIndex].flags + \"\\\")\";\n        }\n\n        if (type === 'M') {\n            return \"new Map(\" + serialize(Array.from(maps[valueIndex].entries()), options) + \")\";\n        }\n\n        if (type === 'S') {\n            return \"new Set(\" + serialize(Array.from(sets[valueIndex].values()), options) + \")\";\n        }\n\n        if (type === 'A') {\n            return \"Array.prototype.slice.call(\" + serialize(Object.assign({ length: arrays[valueIndex].length }, arrays[valueIndex]), options) + \")\";\n        }\n\n        if (type === 'U') {\n            return 'undefined'\n        }\n\n        if (type === 'I') {\n            return infinities[valueIndex];\n        }\n\n        if (type === 'B') {\n            return \"BigInt(\\\"\" + bigInts[valueIndex] + \"\\\")\";\n        }\n\n        if (type === 'L') {\n            return \"new URL(\" + serialize(urls[valueIndex].toString(), options) + \")\";\n        }\n\n        var fn = functions[valueIndex];\n\n        return serializeFunc(fn);\n    });\n}\n","import md5 from \"md5\"\n// @ts-ignore\nimport { serialize } from \"serialize-javascript\"\n\nimport { asyncRun, getOrAddObjective } from \"../util/game\"\nimport { deserialize, each, eachAsync } from \"../util/index\"\n\nexport const ALL_DATABASES = new Map()\n\nexport class Database {\n  static open(player, dbName) {\n    return new Database(player, dbName)\n  }\n  constructor(player, dbName) {\n    const id = md5(`db:${dbName}_${player.id}`).slice(8, 24)\n    this.id = id\n    this.objective = getOrAddObjective(id, `db:${dbName}`)\n    // this.player = player\n\n    // if (!(player instanceof Player)) this.fakePlayer = true\n\n    this._syncDataFromScoreboard()\n\n    ALL_DATABASES.set(id, this)\n  }\n\n  store = new Map()\n\n  _syncDataFromScoreboard() {\n    this.store.clear()\n    each(this.objective.getParticipants(), (participant) => {\n      const data = deserialize(participant.displayName)\n      const key = Object.keys(data)[0]\n      const value = data[key]\n      this.store.set(key, { value, participant })\n    })\n  }\n  has(key) {\n    return this.store.has(key)\n  }\n  async delete(key) {\n    if (this.has(key)) {\n      const { participant } = this.store.get(key)\n      await asyncRun(() => this.objective.removeParticipant(participant))\n      this.store.delete(key)\n      return true\n    }\n    return false\n  }\n  async clear() {\n    await eachAsync(\n      this.store,\n      async ([, { participant }]) =>\n        await asyncRun(() => this.objective.removeParticipant(participant))\n    )\n    this.store.clear()\n  }\n  get(key) {\n    if (this.has(key)) return this.store.get(key).value\n  }\n  async set(key, value) {\n    await this.delete(key)\n    const data = serialize({ [key]: value }).replaceAll('\"', \"'\")\n    // FIXME: has ambiguity\n    if (data.length > 32767)\n      throw new RangeError(\n        \"Database: Only accepts a string value less than 32767 characters.\"\n      )\n    await asyncRun(() => this.objective.setScore(data, 1))\n\n    this._syncDataFromScoreboard()\n  }\n  getAll() {\n    const output = {}\n    for (const [key, value] of this) output[key] = value\n    return output\n  }\n  *entries() {\n    for (const [key, { value }] of this.store.entries()) yield [key, value]\n  }\n  *keys() {\n    for (const key of this.store.keys()) yield key\n  }\n  *values() {\n    for (const { value } of this.store.values()) yield value\n  }\n  [Symbol.iterator]() {\n    return this.entries()\n  }\n}\n\nexport default Database\n","import {\n  ActionFormResponse,\n  FormCancelationReason,\n  MessageFormData,\n  MessageFormResponse,\n  ModalFormResponse,\n} from \"@minecraft/server-ui\"\n\nimport { asyncRun } from \"../util/game\"\n\nexport class Dialog {\n  static async confirm({\n    title = \"确认\",\n    body,\n    target,\n    onCancel = async () => {},\n    onConfirm = async () => {},\n  }) {\n    if (!body || !target) throw new Error()\n    const form = await asyncRun(() => {\n      return new Dialog({\n        dialog: new MessageFormData()\n          .title(title)\n          .body(body)\n          .button1(\"CANCEL\")\n          .button2(\"OK\"),\n        onClose: onCancel,\n        onSelectButton1: onCancel,\n        onSelectButton2: onConfirm,\n      })\n    })\n\n    return await form.show(target)\n  }\n\n  constructor({\n    dialog,\n    onClose = async () => {},\n    onSubmit = async (_) => {},\n    onSelectButton1 = async () => {},\n    onSelectButton2 = async () => {},\n    onSelect = async (_) => {},\n  }) {\n    this.dialog = dialog\n    this.onSubmit = onSubmit\n    this.onSelectButton1 = onSelectButton1\n    this.onSelectButton2 = onSelectButton2\n    this.onSelect = onSelect\n    this.onClose = onClose\n  }\n  async show(target) {\n    let response\n    target.sendMessage(\"[!] 新对话框已发送，请关闭命令输入栏或其他对话框\")\n    do {\n      response = await this.dialog.show(target)\n    } while (response.cancelationReason === FormCancelationReason.UserBusy)\n\n    if (\n      response.canceled &&\n      response.cancelationReason === FormCancelationReason.UserClosed\n    )\n      return await this.onClose()\n    if (response instanceof ModalFormResponse)\n      return await this.onSubmit(response.formValues)\n    if (response instanceof MessageFormResponse) {\n      if (response.selection === 0) return await this.onSelectButton1()\n      if (response.selection === 1) return await this.onSelectButton2()\n    } else if (response instanceof ActionFormResponse)\n      return await this.onSelect(response.selection)\n\n    return response\n  }\n}\n\nexport default Dialog\n","export function round(n) {\n  if (n >= 0) return Math.round(n)\n  return n % 0.5 === 0 ? Math.floor(n) : Math.round(n)\n}\n\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min\n}\n\nexport function withProbability(p) {\n  return Math.random() <= p\n}\n\nexport function equals(a, b, epsilon = 0.000001) {\n  return Math.abs(a - b) <= epsilon * Math.max(1, Math.abs(a), Math.abs(b))\n}\n\nexport function factorial(n) {\n  return n > 1 ? n * factorial(n - 1) : 1\n}\n\nexport function combination(n, k) {\n  return factorial(n) / (factorial(k) * factorial(n - k))\n}\n\nexport function binomial(a, b, n) {\n  return (k) => a ** (n - k) * b ** k * combination(n, k)\n}\n\nexport function binomialDistribution(n, p) {\n  return binomial(1 - p, p, n)\n}\n\nexport function sum(from, to, fn) {\n  let output = 0\n  for (let k = from; k <= to; k++) output += fn(k)\n  return output\n}\n\nexport function range(from, to, step = 1) {\n  const output = []\n  for (let i = from; i < to; i += step) output.push(i)\n  return output\n}\n","/**\n * Class representing an N-dimensional vector.\n */\nexport class VectorN {\n  /**\n   * Create a vector.\n   * @param {...number} axes - The axes of the vector.\n   */\n  constructor(...axes) {\n    this.axes = axes\n  }\n\n  /**\n   * Create a vector.\n   * @param {Array<number>|string} vector - The vector wrote in array or string.\n   * @returns {VectorN} The vector.\n   */\n  static create(vector) {\n    if (Array.isArray(vector)) return new this(...vector)\n    if (typeof vector === \"string\") return this.parse(vector)\n  }\n\n  /**\n   * Parse a string to vector.\n   * @param {string} vectorStr - The string to parse.\n   * @returns {VectorN} The vector.\n   */\n  static parse(vectorStr) {\n    return this.create(vectorStr.split(\" \").map(Number))\n  }\n\n  /**\n   * Convert the vector to a string.\n   * @returns {string} The string representation of the vector.\n   */\n  stringify() {\n    // @ts-ignore\n    return this[Symbol.toPrimitive](\"string\")\n  }\n\n  /**\n   * Convert the vector to an array.\n   * @returns {Array<number>} The array representation of the vector.\n   */\n  toArray() {\n    return [...this]\n  }\n\n  /**\n   * Convert the vector to a primitive value.\n   * @param {string} hint - The type hint.\n   * @returns {string|VectorN} The string representation or the vector itself.\n   */\n  [Symbol.toPrimitive](hint) {\n    if (hint === \"string\") return this.axes.join(\" \")\n    return this\n  }\n\n  /**\n   * Iterator for the vector axes.\n   * @returns {Iterator<number>} The iterator for the axes.\n   */\n  [Symbol.iterator]() {\n    return this.axes[Symbol.iterator]()\n  }\n\n  /**\n   * Get the number of dimensions of the vector.\n   * @returns {number} The number of dimensions.\n   */\n  get dimensions() {\n    return this.axes.length\n  }\n\n  /**\n   * Get an axis of the vector by index.\n   * @param {number} index - The index of the component.\n   * @returns {number} The component value.\n   */\n  get(index) {\n    return this.axes[index]\n  }\n\n  /**\n   * Set an axis of the vector by index.\n   * @param {number} index - The index of the component.\n   * @param {number} value - The value to set.\n   */\n  set(index, value) {\n    this.axes[index] = value\n  }\n\n  /**\n   * Apply a function to each axes of the vector and return a new vector.\n   * @param {function(number, number): number} callbackfn - The function to apply.\n   * @returns {VectorN} The new vector.\n   */\n  map(callbackfn) {\n    return VectorN.create(this.axes.map(callbackfn))\n  }\n}\n","import { binomial, equals, round, sum } from \"../util/math\"\nimport { VectorN } from \"./VectorN.class\"\n\n/**\n * Utility class for operations on N-dimensional vectors.\n */\nexport class VectorNUtils {\n  /**\n   * Create a vector.\n   * @param {Array<number>} vector - The vector write in array.\n   * @returns {VectorN} The vector.\n   */\n  static create(vector) {\n    return VectorN.create(vector)\n  }\n\n  /**\n   * Clone a vector.\n   * @param {VectorN} a - The vector to clone.\n   * @returns {VectorN} The cloned vector.\n   */\n  static clone(a) {\n    return this.create(a.toArray())\n  }\n\n  /**\n   * Assert that two vectors have the same dimensions.\n   * @param {VectorN} a - The first vector.\n   * @param {VectorN} b - The second vector.\n   * @throws Will throw an error if the vectors do not have the same dimensions.\n   */\n  static _assertDimensions(a, b) {\n    if (a.dimensions !== b.dimensions)\n      throw new Error(\"Vectors must have the same dimensions.\")\n  }\n\n  /**\n   * Add two vectors.\n   * @param {VectorN} a - The first vector.\n   * @param {VectorN} b - The second vector.\n   * @returns {VectorN} The resulting vector.\n   */\n  static add(a, b) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.map((val, index) => val + b.get(index))\n  }\n\n  /**\n   * Subtract one vector from another.\n   * @param {VectorN} a - The first vector.\n   * @param {VectorN} b - The second vector.\n   * @returns {VectorN} The resulting vector.\n   */\n  static subtract(a, b) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.map((val, index) => val - b.get(index))\n  }\n\n  /**\n   * Multiply two vectors component-wise.\n   * @param {VectorN} a - The first vector.\n   * @param {VectorN} b - The second vector.\n   * @returns {VectorN} The resulting vector.\n   */\n  static multiply(a, b) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.map((val, index) => val * b.get(index))\n  }\n\n  /**\n   * Divide one vector by another component-wise.\n   * @param {VectorN} a - The first vector.\n   * @param {VectorN} b - The second vector.\n   * @returns {VectorN} The resulting vector.\n   */\n  static divide(a, b) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.map((val, index) => val / b.get(index))\n  }\n\n  /**\n   * Scale a vector by a scalar.\n   * @param {VectorN} a - The vector to scale.\n   * @param {number} n - The scalar value.\n   * @returns {VectorN} The resulting vector.\n   */\n  static scale(a, n) {\n    return a.map((val) => val * n)\n  }\n\n  /**\n   * Negate a vector.\n   * @param {VectorN} a - The vector to negate.\n   * @returns {VectorN} The resulting vector.\n   */\n  static negate(a) {\n    return a.map((val) => -val)\n  }\n\n  /**\n   * Invert a vector component-wise.\n   * @param {VectorN} a - The vector to invert.\n   * @returns {VectorN} The resulting vector.\n   */\n  static inverse(a) {\n    return a.map((val) => 1 / val)\n  }\n\n  /**\n   * Exchange two axes of a vector.\n   * @param {VectorN} a - The vector to modify.\n   * @param {number} axis1 - The first axis to exchange.\n   * @param {number} axis2 - The second axis to exchange\n   * @returns {VectorN} The resulting vector.\n   * @throws Will throw an error if the length of the axes array is not 2.\n   */\n  static exchange(a, axis1, axis2) {\n    const output = this.clone(a)\n    const n0 = output.get(axis1)\n    const n1 = output.get(axis2)\n    output.set(axis1, n1)\n    output.set(axis2, n0)\n    return output\n  }\n\n  /**\n   * Check if two vectors are exactly equal.\n   * @param {VectorN} a - The first vector.\n   * @param {VectorN} b - The second vector.\n   * @returns {boolean} True if the vectors are exactly equal, otherwise false.\n   */\n  static exactEquals(a, b) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.axes.every((val, index) => val === b.get(index))\n  }\n\n  /**\n   * Check if two vectors are approximately equal.\n   * @param {VectorN} a - The first vector.\n   * @param {VectorN} b - The second vector.\n   * @returns {boolean} True if the vectors are approximately equal, otherwise false.\n   */\n  static equals(a, b) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.axes.every((val, index) => equals(val, b.get(index)))\n  }\n\n  /**\n   * Get the component-wise maximum of multiple vectors.\n   * @param {...VectorN} vectors - The vectors to compare.\n   * @returns {VectorN} The resulting vector.\n   */\n  static max(...vectors) {\n    const length = vectors[0].dimensions\n\n    const maxAxes = vectors.reduce((acc, vector) => {\n      vector.axes.forEach((val, index) => {\n        if (val > acc[index]) acc[index] = val\n      })\n      return acc\n    }, new Array(length).fill(Number.NEGATIVE_INFINITY))\n\n    return this.create(maxAxes)\n  }\n\n  /**\n   * Get the component-wise minimum of multiple vectors.\n   * @param {...VectorN} vectors - The vectors to compare.\n   * @returns {VectorN} The resulting vector.\n   */\n  static min(...vectors) {\n    const length = vectors[0].dimensions\n\n    const minAxes = vectors.reduce((acc, vector) => {\n      vector.axes.forEach((val, index) => {\n        if (val < acc[index]) acc[index] = val\n      })\n      return acc\n    }, new Array(length).fill(Number.POSITIVE_INFINITY))\n\n    return this.create(minAxes)\n  }\n\n  /**\n   * Apply the floor function to each component of a vector.\n   * @param {VectorN} a - The vector to modify.\n   * @returns {VectorN} The resulting vector.\n   */\n  static floor(a) {\n    return a.map((val) => Math.floor(val))\n  }\n\n  /**\n   * Apply the ceil function to each component of a vector.\n   * @param {VectorN} a - The vector to modify.\n   * @returns {VectorN} The resulting vector.\n   */\n  static ceil(a) {\n    return a.map((val) => Math.ceil(val))\n  }\n\n  /**\n   * Apply the round function to each component of a vector.\n   * @param {VectorN} a - The vector to modify.\n   * @returns {VectorN} The resulting vector.\n   */\n  static round(a) {\n    return a.map((val) => round(val))\n  }\n\n  /**\n   * Apply the absolute value function to each component of a vector.\n   * @param {VectorN} a - The vector to modify.\n   * @returns {VectorN} The resulting vector.\n   */\n  static abs(a) {\n    return a.map((val) => Math.abs(val))\n  }\n\n  /**\n   * Get the vector with the maximum magnitude from a list of vectors.\n   * @param {...VectorN} vectors - The vectors to compare.\n   * @returns {VectorN} The vector with the maximum magnitude.\n   */\n  static maxMagnitude(...vectors) {\n    return vectors.reduce((prev, curr) =>\n      VectorNUtils.magnitude(curr) > VectorNUtils.magnitude(prev) ? curr : prev\n    )\n  }\n\n  /**\n   * Get the vector with the minimum magnitude from a list of vectors.\n   * @param {...VectorN} vectors - The vectors to compare.\n   * @returns {VectorN} The vector with the minimum magnitude.\n   */\n  static minMagnitude(...vectors) {\n    return vectors.reduce((prev, curr) =>\n      VectorNUtils.magnitude(curr) < VectorNUtils.magnitude(prev) ? curr : prev\n    )\n  }\n\n  /**\n   * Calculate the magnitude of a vector.\n   * @param {VectorN} a - The vector to calculate the magnitude of.\n   * @returns {number} The magnitude of the vector.\n   */\n  static magnitude(a) {\n    return Math.sqrt(VectorNUtils.squaredMagnitude(a))\n  }\n\n  /**\n   * Calculate the squared magnitude of a vector.\n   * @param {VectorN} a - The vector to calculate the squared magnitude of.\n   * @returns {number} The squared magnitude of the vector.\n   */\n  static squaredMagnitude(a) {\n    return a.axes.reduce((sum, val) => sum + val ** 2, 0)\n  }\n\n  /**\n   * Calculate the distance between two vectors.\n   * @param {VectorN} a - The first vector.\n   * @param {VectorN} b - The second vector.\n   * @returns {number} The distance between the vectors.\n   */\n  static distance(a, b) {\n    return Math.sqrt(VectorNUtils.squaredDistance(a, b))\n  }\n\n  /**\n   * Calculate the squared distance between two vectors.\n   * @param {VectorN} a - The first vector.\n   * @param {VectorN} b - The second vector.\n   * @returns {number} The squared distance between the vectors.\n   */\n  static squaredDistance(a, b) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.axes.reduce((sum, val, index) => {\n      const diff = val - b.get(index)\n      return sum + diff ** 2\n    }, 0)\n  }\n\n  /**\n   * Calculate the dot product of two vectors.\n   * @param {VectorN} a - The first vector.\n   * @param {VectorN} b - The second vector.\n   * @returns {number} The dot product of the vectors.\n   */\n  static dot(a, b) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.axes.reduce((sum, val, index) => sum + val * b.get(index), 0)\n  }\n\n  /**\n   * Normalize a vector.\n   * @param {VectorN} a - The vector to normalize.\n   * @returns {VectorN} The normalized vector.\n   */\n  static normalize(a) {\n    const magnitude = this.magnitude(a)\n    if (magnitude) return this.scale(a, 1 / magnitude)\n    return this.create(new Array(a.dimensions).fill(0))\n  }\n\n  /**\n   * Calculate the angle between two vectors.\n   * @param {VectorN} a - The first vector.\n   * @param {VectorN} b - The second vector.\n   * @returns {number} The angle between the vectors in radians.\n   */\n  static angle(a, b) {\n    const cosOmega = this.dot(this.normalize(a), this.normalize(b))\n    return Math.acos(cosOmega)\n  }\n\n  /**\n   * Generate a random vector.\n   * @param {number} dimensions - The number of dimensions.\n   * @param {number} [scale=1] - The scale of the random components.\n   * @returns {VectorN} The random vector.\n   */\n  static random(dimensions, scale = 1) {\n    const axes = Array.from({ length: dimensions }, () => Math.random() * 2 - 1)\n    return this.scale(this.create(axes), scale)\n  }\n\n  /**\n   * Perform linear interpolation between two vectors.\n   * @param {VectorN} a - The first vector.\n   * @param {VectorN} b - The second vector.\n   * @param {number} t - The interpolation parameter.\n   * @returns {VectorN} The interpolated vector.\n   */\n  static lerp(a, b, t) {\n    VectorNUtils._assertDimensions(a, b)\n    return a.map((val, index) => val * (1 - t) + b.get(index) * t)\n  }\n\n  /**\n   * Perform spherical linear interpolation between two vectors.\n   * @param {VectorN} a - The first vector.\n   * @param {VectorN} b - The second vector.\n   * @param {number} t - The interpolation parameter.\n   * @returns {VectorN} The interpolated vector.\n   */\n  static slerp(a, b, t) {\n    if (t <= 0) return this.clone(a)\n    if (t >= 1) return this.clone(b)\n\n    const omega = this.angle(a, b)\n    const sinOmega = Math.sin(omega)\n\n    if (sinOmega <= Number.EPSILON) return this.lerp(a, b, t)\n\n    const ratioA = Math.sin(omega * (1 - t)) / sinOmega\n    const ratioB = Math.sin(omega * t) / sinOmega\n    return a.map((val, index) => val * ratioA + b.get(index) * ratioB)\n  }\n\n  /**\n   * Perform Bezier interpolation between vectors.\n   * @param {VectorN[]} points - The control points.\n   * @param {number} t - The interpolation parameter.\n   * @returns {VectorN} The interpolated vector.\n   */\n  static bezier(points, t) {\n    const n = points.length - 1\n\n    if (!n) return points[0]\n\n    const newPoints = []\n    for (let i = 0; i < n; i++) {\n      newPoints.push(this.lerp(points[i], points[i + 1], t))\n    }\n\n    return this.bezier(newPoints, t)\n  }\n}\n","import { Vector3 } from \"./Vector3.class\"\nimport { VectorNUtils } from \"./VectorNUtils.class\"\n\n/**\n * Utility class for operations on 3D vectors.\n */\nexport class Vector3Utils extends VectorNUtils {\n  /**\n   * @param {Array<number>|string|{x:number,y:number,z:number}} vector - The vector write in array.\n   * @returns {Vector3} The vector.\n   */\n  static create(vector) {\n    return Vector3.create(vector)\n  }\n\n  /**\n   * Calculate the cross product of two 3D vectors.\n   * @param {Vector3} a - The first vector.\n   * @param {Vector3} b - The second vector.\n   * @returns {Vector3} The cross product of the vectors.\n   */\n  static cross(a, b) {\n    return this.create([\n      a.y * b.z - a.z * b.y,\n      a.z * b.x - a.x * b.z,\n      a.x * b.y - a.y * b.x,\n    ])\n  }\n}\n","import { Vector3Utils } from \"./Vector3Utils.class\"\nimport { VectorN } from \"./VectorN.class\"\n\n/**\n * Class representing a 3-dimensional vector.\n * @extends VectorN\n */\nexport class Vector3 extends VectorN {\n  /**\n   * Create a 3D vector.\n   * @param {number} x - The x axis.\n   * @param {number} y - The y axis.\n   * @param {number} z - The z axis.\n   */\n  constructor(x = 0, y = 0, z = 0) {\n    super(x, y, z)\n  }\n\n  get x() {\n    return this.get(0)\n  }\n  set x(value) {\n    this.set(0, value)\n  }\n  get y() {\n    return this.get(1)\n  }\n  set y(value) {\n    this.set(1, value)\n  }\n  get z() {\n    return this.get(2)\n  }\n  set z(value) {\n    this.set(2, value)\n  }\n\n  /**\n   * @param {Array<number>|string|{x:number,y:number,z:number}} vector - The vector write in array.\n   * @returns {Vector3} The vector.\n   */\n  static create(vector) {\n    if (Array.isArray(vector)) return new this(...vector)\n    // @ts-ignore\n    if (typeof vector === \"string\") return this.parse(vector)\n    if (typeof vector === \"object\")\n      return new this(vector.x, vector.y, vector.z)\n  }\n\n  get magnitude() {\n    return Vector3Utils.magnitude(this)\n  }\n  get squaredMagnitude() {\n    return Vector3Utils.squaredMagnitude(this)\n  }\n\n  get normalized() {\n    return Vector3Utils.normalize(this)\n  }\n  get floored() {\n    return Vector3Utils.floor(this)\n  }\n  get ceiled() {\n    return Vector3Utils.ceil(this)\n  }\n  get rounded() {\n    return Vector3Utils.round(this)\n  }\n  get absoluted() {\n    return Vector3Utils.abs(this)\n  }\n\n  /**\n   * Apply a function to each axes of the vector and return a new vector.\n   * @param {function(number, number): number} callbackfn - The function to apply.\n   * @returns {Vector3} The new vector.\n   */\n  map(callbackfn) {\n    return Vector3.create(this.axes.map(callbackfn))\n  }\n\n  copy(v) {\n    this.x = v.x\n    this.y = v.y\n    this.z = v.z\n    return this\n  }\n  clone() {\n    return new Vector3(this.x, this.y, this.z)\n  }\n  equals(v) {\n    return Vector3Utils.equals(this, v)\n  }\n\n  distanceTo(v) {\n    return Vector3Utils.distance(this, v)\n  }\n  squaredDistanceTo(v) {\n    return Vector3Utils.squaredDistance(this, v)\n  }\n\n  add(v) {\n    return this.copy(Vector3Utils.add(this, v))\n  }\n  subtract(v) {\n    return this.copy(Vector3Utils.subtract(this, v))\n  }\n  multiply(v) {\n    return this.copy(Vector3Utils.multiply(this, v))\n  }\n  divide(v) {\n    return this.copy(Vector3Utils.divide(this, v))\n  }\n  scale(n) {\n    return this.copy(Vector3Utils.scale(this, n))\n  }\n  negate() {\n    return this.copy(Vector3Utils.negate(this))\n  }\n  inverse() {\n    return this.copy(Vector3Utils.inverse(this))\n  }\n\n  floor() {\n    return this.copy(this.floored)\n  }\n  ceil() {\n    return this.copy(this.ceiled)\n  }\n  round() {\n    return this.copy(this.rounded)\n  }\n  abs() {\n    return this.copy(this.absoluted)\n  }\n\n  normalize() {\n    return this.copy(this.normalized)\n  }\n}\n","import { Vector3, Vector3Utils } from \"../vector/index\"\n\nexport class Location extends Vector3 {\n  get centerCorrected() {\n    return Location.create(\n      // @ts-ignore\n      Vector3Utils.add(this.floored, new Vector3(0.5, 0.5, 0.5))\n    )\n  }\n\n  clone() {\n    return new Location(this.x, this.y, this.z)\n  }\n  equals(v) {\n    return Vector3Utils.exactEquals(this, v)\n  }\n  isNearTo(v, distance) {\n    return this.distanceTo(v) <= distance\n  }\n\n  offset(v) {\n    return this.add(v)\n  }\n}\n","import { Dimension, world } from \"@minecraft/server\"\n\nimport { removeMinecraftNamespace } from \"../util/game\"\nimport { Location } from \"./Location.class\"\n\nexport class LocationInfo {\n  constructor({ location, dimension }) {\n    this.location =\n      location instanceof Location ? location : Location.create(location)\n    this.dimension =\n      dimension instanceof Dimension ? dimension : world.getDimension(dimension)\n  }\n  textify() {\n    return {\n      location: `${this.location}`,\n      dimension: this.dimension.id,\n    }\n  }\n\n  [Symbol.toPrimitive](hint) {\n    if (hint === \"string\")\n      return `${removeMinecraftNamespace(this.dimension.id)}: ${this.location}`\n    return this\n  }\n}\n","import { each } from \"@/util/index\"\n\nimport { Database } from \"@/lib/database/index\"\nimport { Dialog } from \"@/lib/dialog/index\"\nimport { LocationInfo } from \"@/lib/location/index\"\n\nexport const ALL_PLAYER_DATABASES = new Map()\n\nexport class TpxDB {\n  constructor(player) {\n    this.db = Database.open(player, \"tpx\")\n    this.player = player\n  }\n\n  static init(player) {\n    const db = new TpxDB(player)\n    ALL_PLAYER_DATABASES.set(player, db)\n    return db\n  }\n\n  async set({ name, disposable, force }) {\n    const info = new LocationInfo(this.player)\n    const handleSet = async () => {\n      await this.db.set(name, {\n        info: info.textify(),\n        disposable,\n      })\n      return info\n    }\n    if (!force && this.db.has(name)) {\n      return await Dialog.confirm({\n        body: `名称 ${name} 已被占用，是否覆盖？`,\n        target: this.player,\n        // @ts-ignore\n        onConfirm: async () => await handleSet(),\n      })\n    }\n    return await handleSet()\n  }\n  async get(name) {\n    if (!this.db.has(name)) return\n    const { info: data, disposable } = this.db.get(name)\n    if (disposable) await this.db.delete(name)\n    if (data) return new LocationInfo(data)\n  }\n  async remove(name) {\n    if (!this.db.has(name)) return false\n    return await Dialog.confirm({\n      body: `是否删除 ${name} `,\n      target: this.player,\n      // @ts-ignore\n      onConfirm: async () => await this.db.delete(name),\n    })\n  }\n  getAll() {\n    const output = []\n    each(this.db, ([name, { info: data, disposable }]) => {\n      const info = new LocationInfo(data)\n      output.push({\n        name,\n        info,\n        disposable,\n        text: `${name} (${info})${disposable ? \" [一次性]\" : \"\"}`,\n      })\n    })\n    return output\n  }\n}\n","import { each, eachAsync, isAsyncFunc } from \"./util/index\"\n\nexport class EventEmitter {\n  constructor() {\n    this._events = {}\n  }\n  on(eventName, listener) {\n    if (isAsyncFunc(listener)) {\n      const _eventName = `${eventName}.async`\n      if (this._events[_eventName]) this._events[_eventName].push(listener)\n      else this._events[_eventName] = [listener]\n    } else {\n      if (this._events[eventName]) this._events[eventName].push(listener)\n      else this._events[eventName] = [listener]\n    }\n    return this\n  }\n  once(eventName, listener) {\n    if (isAsyncFunc(listener)) {\n      const _eventName = `${eventName}.async`\n      const _listener = async (...args) => {\n        await listener(...args)\n        this.removeListener(_eventName, _listener)\n      }\n      if (this._events[_eventName]) this._events[_eventName].push(_listener)\n      else this._events[_eventName] = [_listener]\n    } else {\n      const _listener = (...args) => {\n        listener(...args)\n        this.removeListener(eventName, _listener)\n      }\n      if (this._events[eventName]) this._events[eventName].push(_listener)\n      else this._events[eventName] = [_listener]\n    }\n    return this\n  }\n  removeListener(eventName, listener) {\n    if (this._events[eventName]) {\n      const newListeners = []\n      each(this._events[eventName], (_listener) => {\n        if (_listener !== listener) newListeners.push(_listener)\n      })\n      this._events[eventName] = newListeners\n    }\n    return this\n  }\n  async emit(eventName, ...args) {\n    if (this._events[eventName]) {\n      each(this._events[eventName], (listener) => listener(...args))\n    }\n    await this.asyncEmit(eventName, ...args)\n  }\n  async asyncEmit(eventName, ...args) {\n    const _eventName = `${eventName}.async`\n    if (this._events[_eventName]) {\n      await eachAsync(\n        this._events[_eventName],\n        async (listener) => await listener(...args)\n      )\n    }\n  }\n  addListener(eventName, listener) {\n    return this.on(eventName, listener)\n  }\n  off(eventName, listener) {\n    return this.removeListener(eventName, listener)\n  }\n}\n\nexport default EventEmitter\n","import { range } from \"./util/math\"\n\nexport class NumberRange {\n  constructor(min, max, step = 1) {\n    this.min = min\n    this.max = max\n    this.step = step\n  }\n  toArray() {\n    return range(this.min, this.max + this.step, this.step)\n  }\n\n  get array() {\n    return this.toArray()\n  }\n\n  includes(n) {\n    return this.array.includes(n)\n  }\n\n  [Symbol.iterator]() {\n    return this.array.values()\n  }\n}\n","import { each } from \"../util/index\"\n\nimport { EventEmitter } from \"../EventEmitter.class\"\nimport { NumberRange } from \"../NumberRange.class\"\n\nexport class OptionItemRange {\n  constructor({\n    name,\n    description,\n    range = [0, 1, 1],\n    defaultValue,\n    events,\n    reload,\n    _player,\n  }) {\n    this.name = name\n    this.description = description\n    this.range = new NumberRange(...range)\n    this.events = new EventEmitter()\n    this.reload = reload\n    this._defaultValue = defaultValue\n    this._player = _player\n\n    if (events)\n      each(events, (listener, eventName) => this.events.on(eventName, listener))\n\n    if (defaultValue !== undefined && this._includes(defaultValue))\n      this.selected = defaultValue\n    else this.selected = this.range.min\n\n    this.events.emit(\"inited\", this.selected, _player)\n    this.events.emit(\"changed\", this.selected, undefined, _player)\n  }\n  select(value) {\n    if (this.selected !== value && this._includes(value)) {\n      this.original = this.selected\n      this.selected = value\n      this.events.emit(\"selected\", this.selected, this.original, this._player)\n      this.events.emit(\"changed\", this.selected, this.original, this._player)\n      return true\n    }\n    return false\n  }\n  _includes(n) {\n    return this.range.includes(n)\n  }\n}\n","// @ts-ignore\nimport { serialize } from \"serialize-javascript\"\n\nimport { each } from \"../util/index\"\n\nimport { EventEmitter } from \"../EventEmitter.class\"\n\nexport class OptionItemSelection {\n  constructor({\n    name,\n    description,\n    values = [],\n    defaultValue,\n    events,\n    reload,\n    _player,\n  }) {\n    this.name = name\n    this.description = description\n    this.values = new Map(\n      values.map((value) => {\n        if (typeof value[0] === \"object\" || value[0] === undefined)\n          value[0] = serialize(value[0])\n        if (value[0] === true && !value[1]) value[1] = \"开启\"\n        else if (value[0] === false && !value[1]) value[1] = \"关闭\"\n        return value\n      })\n    )\n    this.events = new EventEmitter()\n    this.reload = reload\n    this._defaultValue = defaultValue\n    this._player = _player\n\n    if (events)\n      each(events, (listener, eventName) => this.events.on(eventName, listener))\n\n    if (defaultValue !== undefined && this.hasVal(defaultValue))\n      this.selected = defaultValue\n    else if (values[0]) this.selected = values[0][0]\n\n    this.events.emit(\"inited\", this.selected, _player)\n    this.events.emit(\"changed\", this.selected, undefined, _player)\n  }\n  select(value) {\n    if (this.selected !== value && this.hasVal(value)) {\n      this.original = this.selected\n      this.selected = value\n      this.events.emit(\"selected\", this.selected, this.original, this._player)\n      this.events.emit(\"changed\", this.selected, this.original, this._player)\n      return true\n    }\n    return false\n  }\n  hasVal(name) {\n    return this.values.has(name) || !this.values.size\n  }\n}\n","import { ModalFormData } from \"@minecraft/server-ui\"\n\nimport { each, eachAsync } from \"../util/index\"\n\nimport { Database } from \"../database/index\"\nimport { Dialog } from \"../dialog/index\"\n\nimport { OptionItemRange } from \"./OptionItemRange.class\"\nimport { OptionItemSelection } from \"./OptionItemSelection.class\"\n\nexport class PlayerOption {\n  constructor(player, name) {\n    this.name = name\n    this.db = Database.open(player, `option-manager:${name}`)\n    this.player = player\n  }\n\n  items = {}\n\n  addItem(opts) {\n    if (opts.range) this.items[opts.name] = new OptionItemRange(opts)\n    else if (opts.values) this.items[opts.name] = new OptionItemSelection(opts)\n    return this\n  }\n  async _syncToDB() {\n    const data = this.getItemValMap()\n    await eachAsync(data, async (value, name) => {\n      await this.db.set(name, value)\n    })\n    await eachAsync(this.db, async ([name, _]) => {\n      if (!this.hasItem(name)) await this.db.delete(name)\n    })\n  }\n  async _syncFromDB() {\n    each(this.db, ([name, value]) =>\n      this.setItemVal(name, value, undefined, { syncFromDB: true })\n    )\n    await this._syncToDB()\n  }\n  async init() {\n    this.addItem = undefined\n    await this._syncFromDB()\n    return this.getItemValMap()\n  }\n\n  _getItem(name) {\n    return this.items[name]\n  }\n  hasItem(name) {\n    return !!this.items[name]\n  }\n  setItemVal(\n    name,\n    value,\n    callback = (_, __, ___) => {},\n    { syncFromDB = false } = {}\n  ) {\n    const item = this._getItem(name)\n    if (item) {\n      const result = item.select(value)\n      if (result) {\n        if (!syncFromDB && item.reload) this.reload = true\n        callback(item.selected, item.original, this.getItemValMap())\n      }\n    }\n    return this\n  }\n  getItemVal(name) {\n    const item = this._getItem(name)\n    if (item) return item.selected\n  }\n  getItemValMap() {\n    const result = {}\n    each(this.items, (_, name) => {\n      result[name] = this.getItemVal(name)\n    })\n    return result\n  }\n  async done(parentDialog) {\n    const handleDone = async ({ reply = true } = {}) => {\n      await this._syncToDB()\n      if (reply) this.player.sendMessage(\"设置选项修改成功\")\n    }\n    if (this.reload) {\n      this.reload = false\n      await Dialog.confirm({\n        body: '你选择的项目更改后需要刷新脚本，请手动运行 \"/reload\" 命令。\\n\\n您也可以取消您的更改',\n        target: this.player,\n        onConfirm: async () => {\n          await handleDone({ reply: false })\n          // await Commands.asyncRun(\"reload\")\n        },\n        onCancel: async () => {\n          await this._syncFromDB()\n          await this.showDialog(parentDialog)\n        },\n      })\n    } else await handleDone()\n  }\n  async showDialog(parentDialog) {\n    const form = new ModalFormData().title(`${this.name} 选项`)\n    const nameMap = []\n\n    each(this.items, (item) => {\n      if (item instanceof OptionItemSelection) {\n        const { name, description, values, selected } = item\n\n        if (values.size === 2 && values.get(true) && values.get(false)) {\n          const valuesMap = new Map()\n          each(values, ([e]) => valuesMap.set(e, e))\n          nameMap.push({ name, valuesMap })\n\n          form.toggle(description, selected)\n        } else {\n          const valueArray = [...values]\n\n          const valuesMap = new Map()\n          each(valueArray, ([e], i) => valuesMap.set(i, e))\n          nameMap.push({ name, valuesMap })\n\n          form.dropdown(\n            description,\n            valueArray.map((e) => e[1]),\n            valueArray.map((e) => e[0]).findIndex((e) => e === selected)\n          )\n        }\n      } else if (item instanceof OptionItemRange) {\n        const { name, description, range, selected } = item\n\n        const valuesMap = new Map()\n        each(range, (i) => valuesMap.set(i, i))\n        nameMap.push({ name, valuesMap })\n\n        form.slider(description, range.min, range.max, range.step, selected)\n      }\n    })\n\n    const dialog = new Dialog({\n      dialog: form,\n      onClose: async () => {\n        if (parentDialog) await parentDialog.show(this.player)\n      },\n      onSubmit: async (result) => {\n        each(result, (valueIndex, nameIndex) => {\n          const { name, valuesMap } = nameMap[nameIndex]\n          const value = valuesMap.get(valueIndex)\n          this.setItemVal(name, value)\n        })\n        await this.done(parentDialog)\n      },\n    })\n    await dialog.show(this.player)\n  }\n}\n","import { waitForFirstPlayerInitialSpawn } from \"../util/game\"\nimport { each, eachAsync } from \"../util/index\"\n\nimport { PlayerOption } from \"./PlayerOption.class\"\n\nexport class OptionNamespace {\n  constructor(name) {\n    this.name = name\n  }\n\n  players = new Map()\n  _items = new Set()\n\n  addItem(opts) {\n    this._items.add(opts)\n    return this\n  }\n  applyPlayer(player) {\n    if (this.players.has(player)) return this.players.get(player)\n    const playerOpt = new PlayerOption(player, this.name)\n    each(this._items, (item) => {\n      item._player = player\n      playerOpt.addItem(item)\n    })\n    this.players.set(player, playerOpt)\n    return playerOpt\n  }\n  async applyMainPlayer() {\n    const player = await waitForFirstPlayerInitialSpawn()\n    return this.applyPlayer(player)\n  }\n  async init() {\n    const valueMap = new Map()\n    await eachAsync(this.players, async ([player, playerOpt]) => {\n      const result = await playerOpt.init()\n      valueMap.set(player, result)\n    })\n    this.applyPlayer = undefined\n    return valueMap\n  }\n\n  getPlayer(player) {\n    return this.players.get(player)\n  }\n}\n","import { ActionFormData } from \"@minecraft/server-ui\"\n\nimport { each } from \"../util/index\"\n\nimport { Dialog } from \"../dialog/index\"\n\nimport { OptionNamespace } from \"./OptionNamespace.class\"\n\nexport class OptionManager {\n  namespaces = new Map()\n\n  registerNamesapace(name) {\n    const namespaces = new OptionNamespace(name)\n    this.namespaces.set(name, namespaces)\n    return namespaces\n  }\n  getNamesapace(name) {\n    return this.namespaces.get(name)\n  }\n  async showDialog(player) {\n    const form = new ActionFormData()\n      .title(\"设置选项\")\n      .body(\"选择要设置的模块：\")\n    const nameMap = []\n    each(this.namespaces, ([name]) => {\n      nameMap.push(name)\n      form.button(name) // TODO name -> desc\n    })\n\n    const dialog = new Dialog({\n      dialog: form,\n      onSelect: async (selection) => {\n        const name = nameMap[selection]\n        await this.getNamesapace(name).getPlayer(player).showDialog(dialog)\n      },\n    })\n    await dialog.show(player)\n  }\n}\n","import { OptionManager } from \"./OptionManager.class\"\n\nexport const optionManager = new OptionManager()\n","import { Commands } from \"../commands/index\"\nimport { asyncRun, errorHandler } from \"../util/game\"\n\nimport { optionManager } from \"./manager\"\n\nCommands.register(\"!\", \"option\", async (argv, sender) => {\n  switch (argv[1]) {\n    case \"dialog\":\n    case \"-d\":\n    case undefined: {\n      // TODO argv[2] -> namespace\n      await asyncRun(() => optionManager.showDialog(sender))\n      break\n    }\n    default: {\n      throw errorHandler(\"未知的子命令\", sender)\n    }\n  }\n})\n","import { world } from \"@minecraft/server\"\n\nimport { optionManager } from \"@/lib/option-manager/index\"\n\nimport { Handler } from \"./Handler.class\"\n\nasync function afterEntityDieCallback(event) {\n  const player = event.deadEntity\n  const handler = new Handler(player)\n\n  await handler.set({\n    name: \"__death__\",\n    option: {\n      disposable: true,\n      force: true,\n    },\n  })\n}\n\nexport const option = optionManager\n  .registerNamesapace(\"tpx\")\n  .addItem({\n    name: \"auto_back_point\",\n    description: \"允许使用 tpx 传送时自动添加返回点\",\n    values: [[true], [false]],\n    defaultValue: true,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\"tpx:auto_back_point -> from\", original, \"to\", selected),\n    },\n  })\n  .addItem({\n    name: \"back_after_death\",\n    description: \"允许死亡时自动添加死亡点\",\n    values: [[true], [false]],\n    defaultValue: true,\n    events: {\n      changed: (selected, original) => {\n        console.warn(\"tpx:back_after_death -> from\", original, \"to\", selected)\n\n        if (selected)\n          world.afterEvents.entityDie.subscribe(afterEntityDieCallback, {\n            entityTypes: [\"minecraft:player\"],\n          })\n        else world.afterEvents.entityDie.unsubscribe(afterEntityDieCallback)\n      },\n    },\n  })\n  .addItem({\n    name: \"back_cmd\",\n    description: \"允许使用独立的 back 命令\",\n    values: [[true], [false]],\n    defaultValue: false,\n    reload: true,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\"tpx:back_cmd -> from\", original, \"to\", selected),\n    },\n  })\n  .addItem({\n    name: \"home_cmd\",\n    description: \"允许使用独立的 home 命令\",\n    values: [[true], [false]],\n    defaultValue: false,\n    reload: true,\n    events: {\n      changed: (selected, original) =>\n        console.warn(\"tpx:home_cmd -> from\", original, \"to\", selected),\n    },\n  })\n","import { asyncRun } from \"@/util/game\"\n\nimport { ALL_PLAYER_DATABASES } from \"./db\"\nimport { option } from \"./option\"\n\nexport class Handler {\n  constructor(player) {\n    this.player = player\n    this.playerOption = option.getPlayer(player)\n    this.playerDB = ALL_PLAYER_DATABASES.get(player)\n  }\n\n  async set({ name = \"default\", option = {} }) {\n    const info = await this.playerDB.set(Object.assign({ name }, option))\n    if (name !== \"__back__\" && name !== \"__death__\") return { info }\n  }\n  async remove({ name = \"default\" }) {\n    return await this.playerDB.remove(name)\n  }\n  async teleport({ name = \"default\" }) {\n    const info = await this.playerDB.get(name)\n    if (info) {\n      if (\n        this.playerOption.getItemVal(\"auto_back_point\") &&\n        name !== \"__death__\"\n      ) {\n        await this.set({\n          name: \"__back__\",\n          option: {\n            disposable: true,\n            force: true,\n          },\n        })\n      }\n      await asyncRun(() =>\n        this.player.teleport(info.location, {\n          dimension: info.dimension,\n          checkForBlocks: false,\n          keepVelocity: false,\n        })\n      )\n      return { info }\n    }\n  }\n  async tryTeleport({ names = [] }) {\n    for (const name of names) {\n      const result = await this.teleport({ name })\n      if (result) return result\n    }\n  }\n  list() {\n    const datas = this.playerDB.getAll().map(({ text }) => text)\n    if (datas.length) return { msg: datas }\n  }\n}\n","import { Commands } from \"@/lib/commands/index\"\nimport { asyncRun, errorHandler } from \"@/util/game\"\n\nimport { Handler } from \"./Handler.class\"\nimport { option } from \"./option\"\n\nconst SUB_COMMANDS = [\n  \"set\",\n  \"-s\",\n  \"remove\",\n  \"rm\",\n  \"-r\",\n  \"back\",\n  \"bk\",\n  \"-b\",\n  \"list\",\n  \"ls\",\n  \"-l\",\n  \"help\",\n  \"-h\",\n  \"option\",\n  \"opt\",\n  \"-o\",\n]\n\nexport async function tpxCommand(argv, sender) {\n  const name = argv[2] ?? \"default\"\n  const handler = new Handler(sender)\n\n  switch (argv[1]) {\n    case \"set\":\n    case \"-s\": {\n      if (SUB_COMMANDS.includes(name) || name === \"__back__\")\n        throw errorHandler(`添加失败：不能使用 ${name} 作为名称`, sender)\n\n      const result = await handler.set({\n        name,\n        option: {\n          disposable:\n            argv[3] === \"true\" ? true : argv[3] === \"false\" ? false : null,\n        },\n      })\n\n      if (result) sender.sendMessage(`成功设置 ${name} 在 ${result.info}`)\n\n      break\n    }\n    case \"remove\":\n    case \"rm\":\n    case \"-r\": {\n      const result = await handler.remove({ name })\n\n      if (result === true) sender.sendMessage(`成功删除 ${name}`)\n      else if (result === false)\n        throw errorHandler(`删除失败：未找到 ${name}`, sender)\n\n      break\n    }\n    case \"back\":\n    case \"bk\":\n    case \"-b\": {\n      const result = await handler.tryTeleport({\n        names: [\"__death__\", \"__back__\"],\n      })\n\n      if (result) sender.sendMessage(`已返回到 ${result.info}`)\n      else throw errorHandler(\"传送失败：未找到返回点\", sender)\n\n      break\n    }\n    case \"list\":\n    case \"ls\":\n    case \"-l\": {\n      const result = handler.list()\n\n      if (result) {\n        result.msg.unshift(\"您的传送点有：\")\n        sender.sendMessage(result.msg.join(\"\\n- \"))\n      } else sender.sendMessage(\"您目前没有传送点\")\n\n      break\n    }\n    case \"help\":\n    case \"-h\": {\n      // TODO command-parser\n      sender.sendMessage(\"制作中...\")\n      break\n    }\n    case \"option\":\n    case \"opt\":\n    case \"-o\": {\n      await asyncRun(() => option.getPlayer(sender).showDialog())\n      break\n    }\n    default: {\n      const result = await handler.teleport({ name: argv[1] })\n\n      if (result) sender.sendMessage(`已传送到 ${result.info}`)\n      else throw errorHandler(`传送失败：未找到传送点 ${argv[1]}`, sender)\n    }\n  }\n}\n\nexport async function backCommand(_, sender) {\n  if (option.getPlayer(sender).getItemVal(\"back_cmd\"))\n    await Commands.asyncRun(\"!tpx back\", sender)\n  else sender.sendMessage(\"您未启用该命令\")\n}\n\nexport async function homeCommand(argv, sender) {\n  if (option.getPlayer(sender).getItemVal(\"home_cmd\")) {\n    switch (argv[1]) {\n      case \"set\": {\n        await Commands.asyncRun(\"!tpx set __home__\", sender)\n        break\n      }\n      default: {\n        await Commands.asyncRun(\"!tpx __home__\", sender)\n      }\n    }\n  } else sender.sendMessage(\"您未启用该命令\")\n}\n","import { world } from \"@minecraft/server\"\n\nimport { BetterConsole } from \"@/lib/BetterConsole.class\"\nimport { Commands } from \"@/lib/commands/index\"\nimport { each } from \"@/util/index\"\n\nimport { backCommand, homeCommand, tpxCommand } from \"./command\"\nimport { TpxDB } from \"./db\"\nimport { option } from \"./option\"\n\noption\n  .applyMainPlayer()\n  .then(() =>\n    each(world.getAllPlayers(), (player) => option.applyPlayer(player))\n  )\n  .then(() => option.init())\n  .then((optMap) => {\n    // 将所有玩家的数据库实例化并储存在 ALL_PLAYER_DATABASES 中\n    // 同时避免在 beforeEvent 中构建导致的 read-only mode 问题\n    const players = optMap.keys()\n    each(players, (player) => TpxDB.init(player))\n\n    Commands.register(\"!\", \"tpx\", tpxCommand)\n\n    const values = [...optMap.values()]\n    if (values.some(({ back_cmd }) => back_cmd))\n      Commands.register(\"!\", \"back\", backCommand)\n    if (values.some(({ home_cmd }) => home_cmd))\n      Commands.register(\"!\", \"home\", homeCommand)\n  })\n  .catch(BetterConsole.error)\n"],"names":["BetterConsole","error","err","console","stack","each","target","callbackfn","thisArg","Array","isArray","forEach","Symbol","iterator","item","call","Object","keys","key","i","eachAsync","asyncfn","length","safeEval","code","context","fn","Function","values","deserialize","str","JSON","parse","isAsyncFunc","func","toStringTag","overworld","world","getDimension","MinecraftDimensionTypes","CUSTOM_COMMAND_SET","Set","Commands","run","commandString","Dimension","Entity","runCommand","TypeError","asyncRun","customCommands","filter","regex","test","map","e","runner","runCommandAsync","register","prefix","command","callback","startsWith","Error","RegExp","argv","split","trim","add","beforeEvents","chatSend","subscribe","event","message","cancel","sender","catch","Promise","resolve","reject","system","errorHandler","errText","sendMessage","toString","waitForFirstPlayerInitialSpawn","players","getAllPlayers","afterEvents","playerSpawn","initialSpawn","player","unsubscribe","getOrAddObjective","id","name","objective","scoreboard","getObjective","addObjective","removeMinecraftNamespace","identifier","replace","base64map","crypt","rotl","n","b","rotr","endian","constructor","Number","randomBytes","bytes","push","Math","floor","random","bytesToWords","words","wordsToBytes","bytesToHex","hex","join","hexToBytes","c","parseInt","substr","bytesToBase64","base64","triplet","j","charAt","base64ToBytes","imod4","indexOf","pow","module","charenc","utf8","stringToBytes","bin","unescape","encodeURIComponent","bytesToString","decodeURIComponent","escape","charCodeAt","String","fromCharCode","obj","isBuffer","isSlowBuffer","_isBuffer","readFloatLE","slice","require","md5","options","encoding","prototype","Uint8Array","m","l","a","d","FF","_ff","GG","_gg","HH","_hh","II","_ii","aa","bb","cc","dd","x","s","t","_blocksize","_digestsize","undefined","digestbytes","asBytes","asString","UID_LENGTH","UID","generateUID","PLACE_HOLDER_REGEXP","IS_NATIVE_CODE_REGEXP","IS_PURE_FUNCTION","IS_ARROW_FUNCTION","UNSAFE_CHARS_REGEXP","RESERVED_SYMBOLS","ESCAPED_CHARS","escapeUnsafeChars","unsafeChar","result","deleteFunctions","functionKeys","serialize","space","functions","regexps","dates","maps","sets","arrays","undefs","infinities","bigInts","urls","replacer","value","ignoreFunction","BigInt","origValue","type","Date","Map","isSparse","URL","isNaN","isFinite","serializeFunc","serializedFn","argsStartsAt","def","val","nonReservedSymbols","isJSON","stringify","unsafe","match","backSlash","valueIndex","toISOString","source","flags","from","entries","assign","ALL_DATABASES","Database","open","dbName","_syncDataFromScoreboard","store","clear","getParticipants","participant","data","displayName","set","has","delete","get","removeParticipant","replaceAll","RangeError","setScore","getAll","output","Dialog","confirm","title","body","onCancel","onConfirm","form","dialog","MessageFormData","button1","button2","onClose","onSelectButton1","onSelectButton2","show","response","cancelationReason","FormCancelationReason","UserBusy","canceled","UserClosed","ModalFormResponse","onSubmit","formValues","MessageFormResponse","selection","ActionFormResponse","onSelect","_","round","equals","epsilon","abs","max","range","to","step","VectorN","create","vector","vectorStr","toPrimitive","toArray","hint","axes","dimensions","index","VectorNUtils","clone","_assertDimensions","subtract","multiply","divide","scale","negate","inverse","exchange","axis1","axis2","n0","n1","exactEquals","every","vectors","maxAxes","reduce","acc","fill","NEGATIVE_INFINITY","min","minAxes","POSITIVE_INFINITY","ceil","maxMagnitude","prev","curr","magnitude","minMagnitude","sqrt","squaredMagnitude","sum","distance","squaredDistance","diff","dot","normalize","angle","cosOmega","acos","lerp","slerp","omega","sinOmega","sin","EPSILON","ratioA","ratioB","bezier","points","newPoints","Vector3Utils","Vector3","cross","y","z","normalized","floored","ceiled","rounded","absoluted","copy","v","distanceTo","squaredDistanceTo","Location","centerCorrected","isNearTo","offset","LocationInfo","textify","location","dimension","ALL_PLAYER_DATABASES","TpxDB","init","db","disposable","force","info","handleSet","remove","text","EventEmitter","on","eventName","listener","_eventName","_events","once","_listener","args","removeListener","newListeners","emit","asyncEmit","addListener","off","NumberRange","array","includes","OptionItemRange","select","selected","_includes","original","events","_player","description","defaultValue","reload","_defaultValue","OptionItemSelection","hasVal","size","PlayerOption","addItem","opts","items","_syncToDB","getItemValMap","hasItem","_syncFromDB","setItemVal","syncFromDB","_getItem","__","___","getItemVal","done","parentDialog","handleDone","reply","showDialog","ModalFormData","nameMap","valuesMap","toggle","valueArray","dropdown","findIndex","slider","nameIndex","OptionNamespace","_items","applyPlayer","playerOpt","applyMainPlayer","valueMap","getPlayer","OptionManager","registerNamesapace","namespaces","getNamesapace","ActionFormData","button","optionManager","afterEntityDieCallback","deadEntity","handler","Handler","option","changed","warn","entityDie","entityTypes","playerDB","teleport","playerOption","checkForBlocks","keepVelocity","tryTeleport","names","list","datas","msg","SUB_COMMANDS","tpxCommand","unshift","backCommand","homeCommand","then","optMap","some","back_cmd","home_cmd"],"mappings":";;;;;;;;;;;AAAO,MAAMA,aAAAA,CAAAA;IACX,OAAOC,KAAAA,CAAMC,GAAG,EAAE;QAChBC,OAAQF,CAAAA,KAAK,CAAC,CAAC,EAAEC,GAAAA,CAAI,EAAE,EAAEA,GAAAA,CAAIE,KAAK,CAAC,CAAC,CAAA,CAAA;AACtC,KAAA;AACF;;ACJO,SAASC,IAAKC,CAAAA,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAA;AAC9C,IAAA,IAAIC,MAAMC,OAAO,CAACJ,SAASA,MAAOK,CAAAA,OAAO,CAACJ,UAAYC,EAAAA,OAAAA,CAAAA,CAAAA;AACjD,SAAA,IAAIF,MAAQ,GAACM,MAAOC,CAAAA,QAAQ,CAAC,EAChC,KAAK,MAAMC,IAAAA,IAAQR,MAAQC,CAAAA,UAAAA,CAAWQ,IAAI,CAACP,SAASM,IAAMR,EAAAA,MAAAA,CAAAA,CAAAA;SACvD,IAAI,OAAOA,WAAW,QACzBD,EAAAA,IAAAA,CAAKW,OAAOC,IAAI,CAACX,SAAS,CAACY,GAAAA,EAAKC,IAC9BZ,UAAWQ,CAAAA,IAAI,CAACP,OAASF,EAAAA,MAAM,CAACY,GAAI,CAAA,EAAEA,KAAKC,CAAGb,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA;AAEpD,CAAA;AAEO,eAAec,SAAUd,CAAAA,MAAM,EAAEe,OAAO,EAAEb,OAAO,EAAA;IACtD,IAAIC,KAAAA,CAAMC,OAAO,CAACJ,MAAAA,CAAAA,EAChB,IAAK,IAAIa,CAAAA,GAAI,CAAGA,EAAAA,CAAAA,GAAIb,MAAOgB,CAAAA,MAAM,EAAEH,CACjC,EAAA,CAAA,MAAME,QAAQN,IAAI,CAACP,SAASF,MAAM,CAACa,CAAE,CAAA,EAAEA,CAAGb,EAAAA,MAAAA,CAAAA,CAAAA;AACzC,SAAA,IAAIA,MAAQ,GAACM,MAAOC,CAAAA,QAAQ,CAAC,EAChC,KAAK,MAAMC,IAAAA,IAAQR,OAAQ,MAAMe,OAAAA,CAAQN,IAAI,CAACP,SAASM,IAAMR,EAAAA,MAAAA,CAAAA,CAAAA;SAC1D,IAAI,OAAOA,WAAW,QACzB,EAAA,MAAMc,UACJJ,MAAOC,CAAAA,IAAI,CAACX,MAAAA,CAAAA,EACZ,OAAOY,GAAAA,EAAKC,IAAM,MAAME,OAAAA,CAAQN,IAAI,CAACP,OAAAA,EAASF,MAAM,CAACY,GAAAA,CAAI,EAAEA,GAAAA,EAAKC,CAAGb,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA;AAEzE,CAAA;AAEO,SAASiB,QAASC,CAAAA,IAAI,EAAEC,OAAAA,GAAU,EAAE,EAAA;IACzC,MAAMC,EAAAA,GAAK,IAAIC,QAAAA,CAAAA,GAAYX,MAAOC,CAAAA,IAAI,CAACQ,OAAAA,CAAAA,EAAU,CAAC,OAAO,EAAED,IAAAA,CAAK,CAAC,CAAA,CAAA;IACjE,OAAOE,EAAAA,CAAAA,GAAMV,MAAOY,CAAAA,MAAM,CAACH,OAAAA,CAAAA,CAAAA,CAAAA;AAC7B,CAAA;AAEO,SAASI,YAAYC,GAAG,EAAA;IAC7B,IAAI;QACF,OAAOC,IAAAA,CAAKC,KAAK,CAACF,GAAAA,CAAAA,CAAAA;AACpB,KAAA,CAAE,OAAO5B,GAAK,EAAA;;AAEZ,QAAA,OAAOqB,SAAS,CAAC,CAAC,EAAEO,GAAAA,CAAI,CAAC,CAAC,CAAA,CAAA;AAC5B,KAAA;AACF,CAAA;AAGO,SAASG,YAAYC,IAAI,EAAA;AAC9B,IAAA,OAAOA,IAAI,CAACtB,MAAOuB,CAAAA,WAAW,CAAC,KAAK,eAAA,CAAA;AACtC;;AC5BA,MAAMC,SAAYC,GAAAA,KAAAA,CAAMC,YAAY,CAACC,wBAAwBH,SAAS,CAAA,CAAA;AAEtE,MAAMI,qBAAqB,IAAIC,GAAAA,EAAAA,CAAAA;AAExB,MAAMC,QAAAA,CAAAA;AACX,IAAA,OAAOC,GAAIC,CAAAA,aAAa,EAAEtC,MAAAA,GAAS8B,SAAS,EAAE;;AAE5C,QAAA,IAAI9B,kBAAkBuC,SAAavC,IAAAA,MAAAA,YAAkBwC,QACnD,OAAOxC,MAAAA,CAAOyC,UAAU,CAACH,aAAAA,CAAAA,CAAAA;AAC3B,QAAA,MAAM,IAAII,SAAU,CAAA,qCAAA,CAAA,CAAA;AACtB,KAAA;AACA,IAAA,aAAaC,QAASL,CAAAA,aAAa,EAAEtC,MAAAA,GAAS8B,SAAS,EAAE;;QAEvD,IAAI9B,MAAAA,YAAkBuC,SAAavC,IAAAA,MAAAA,YAAkBwC,MAAQ,EAAA;AAC3D,YAAA,MAAMI,cAAiB,GAAA;AAAIV,gBAAAA,GAAAA,kBAAAA;AAAmB,aAAA,CAC3CW,MAAM,CAAC,CAAC,EAAEC,KAAK,EAAE,GAAKA,KAAAA,CAAMC,IAAI,CAACT,gBACjCU,GAAG,CAAC,CAACC,CAAAA,GAAMA,EAAEC,MAAM,CAAA,CAAA;YACtB,IAAIN,cAAAA,CAAe5B,MAAM,EACvB,MAAMF,SAAAA,CACJ8B,gBACA,OAAOM,MAAAA,GAAW,MAAMA,MAAAA,CAAOZ,aAAetC,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA;iBAE7C,OAAO,MAAMA,MAAOmD,CAAAA,eAAe,CAACb,aAAAA,CAAAA,CAAAA;SACpC,MAAA,MAAM,IAAII,SAAU,CAAA,qCAAA,CAAA,CAAA;AAC7B,KAAA;IACA,OAAOU,QAAAA,CAASC,MAAM,EAAEC,OAAO,iBAAiBC,QAAQ,EAAE;AACxD,QAAA,IAAIF,OAAOG,UAAU,CAAC,GACpB,CAAA,EAAA,MAAM,IAAIC,KAAM,CAAA,oCAAA,CAAA,CAAA;QAElB,MAAMX,KAAAA,GAAQ,IAAIY,MAAAA,CAAO,CAAC,CAAC,EAAEL,MAAO,CAAA,EAAEC,OAAQ,CAAA,KAAK,CAAC,CAAA,CAAA;QACpD,MAAMJ,MAAAA,GAAS,OAAOZ,aAAetC,EAAAA,MAAAA,GAAAA;;AAEnC,YAAA,MAAM2D,IAAOrB,GAAAA,aAAAA,CACVsB,KAAK,CAAC,+BACNf,CAAAA,CAAAA,MAAM,CAAC,CAACI,CAAMA,GAAAA,CAAAA,CAAEY,IAAI,EAAA,CAAG7C,MAAM,GAAG,CAAA,CAAA,CAAA;AACnC,YAAA,MAAMuC,SAASI,IAAM3D,EAAAA,MAAAA,CAAAA,CAAAA;AACvB,SAAA,CAAA;AAEAkC,QAAAA,kBAAAA,CAAmB4B,GAAG,CAAC;AAAEhB,YAAAA,KAAAA;AAAOI,YAAAA,MAAAA;AAAO,SAAA,CAAA,CAAA;AAEvCnB,QAAAA,KAAAA,CAAMgC,YAAY,CAACC,QAAQ,CAACC,SAAS,CAAC,CAACC,KAAAA,GAAAA;AACrC,YAAA,IAAIpB,KAAMC,CAAAA,IAAI,CAACmB,KAAAA,CAAMC,OAAO,CAAG,EAAA;AAC7BD,gBAAAA,KAAAA,CAAME,MAAM,GAAG,IAAA,CAAA;gBAEflB,MAAOgB,CAAAA,KAAAA,CAAMC,OAAO,EAAED,KAAAA,CAAMG,MAAM,CAAEC,CAAAA,KAAK,CAAC5E,aAAAA,CAAcC,KAAK,CAAA,CAAA;AAC/D,aAAA;AACF,SAAA,CAAA,CAAA;AACF,KAAA;AACF;;ACtDO,SAASgD,SAASvB,EAAE,EAAA;IACzB,OAAO,IAAImD,OAAQ,CAAA,CAACC,OAASC,EAAAA,MAAAA,GAAAA;AAC3BC,QAAAA,MAAAA,CAAOrC,GAAG,CAAC,IAAA;YACT,IAAI;gBACFmC,OAAQpD,CAAAA,EAAAA,EAAAA,CAAAA,CAAAA;AACV,aAAA,CAAE,OAAOxB,GAAK,EAAA;gBACZ6E,MAAO7E,CAAAA,GAAAA,CAAAA,CAAAA;AACT,aAAA;AACF,SAAA,CAAA,CAAA;AACF,KAAA,CAAA,CAAA;AACF,CAAA;AAEO,SAAS+E,YAAAA,CAAaC,OAAO,EAAE5E,MAAM,EAAA;IAC1C,MAAMJ,GAAAA,GAAM,IAAI6D,KAAMmB,CAAAA,OAAAA,CAAAA,CAAAA;IACtB5E,MAAO6E,CAAAA,WAAW,CAACjF,GAAAA,CAAIkF,QAAQ,EAAA,CAAA,CAAA;IAC/B,OAAOlF,GAAAA,CAAAA;AACT,CAAA;AAEO,SAASmF,8BAAAA,GAAAA;IACd,MAAMC,OAAAA,GAAUjD,MAAMkD,aAAa,EAAA,CAAA;IACnC,IAAID,OAAAA,CAAQhE,MAAM,EAAE,OAAOuD,QAAQC,OAAO,CAACQ,OAAO,CAAC,CAAE,CAAA,CAAA,CAAA;IAErD,OAAO,IAAIT,QAAQ,CAACC,OAAAA,GAAAA;QAClB,MAAMjB,QAAAA,GAAWxB,MAAMmD,WAAW,CAACC,WAAW,CAAClB,SAAS,CAAC,CAACC,KAAAA,GAAAA;AACxD,YAAA,IAAIA,KAAMkB,CAAAA,YAAY,EAAEZ,OAAAA,CAAQN,MAAMmB,MAAM,CAAA,CAAA;AAC5CtD,YAAAA,KAAAA,CAAMmD,WAAW,CAACC,WAAW,CAACG,WAAW,CAAC/B,QAAAA,CAAAA,CAAAA;AAC5C,SAAA,CAAA,CAAA;AACF,KAAA,CAAA,CAAA;AACF,CAAA;AAEO,SAASgC,iBAAAA,CAAkBC,EAAE,EAAEC,IAAI,EAAA;AACxC,IAAA,MAAMC,SAAY3D,GAAAA,KAAAA,CAAM4D,UAAU,CAACC,YAAY,CAACJ,EAAAA,CAAAA,CAAAA;AAChD,IAAA,IAAI,CAACE,SAAAA,IAAa,CAACD,IAAAA,EAAM,MAAM,IAAIhC,KAAM,CAAA,CAAC,yBAAyB,EAAE+B,EAAG,CAAA,EAAE,CAAC,CAAA,CAAA;IAC3E,IAAI,CAACE,WAAW,OAAO3D,KAAAA,CAAM4D,UAAU,CAACE,YAAY,CAACL,EAAIC,EAAAA,IAAAA,CAAAA,CAAAA;IACzD,OAAOC,SAAAA,CAAAA;AACT,CAAA;AAEO,SAASI,yBAAyBC,UAAU,EAAA;IACjD,OAAOA,UAAAA,CAAWC,OAAO,CAAC,cAAgB,EAAA,EAAA,CAAA,CAAA;AAC5C;;;;;;;;;;AC7CC,CAAA,WAAA;IACC,IAAIC,SAAAA,GACE,oEAENC,OAAQ,GAAA;;QAENC,IAAM,EAAA,SAASC,CAAC,EAAEC,CAAC,EAAA;AACjB,YAAA,OAAO,CAACD,IAAKC,CAAMD,GAAAA,CAAAA,KAAO,EAAKC,GAAAA,CAAAA,CAAAA;AACjC,SAAA;;QAGAC,IAAM,EAAA,SAASF,CAAC,EAAEC,CAAC,EAAA;AACjB,YAAA,OAAO,CAACD,IAAM,EAAKC,GAAAA,CAAAA,GAAOD,CAAMC,KAAAA,CAAAA,CAAAA;AAClC,SAAA;;AAGAE,QAAAA,MAAAA,EAAQ,SAASH,CAAC,EAAA;;YAEhB,IAAIA,CAAAA,CAAEI,WAAW,IAAIC,MAAQ,EAAA;gBAC3B,OAAOP,OAAAA,CAAMC,IAAI,CAACC,CAAG,EAAA,CAAA,CAAA,GAAK,aAAaF,OAAMC,CAAAA,IAAI,CAACC,CAAAA,EAAG,EAAM,CAAA,GAAA,UAAA,CAAA;AAC7D,aAAA;;AAGA,YAAA,IAAK,IAAIvF,CAAI,GAAA,CAAA,EAAGA,CAAIuF,GAAAA,CAAAA,CAAEpF,MAAM,EAAEH,CAAAA,EAAAA,CAC5BuF,CAAC,CAACvF,EAAE,GAAGqF,OAAAA,CAAMK,MAAM,CAACH,CAAC,CAACvF,CAAE,CAAA,CAAA,CAAA;YAC1B,OAAOuF,CAAAA,CAAAA;AACT,SAAA;;AAGAM,QAAAA,WAAAA,EAAa,SAASN,CAAC,EAAA;AACrB,YAAA,IAAK,IAAIO,KAAAA,GAAQ,EAAE,EAAEP,IAAI,CAAGA,EAAAA,CAAAA,EAAAA,CAC1BO,KAAMC,CAAAA,IAAI,CAACC,IAAKC,CAAAA,KAAK,CAACD,IAAAA,CAAKE,MAAM,EAAK,GAAA,GAAA,CAAA,CAAA,CAAA;YACxC,OAAOJ,KAAAA,CAAAA;AACT,SAAA;;AAGAK,QAAAA,YAAAA,EAAc,SAASL,KAAK,EAAA;YAC1B,IAAK,IAAIM,KAAQ,GAAA,EAAE,EAAEpG,CAAAA,GAAI,GAAGwF,CAAI,GAAA,CAAA,EAAGxF,CAAI8F,GAAAA,KAAAA,CAAM3F,MAAM,EAAEH,KAAKwF,CAAK,IAAA,CAAA,CAC7DY,KAAK,CAACZ,CAAM,KAAA,CAAA,CAAE,IAAIM,KAAK,CAAC9F,CAAAA,CAAE,IAAK,EAAA,GAAKwF,CAAI,GAAA,EAAA,CAAA;YAC1C,OAAOY,KAAAA,CAAAA;AACT,SAAA;;AAGAC,QAAAA,YAAAA,EAAc,SAASD,KAAK,EAAA;YAC1B,IAAK,IAAIN,KAAQ,GAAA,EAAE,EAAEN,CAAAA,GAAI,GAAGA,CAAIY,GAAAA,KAAAA,CAAMjG,MAAM,GAAG,EAAIqF,EAAAA,CAAAA,IAAK,EACtDM,KAAMC,CAAAA,IAAI,CAAEK,KAAK,CAACZ,MAAM,CAAE,CAAA,KAAM,EAAKA,GAAAA,CAAAA,GAAI,EAAO,GAAA,IAAA,CAAA,CAAA;YAClD,OAAOM,KAAAA,CAAAA;AACT,SAAA;;AAGAQ,QAAAA,UAAAA,EAAY,SAASR,KAAK,EAAA;YACxB,IAAK,IAAIS,GAAM,GAAA,EAAE,EAAEvG,CAAAA,GAAI,GAAGA,CAAI8F,GAAAA,KAAAA,CAAM3F,MAAM,EAAEH,CAAK,EAAA,CAAA;gBAC/CuG,GAAIR,CAAAA,IAAI,CAAED,CAAAA,KAAK,CAAC9F,CAAAA,CAAE,KAAK,CAAA,EAAGiE,QAAQ,CAAC,EAAA,CAAA,CAAA,CAAA;gBACnCsC,GAAIR,CAAAA,IAAI,CAAED,CAAAA,KAAK,CAAC9F,CAAAA,CAAE,GAAG,GAAE,EAAGiE,QAAQ,CAAC,EAAA,CAAA,CAAA,CAAA;AACrC,aAAA;YACA,OAAOsC,GAAAA,CAAIC,IAAI,CAAC,EAAA,CAAA,CAAA;AAClB,SAAA;;AAGAC,QAAAA,UAAAA,EAAY,SAASF,GAAG,EAAA;YACtB,IAAK,IAAIT,QAAQ,EAAE,EAAEY,IAAI,CAAGA,EAAAA,CAAAA,GAAIH,IAAIpG,MAAM,EAAEuG,KAAK,CAC/CZ,CAAAA,KAAAA,CAAMC,IAAI,CAACY,QAAAA,CAASJ,IAAIK,MAAM,CAACF,GAAG,CAAI,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA;YACxC,OAAOZ,KAAAA,CAAAA;AACT,SAAA;;AAGAe,QAAAA,aAAAA,EAAe,SAASf,KAAK,EAAA;YAC3B,IAAK,IAAIgB,MAAS,GAAA,EAAE,EAAE9G,CAAAA,GAAI,CAAGA,EAAAA,CAAAA,GAAI8F,KAAM3F,CAAAA,MAAM,EAAEH,CAAAA,IAAK,CAAG,CAAA;AACrD,gBAAA,IAAI+G,UAAU,KAAM,CAAC/G,CAAAA,CAAE,IAAI,EAAO8F,GAAAA,KAAK,CAAC9F,CAAAA,GAAI,EAAE,IAAI,CAAA,GAAK8F,KAAK,CAAC9F,IAAI,CAAE,CAAA,CAAA;gBACnE,IAAK,IAAIgH,CAAI,GAAA,CAAA,EAAGA,CAAI,GAAA,CAAA,EAAGA,CACrB,EAAA,CAAA,IAAIhH,CAAI,GAAA,CAAA,GAAIgH,CAAI,GAAA,CAAA,IAAKlB,KAAM3F,CAAAA,MAAM,GAAG,CAAA,EAClC2G,MAAOf,CAAAA,IAAI,CAACX,SAAAA,CAAU6B,MAAM,CAAC,OAACF,KAAY,CAAK,IAAA,CAAIC,GAAAA,CAAAA,CAAM,GAAA,IAAA,CAAA,CAAA,CAAA;AAEzDF,qBAAAA,MAAAA,CAAOf,IAAI,CAAC,GAAA,CAAA,CAAA;AAClB,aAAA;YACA,OAAOe,MAAAA,CAAON,IAAI,CAAC,EAAA,CAAA,CAAA;AACrB,SAAA;;AAGAU,QAAAA,aAAAA,EAAe,SAASJ,MAAM,EAAA;;YAE5BA,MAASA,GAAAA,MAAAA,CAAO3B,OAAO,CAAC,gBAAkB,EAAA,EAAA,CAAA,CAAA;AAE1C,YAAA,IAAK,IAAIW,KAAAA,GAAQ,EAAE,EAAE9F,IAAI,CAAGmH,EAAAA,KAAAA,GAAQ,CAAGnH,EAAAA,CAAAA,GAAI8G,OAAO3G,MAAM,EACpDgH,KAAQ,GAAA,EAAEnH,IAAI,CAAG,CAAA;AACnB,gBAAA,IAAImH,SAAS,CAAG,EAAA,SAAA;AAChBrB,gBAAAA,KAAAA,CAAMC,IAAI,CAAC,CAAEX,UAAUgC,OAAO,CAACN,MAAOG,CAAAA,MAAM,CAACjH,CAAAA,GAAI,CAC1CgG,CAAAA,CAAAA,GAAAA,IAAAA,CAAKqB,GAAG,CAAC,CAAA,EAAG,CAAC,CAAA,GAAIF,KAAQ,GAAA,CAAA,CAAA,GAAK,CAAC,KAAOA,QAAQ,CAC9C/B,GAAAA,SAAAA,CAAUgC,OAAO,CAACN,MAAOG,CAAAA,MAAM,CAACjH,CAAAA,CAAAA,CAAAA,KAAS,IAAImH,KAAQ,GAAA,CAAA,CAAA,CAAA;AAC9D,aAAA;YACA,OAAOrB,KAAAA,CAAAA;AACT,SAAA;AACF,KAAA,CAAA;AAEAwB,IAAAA,KAAAA,CAAAA,OAAc,GAAGjC,OAAAA,CAAAA;AACnB,CAAA,GAAA,CAAA;;;;AC/FA,IAAIkC,OAAU,GAAA;;IAEZC,IAAM,EAAA;;AAEJC,QAAAA,aAAAA,EAAe,SAAS9G,GAAG,EAAA;AACzB,YAAA,OAAO4G,QAAQG,GAAG,CAACD,aAAa,CAACE,SAASC,kBAAmBjH,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAC/D,SAAA;;AAGAkH,QAAAA,aAAAA,EAAe,SAAS/B,KAAK,EAAA;AAC3B,YAAA,OAAOgC,mBAAmBC,MAAOR,CAAAA,OAAAA,CAAQG,GAAG,CAACG,aAAa,CAAC/B,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAC7D,SAAA;AACF,KAAA;;IAGA4B,GAAK,EAAA;;AAEHD,QAAAA,aAAAA,EAAe,SAAS9G,GAAG,EAAA;AACzB,YAAA,IAAK,IAAImF,KAAQ,GAAA,EAAE,EAAE9F,CAAAA,GAAI,GAAGA,CAAIW,GAAAA,GAAAA,CAAIR,MAAM,EAAEH,IAC1C8F,KAAMC,CAAAA,IAAI,CAACpF,GAAIqH,CAAAA,UAAU,CAAChI,CAAK,CAAA,GAAA,IAAA,CAAA,CAAA;YACjC,OAAO8F,KAAAA,CAAAA;AACT,SAAA;;AAGA+B,QAAAA,aAAAA,EAAe,SAAS/B,KAAK,EAAA;AAC3B,YAAA,IAAK,IAAInF,GAAM,GAAA,EAAE,EAAEX,CAAI,GAAA,CAAA,EAAGA,IAAI8F,KAAM3F,CAAAA,MAAM,EAAEH,CAC1CW,EAAAA,CAAAA,GAAAA,CAAIoF,IAAI,CAACkC,MAAAA,CAAOC,YAAY,CAACpC,KAAK,CAAC9F,CAAE,CAAA,CAAA,CAAA,CAAA;YACvC,OAAOW,GAAAA,CAAI6F,IAAI,CAAC,EAAA,CAAA,CAAA;AAClB,SAAA;AACF,KAAA;AACF,CAAA,CAAA;AAEAc,IAAAA,SAAc,GAAGC,OAAAA;;;;;;;;;ACzBjB;AACA;IACAD,UAAc,GAAG,SAAUa,GAAG,EAAA;IAC5B,OAAOA,GAAAA,IAAO,IAASC,KAAAA,QAASD,CAAAA,GAAAA,CAAAA,IAAQE,YAAaF,CAAAA,GAAAA,CAAAA,IAAQ,CAAC,CAACA,GAAIG,CAAAA,SAAS,CAAD,CAAA;AAC7E,CAAA,CAAA;AAEA,SAASF,SAAUD,GAAG,EAAA;AACpB,IAAA,OAAO,CAAC,CAACA,GAAAA,CAAIxC,WAAW,IAAI,OAAOwC,GAAIxC,CAAAA,WAAW,CAACyC,QAAQ,KAAK,UAAcD,IAAAA,GAAAA,CAAIxC,WAAW,CAACyC,QAAQ,CAACD,GAAAA,CAAAA,CAAAA;AACzG,CAAA;AAEA;AACA,SAASE,aAAcF,GAAG,EAAA;AACxB,IAAA,OAAO,OAAOA,GAAAA,CAAII,WAAW,KAAK,cAAc,OAAOJ,GAAAA,CAAIK,KAAK,KAAK,UAAcJ,IAAAA,QAAAA,CAASD,GAAIK,CAAAA,KAAK,CAAC,CAAG,EAAA,CAAA,CAAA,CAAA,CAAA;AAC3G;;ACpBC,CAAA,WAAA;AACC,IAAA,IAAInD,QAAQoD,YAAQ,EAChBjB,IAAOiB,GAAAA,UAAmBjB,IAAI,EAC9BY,QAAWK,GAAAA,YACXf,GAAMe,GAAAA,SAAmBf,CAAAA,GAAG;IAGhCgB,GAAM,GAAA,SAAUpF,OAAO,EAAEqF,OAAO,EAAA;;AAE9B,QAAA,IAAIrF,OAAQqC,CAAAA,WAAW,IAAIsC,MAAAA,EACzB,IAAIU,OAAAA,IAAWA,OAAQC,CAAAA,QAAQ,KAAK,QAAA,EAClCtF,OAAUoE,GAAAA,GAAAA,CAAID,aAAa,CAACnE,OAAAA,CAAAA,CAAAA;aAE5BA,OAAUkE,GAAAA,IAAAA,CAAKC,aAAa,CAACnE,OAAAA,CAAAA,CAAAA;aAC5B,IAAI8E,QAAAA,CAAS9E,OAChBA,CAAAA,EAAAA,OAAAA,GAAUhE,KAAMuJ,CAAAA,SAAS,CAACL,KAAK,CAAC5I,IAAI,CAAC0D,OAAS,EAAA,CAAA,CAAA,CAAA;aAC3C,IAAI,CAAChE,KAAMC,CAAAA,OAAO,CAAC+D,OAAAA,CAAAA,IAAYA,OAAQqC,CAAAA,WAAW,KAAKmD,UAAAA,EAC1DxF,OAAUA,GAAAA,OAAAA,CAAQW,QAAQ,EAAA,CAAA;;AAG5B,QAAA,IAAI8E,IAAI1D,KAAMc,CAAAA,YAAY,CAAC7C,OACvB0F,CAAAA,EAAAA,CAAAA,GAAI1F,QAAQnD,MAAM,GAAG,CACrB8I,EAAAA,CAAAA,GAAK,YACLzD,CAAI,GAAA,CAAC,WACLkB,CAAI,GAAA,CAAC,YACLwC,CAAK,GAAA,SAAA,CAAA;;AAGT,QAAA,IAAK,IAAIlJ,CAAI,GAAA,CAAA,EAAGA,IAAI+I,CAAE5I,CAAAA,MAAM,EAAEH,CAAK,EAAA,CAAA;AACjC+I,YAAAA,CAAC,CAAC/I,CAAAA,CAAE,GAAI,CAAC+I,CAAC,CAAC/I,CAAE,CAAA,IAAK,CAAM+I,GAAAA,CAAC,CAAC/I,CAAE,CAAA,KAAK,EAAE,IAAK,UACjC,GAAC,CAAC+I,CAAC,CAAC/I,CAAAA,CAAE,IAAI,EAAA,GAAO+I,CAAC,CAAC/I,CAAE,CAAA,KAAM,CAAC,IAAK,UAAA,CAAA;AAC1C,SAAA;;AAGA+I,QAAAA,CAAC,CAACC,CAAAA,KAAM,CAAE,CAAA,IAAI,QAASA,CAAI,GAAA,EAAA,CAAA;QAC3BD,CAAC,CAAC,CAAC,CAAEC,GAAI,OAAQ,CAAM,IAAA,CAAA,IAAK,EAAA,CAAG,GAAGA,CAAAA,CAAAA;;AAGlC,QAAA,IAAIG,EAAKT,GAAAA,GAAAA,CAAIU,GAAG,EACZC,KAAKX,GAAIY,CAAAA,GAAG,EACZC,EAAAA,GAAKb,GAAIc,CAAAA,GAAG,EACZC,EAAAA,GAAKf,IAAIgB,GAAG,CAAA;QAEhB,IAAK,IAAI1J,IAAI,CAAGA,EAAAA,CAAAA,GAAI+I,EAAE5I,MAAM,EAAEH,KAAK,EAAI,CAAA;AAErC,YAAA,IAAI2J,KAAKV,CACLW,EAAAA,EAAAA,GAAKpE,CACLqE,EAAAA,EAAAA,GAAKnD,GACLoD,EAAKZ,GAAAA,CAAAA,CAAAA;YAETD,CAAIE,GAAAA,EAAAA,CAAGF,CAAGzD,EAAAA,CAAAA,EAAGkB,CAAGwC,EAAAA,CAAAA,EAAGH,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,SAAA,CAAA,CAAA;YACjCkJ,CAAIC,GAAAA,EAAAA,CAAGD,CAAGD,EAAAA,CAAAA,EAAGzD,CAAGkB,EAAAA,CAAAA,EAAGqC,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YACjC0G,CAAIyC,GAAAA,EAAAA,CAAGzC,CAAGwC,EAAAA,CAAAA,EAAGD,CAAGzD,EAAAA,CAAAA,EAAGuD,CAAC,CAAC/I,CAAAA,GAAG,CAAE,CAAA,EAAE,EAAK,EAAA,SAAA,CAAA,CAAA;YACjCwF,CAAI2D,GAAAA,EAAAA,CAAG3D,CAAGkB,EAAAA,CAAAA,EAAGwC,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjCiJ,CAAIE,GAAAA,EAAAA,CAAGF,CAAGzD,EAAAA,CAAAA,EAAGkB,CAAGwC,EAAAA,CAAAA,EAAGH,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,SAAA,CAAA,CAAA;YACjCkJ,CAAIC,GAAAA,EAAAA,CAAGD,CAAGD,EAAAA,CAAAA,EAAGzD,CAAGkB,EAAAA,CAAAA,EAAGqC,CAAC,CAAC/I,CAAAA,GAAG,CAAE,CAAA,EAAE,EAAK,EAAA,UAAA,CAAA,CAAA;YACjC0G,CAAIyC,GAAAA,EAAAA,CAAGzC,CAAGwC,EAAAA,CAAAA,EAAGD,CAAGzD,EAAAA,CAAAA,EAAGuD,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjCwF,CAAI2D,GAAAA,EAAAA,CAAG3D,CAAGkB,EAAAA,CAAAA,EAAGwC,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,QAAA,CAAA,CAAA;YACjCiJ,CAAIE,GAAAA,EAAAA,CAAGF,CAAGzD,EAAAA,CAAAA,EAAGkB,CAAGwC,EAAAA,CAAAA,EAAGH,CAAC,CAAC/I,CAAAA,GAAG,CAAE,CAAA,EAAG,CAAI,EAAA,UAAA,CAAA,CAAA;YACjCkJ,CAAIC,GAAAA,EAAAA,CAAGD,CAAGD,EAAAA,CAAAA,EAAGzD,CAAGkB,EAAAA,CAAAA,EAAGqC,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjC0G,CAAIyC,GAAAA,EAAAA,CAAGzC,CAAGwC,EAAAA,CAAAA,EAAGD,CAAGzD,EAAAA,CAAAA,EAAGuD,CAAC,CAAC/I,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,KAAA,CAAA,CAAA;YACjCwF,CAAI2D,GAAAA,EAAAA,CAAG3D,CAAGkB,EAAAA,CAAAA,EAAGwC,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAAC/I,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjCiJ,CAAIE,GAAAA,EAAAA,CAAGF,CAAGzD,EAAAA,CAAAA,EAAGkB,CAAGwC,EAAAA,CAAAA,EAAGH,CAAC,CAAC/I,CAAAA,GAAE,EAAG,CAAA,EAAG,CAAI,EAAA,UAAA,CAAA,CAAA;YACjCkJ,CAAIC,GAAAA,EAAAA,CAAGD,CAAGD,EAAAA,CAAAA,EAAGzD,CAAGkB,EAAAA,CAAAA,EAAGqC,CAAC,CAAC/I,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,QAAA,CAAA,CAAA;YACjC0G,CAAIyC,GAAAA,EAAAA,CAAGzC,CAAGwC,EAAAA,CAAAA,EAAGD,CAAGzD,EAAAA,CAAAA,EAAGuD,CAAC,CAAC/I,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjCwF,CAAI2D,GAAAA,EAAAA,CAAG3D,CAAGkB,EAAAA,CAAAA,EAAGwC,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAAC/I,CAAAA,GAAE,EAAG,CAAA,EAAE,EAAK,EAAA,UAAA,CAAA,CAAA;YAEjCiJ,CAAII,GAAAA,EAAAA,CAAGJ,CAAGzD,EAAAA,CAAAA,EAAGkB,CAAGwC,EAAAA,CAAAA,EAAGH,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,SAAA,CAAA,CAAA;YACjCkJ,CAAIG,GAAAA,EAAAA,CAAGH,CAAGD,EAAAA,CAAAA,EAAGzD,CAAGkB,EAAAA,CAAAA,EAAGqC,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,UAAA,CAAA,CAAA;YACjC0G,CAAI2C,GAAAA,EAAAA,CAAG3C,CAAGwC,EAAAA,CAAAA,EAAGD,CAAGzD,EAAAA,CAAAA,EAAGuD,CAAC,CAAC/I,CAAAA,GAAE,EAAG,CAAA,EAAE,EAAK,EAAA,SAAA,CAAA,CAAA;YACjCwF,CAAI6D,GAAAA,EAAAA,CAAG7D,CAAGkB,EAAAA,CAAAA,EAAGwC,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YACjCiJ,CAAII,GAAAA,EAAAA,CAAGJ,CAAGzD,EAAAA,CAAAA,EAAGkB,CAAGwC,EAAAA,CAAAA,EAAGH,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,SAAA,CAAA,CAAA;YACjCkJ,CAAIG,GAAAA,EAAAA,CAAGH,CAAGD,EAAAA,CAAAA,EAAGzD,CAAGkB,EAAAA,CAAAA,EAAGqC,CAAC,CAAC/I,CAAAA,GAAE,EAAG,CAAA,EAAG,CAAI,EAAA,QAAA,CAAA,CAAA;YACjC0G,CAAI2C,GAAAA,EAAAA,CAAG3C,CAAGwC,EAAAA,CAAAA,EAAGD,CAAGzD,EAAAA,CAAAA,EAAGuD,CAAC,CAAC/I,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YACjCwF,CAAI6D,GAAAA,EAAAA,CAAG7D,CAAGkB,EAAAA,CAAAA,EAAGwC,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YACjCiJ,CAAII,GAAAA,EAAAA,CAAGJ,CAAGzD,EAAAA,CAAAA,EAAGkB,CAAGwC,EAAAA,CAAAA,EAAGH,CAAC,CAAC/I,CAAAA,GAAG,CAAE,CAAA,EAAG,CAAI,EAAA,SAAA,CAAA,CAAA;YACjCkJ,CAAIG,GAAAA,EAAAA,CAAGH,CAAGD,EAAAA,CAAAA,EAAGzD,CAAGkB,EAAAA,CAAAA,EAAGqC,CAAC,CAAC/I,CAAE,GAAA,EAAA,CAAG,EAAG,CAAA,EAAG,CAAC,UAAA,CAAA,CAAA;YACjC0G,CAAI2C,GAAAA,EAAAA,CAAG3C,CAAGwC,EAAAA,CAAAA,EAAGD,CAAGzD,EAAAA,CAAAA,EAAGuD,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YACjCwF,CAAI6D,GAAAA,EAAAA,CAAG7D,CAAGkB,EAAAA,CAAAA,EAAGwC,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAAC/I,CAAAA,GAAG,CAAE,CAAA,EAAE,EAAK,EAAA,UAAA,CAAA,CAAA;YACjCiJ,CAAII,GAAAA,EAAAA,CAAGJ,CAAGzD,EAAAA,CAAAA,EAAGkB,CAAGwC,EAAAA,CAAAA,EAAGH,CAAC,CAAC/I,CAAE,GAAA,EAAA,CAAG,EAAG,CAAA,EAAG,CAAC,UAAA,CAAA,CAAA;YACjCkJ,CAAIG,GAAAA,EAAAA,CAAGH,CAAGD,EAAAA,CAAAA,EAAGzD,CAAGkB,EAAAA,CAAAA,EAAGqC,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,QAAA,CAAA,CAAA;YACjC0G,CAAI2C,GAAAA,EAAAA,CAAG3C,CAAGwC,EAAAA,CAAAA,EAAGD,CAAGzD,EAAAA,CAAAA,EAAGuD,CAAC,CAAC/I,CAAAA,GAAG,CAAE,CAAA,EAAE,EAAK,EAAA,UAAA,CAAA,CAAA;YACjCwF,CAAI6D,GAAAA,EAAAA,CAAG7D,CAAGkB,EAAAA,CAAAA,EAAGwC,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAAC/I,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YAEjCiJ,CAAIM,GAAAA,EAAAA,CAAGN,CAAGzD,EAAAA,CAAAA,EAAGkB,CAAGwC,EAAAA,CAAAA,EAAGH,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,MAAA,CAAA,CAAA;YACjCkJ,CAAIK,GAAAA,EAAAA,CAAGL,CAAGD,EAAAA,CAAAA,EAAGzD,CAAGkB,EAAAA,CAAAA,EAAGqC,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjC0G,CAAI6C,GAAAA,EAAAA,CAAG7C,CAAGwC,EAAAA,CAAAA,EAAGD,CAAGzD,EAAAA,CAAAA,EAAGuD,CAAC,CAAC/I,CAAAA,GAAE,EAAG,CAAA,EAAE,EAAK,EAAA,UAAA,CAAA,CAAA;YACjCwF,CAAI+D,GAAAA,EAAAA,CAAG/D,CAAGkB,EAAAA,CAAAA,EAAGwC,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAAC/I,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,QAAA,CAAA,CAAA;YACjCiJ,CAAIM,GAAAA,EAAAA,CAAGN,CAAGzD,EAAAA,CAAAA,EAAGkB,CAAGwC,EAAAA,CAAAA,EAAGH,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,UAAA,CAAA,CAAA;YACjCkJ,CAAIK,GAAAA,EAAAA,CAAGL,CAAGD,EAAAA,CAAAA,EAAGzD,CAAGkB,EAAAA,CAAAA,EAAGqC,CAAC,CAAC/I,CAAAA,GAAG,CAAE,CAAA,EAAE,EAAK,EAAA,UAAA,CAAA,CAAA;YACjC0G,CAAI6C,GAAAA,EAAAA,CAAG7C,CAAGwC,EAAAA,CAAAA,EAAGD,CAAGzD,EAAAA,CAAAA,EAAGuD,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YACjCwF,CAAI+D,GAAAA,EAAAA,CAAG/D,CAAGkB,EAAAA,CAAAA,EAAGwC,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAAC/I,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjCiJ,CAAIM,GAAAA,EAAAA,CAAGN,CAAGzD,EAAAA,CAAAA,EAAGkB,CAAGwC,EAAAA,CAAAA,EAAGH,CAAC,CAAC/I,CAAAA,GAAE,EAAG,CAAA,EAAG,CAAI,EAAA,SAAA,CAAA,CAAA;YACjCkJ,CAAIK,GAAAA,EAAAA,CAAGL,CAAGD,EAAAA,CAAAA,EAAGzD,CAAGkB,EAAAA,CAAAA,EAAGqC,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YACjC0G,CAAI6C,GAAAA,EAAAA,CAAG7C,CAAGwC,EAAAA,CAAAA,EAAGD,CAAGzD,EAAAA,CAAAA,EAAGuD,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YACjCwF,CAAI+D,GAAAA,EAAAA,CAAG/D,CAAGkB,EAAAA,CAAAA,EAAGwC,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAAC/I,CAAAA,GAAG,CAAE,CAAA,EAAE,EAAK,EAAA,QAAA,CAAA,CAAA;YACjCiJ,CAAIM,GAAAA,EAAAA,CAAGN,CAAGzD,EAAAA,CAAAA,EAAGkB,CAAGwC,EAAAA,CAAAA,EAAGH,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,SAAA,CAAA,CAAA;YACjCkJ,CAAIK,GAAAA,EAAAA,CAAGL,CAAGD,EAAAA,CAAAA,EAAGzD,CAAGkB,EAAAA,CAAAA,EAAGqC,CAAC,CAAC/I,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YACjC0G,CAAI6C,GAAAA,EAAAA,CAAG7C,CAAGwC,EAAAA,CAAAA,EAAGD,CAAGzD,EAAAA,CAAAA,EAAGuD,CAAC,CAAC/I,CAAAA,GAAE,EAAG,CAAA,EAAE,EAAK,EAAA,SAAA,CAAA,CAAA;YACjCwF,CAAI+D,GAAAA,EAAAA,CAAG/D,CAAGkB,EAAAA,CAAAA,EAAGwC,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YAEjCiJ,CAAIQ,GAAAA,EAAAA,CAAGR,CAAGzD,EAAAA,CAAAA,EAAGkB,CAAGwC,EAAAA,CAAAA,EAAGH,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,SAAA,CAAA,CAAA;YACjCkJ,CAAIO,GAAAA,EAAAA,CAAGP,CAAGD,EAAAA,CAAAA,EAAGzD,CAAGkB,EAAAA,CAAAA,EAAGqC,CAAC,CAAC/I,CAAAA,GAAG,CAAE,CAAA,EAAE,EAAK,EAAA,UAAA,CAAA,CAAA;YACjC0G,CAAI+C,GAAAA,EAAAA,CAAG/C,CAAGwC,EAAAA,CAAAA,EAAGD,CAAGzD,EAAAA,CAAAA,EAAGuD,CAAC,CAAC/I,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjCwF,CAAIiE,GAAAA,EAAAA,CAAGjE,CAAGkB,EAAAA,CAAAA,EAAGwC,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,QAAA,CAAA,CAAA;YACjCiJ,CAAIQ,GAAAA,EAAAA,CAAGR,CAAGzD,EAAAA,CAAAA,EAAGkB,CAAGwC,EAAAA,CAAAA,EAAGH,CAAC,CAAC/I,CAAAA,GAAE,EAAG,CAAA,EAAG,CAAI,EAAA,UAAA,CAAA,CAAA;YACjCkJ,CAAIO,GAAAA,EAAAA,CAAGP,CAAGD,EAAAA,CAAAA,EAAGzD,CAAGkB,EAAAA,CAAAA,EAAGqC,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjC0G,CAAI+C,GAAAA,EAAAA,CAAG/C,CAAGwC,EAAAA,CAAAA,EAAGD,CAAGzD,EAAAA,CAAAA,EAAGuD,CAAC,CAAC/I,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,OAAA,CAAA,CAAA;YACjCwF,CAAIiE,GAAAA,EAAAA,CAAGjE,CAAGkB,EAAAA,CAAAA,EAAGwC,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjCiJ,CAAIQ,GAAAA,EAAAA,CAAGR,CAAGzD,EAAAA,CAAAA,EAAGkB,CAAGwC,EAAAA,CAAAA,EAAGH,CAAC,CAAC/I,CAAAA,GAAG,CAAE,CAAA,EAAG,CAAI,EAAA,UAAA,CAAA,CAAA;YACjCkJ,CAAIO,GAAAA,EAAAA,CAAGP,CAAGD,EAAAA,CAAAA,EAAGzD,CAAGkB,EAAAA,CAAAA,EAAGqC,CAAC,CAAC/I,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,QAAA,CAAA,CAAA;YACjC0G,CAAI+C,GAAAA,EAAAA,CAAG/C,CAAGwC,EAAAA,CAAAA,EAAGD,CAAGzD,EAAAA,CAAAA,EAAGuD,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjCwF,CAAIiE,GAAAA,EAAAA,CAAGjE,CAAGkB,EAAAA,CAAAA,EAAGwC,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAAC/I,CAAAA,GAAE,EAAG,CAAA,EAAE,EAAK,EAAA,UAAA,CAAA,CAAA;YACjCiJ,CAAIQ,GAAAA,EAAAA,CAAGR,CAAGzD,EAAAA,CAAAA,EAAGkB,CAAGwC,EAAAA,CAAAA,EAAGH,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAG,CAAA,EAAG,CAAC,SAAA,CAAA,CAAA;YACjCkJ,CAAIO,GAAAA,EAAAA,CAAGP,CAAGD,EAAAA,CAAAA,EAAGzD,CAAGkB,EAAAA,CAAAA,EAAGqC,CAAC,CAAC/I,CAAE,GAAA,EAAA,CAAG,EAAE,EAAA,EAAI,CAAC,UAAA,CAAA,CAAA;YACjC0G,CAAI+C,GAAAA,EAAAA,CAAG/C,CAAGwC,EAAAA,CAAAA,EAAGD,CAAGzD,EAAAA,CAAAA,EAAGuD,CAAC,CAAC/I,CAAAA,GAAG,CAAE,CAAA,EAAE,EAAK,EAAA,SAAA,CAAA,CAAA;YACjCwF,CAAIiE,GAAAA,EAAAA,CAAGjE,CAAGkB,EAAAA,CAAAA,EAAGwC,CAAGD,EAAAA,CAAAA,EAAGF,CAAC,CAAC/I,CAAG,GAAA,CAAA,CAAE,EAAE,EAAA,EAAI,CAAC,SAAA,CAAA,CAAA;YAEjCiJ,CAAI,GAACA,IAAIU,EAAQ,KAAA,CAAA,CAAA;YACjBnE,CAAI,GAACA,IAAIoE,EAAQ,KAAA,CAAA,CAAA;YACjBlD,CAAI,GAACA,IAAImD,EAAQ,KAAA,CAAA,CAAA;YACjBX,CAAI,GAACA,IAAIY,EAAQ,KAAA,CAAA,CAAA;AACnB,SAAA;QAEA,OAAOzE,KAAAA,CAAMK,MAAM,CAAC;AAACuD,YAAAA,CAAAA;AAAGzD,YAAAA,CAAAA;AAAGkB,YAAAA,CAAAA;AAAGwC,YAAAA,CAAAA;AAAE,SAAA,CAAA,CAAA;AAClC,KAAA,CAAA;;AAGAR,IAAAA,GAAAA,CAAIU,GAAG,GAAI,SAAUH,CAAC,EAAEzD,CAAC,EAAEkB,CAAC,EAAEwC,CAAC,EAAEa,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAA;AACtC,QAAA,IAAI1E,CAAI0D,GAAAA,CAAAA,IAAKzD,CAAAA,GAAIkB,CAAI,GAAA,CAAClB,CAAI0D,GAAAA,CAAAA,CAAMa,IAAAA,CAAM,KAAA,CAAA,CAAKE,GAAAA,CAAAA,CAAAA;QAC3C,OAAQ,CAAA,CAAC1E,IAAKyE,IAAMzE,CAAO,KAAA,EAAA,GAAKyE,CAAE,IAAKxE,CAAAA,CAAAA;AACzC,KAAA,CAAA;AACAkD,IAAAA,GAAAA,CAAIY,GAAG,GAAI,SAAUL,CAAC,EAAEzD,CAAC,EAAEkB,CAAC,EAAEwC,CAAC,EAAEa,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAA;AACtC,QAAA,IAAI1E,CAAI0D,GAAAA,CAAAA,IAAKzD,CAAAA,GAAI0D,CAAIxC,GAAAA,CAAAA,GAAI,CAACwC,CAAAA,CAAMa,IAAAA,CAAM,KAAA,CAAA,CAAKE,GAAAA,CAAAA,CAAAA;QAC3C,OAAQ,CAAA,CAAC1E,IAAKyE,IAAMzE,CAAO,KAAA,EAAA,GAAKyE,CAAE,IAAKxE,CAAAA,CAAAA;AACzC,KAAA,CAAA;AACAkD,IAAAA,GAAAA,CAAIc,GAAG,GAAI,SAAUP,CAAC,EAAEzD,CAAC,EAAEkB,CAAC,EAAEwC,CAAC,EAAEa,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAA;QACtC,IAAI1E,CAAAA,GAAI0D,CAAKzD,IAAAA,CAAIkB,GAAAA,CAAAA,GAAIwC,CAAAA,CAAMa,IAAAA,CAAM,KAAA,CAAA,CAAKE,GAAAA,CAAAA,CAAAA;QACtC,OAAQ,CAAA,CAAC1E,IAAKyE,IAAMzE,CAAO,KAAA,EAAA,GAAKyE,CAAE,IAAKxE,CAAAA,CAAAA;AACzC,KAAA,CAAA;AACAkD,IAAAA,GAAAA,CAAIgB,GAAG,GAAI,SAAUT,CAAC,EAAEzD,CAAC,EAAEkB,CAAC,EAAEwC,CAAC,EAAEa,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAA;AACtC,QAAA,IAAI1E,CAAI0D,GAAAA,CAAAA,IAAKvC,CAAAA,IAAKlB,CAAAA,GAAI,CAAC0D,CAAAA,CAAC,CAAA,IAAMa,CAAAA,KAAM,CAAA,CAAKE,GAAAA,CAAAA,CAAAA;QACzC,OAAQ,CAAA,CAAC1E,IAAKyE,IAAMzE,CAAO,KAAA,EAAA,GAAKyE,CAAE,IAAKxE,CAAAA,CAAAA;AACzC,KAAA,CAAA;;AAGAkD,IAAAA,GAAAA,CAAIwB,UAAU,GAAG,EAAA,CAAA;AACjBxB,IAAAA,GAAAA,CAAIyB,WAAW,GAAG,EAAA,CAAA;AAElB7C,IAAAA,aAAc,GAAG,SAAUhE,OAAO,EAAEqF,OAAO,EAAA;AACzC,QAAA,IAAIrF,YAAY8G,SAAa9G,IAAAA,OAAAA,KAAY,MACvC,MAAM,IAAIV,MAAM,mBAAsBU,GAAAA,OAAAA,CAAAA,CAAAA;AAExC,QAAA,IAAI+G,WAAchF,GAAAA,KAAAA,CAAMgB,YAAY,CAACqC,IAAIpF,OAASqF,EAAAA,OAAAA,CAAAA,CAAAA,CAAAA;AAClD,QAAA,OAAOA,OAAWA,IAAAA,OAAAA,CAAQ2B,OAAO,GAAGD,cAChC1B,OAAWA,IAAAA,OAAAA,CAAQ4B,QAAQ,GAAG7C,IAAIG,aAAa,CAACwC,WAChDhF,CAAAA,GAAAA,KAAAA,CAAMiB,UAAU,CAAC+D,WAAAA,CAAAA,CAAAA;AACvB,KAAA,CAAA;AAEF,CAAA,GAAA,CAAA;;;;;IC/JA/C,WAAc,GAAGmB,UAAQ,CAAU5C,WAAW;;;;;;;ACQ9C,IAAIA,cAAc4C,WAAQ,CAAA;AAE1B;AACA,IAAI+B,UAAsB,GAAA,EAAA,CAAA;AAC1B,IAAIC,GAAsBC,GAAAA,WAAAA,EAAAA,CAAAA;AAC1B,IAAIC,mBAAsB,GAAA,IAAI9H,MAAO,CAAA,mCAAA,GAAsC4H,MAAM,aAAe,EAAA,GAAA,CAAA,CAAA;AAEhG,IAAIG,qBAAwB,GAAA,4BAAA,CAAA;AAC5B,IAAIC,gBAAmB,GAAA,eAAA,CAAA;AACvB,IAAIC,iBAAoB,GAAA,UAAA,CAAA;AACxB,IAAIC,mBAAwB,GAAA,qBAAA,CAAA;AAE5B,IAAIC,gBAAmB,GAAA;AAAC,IAAA,GAAA;AAAK,IAAA,OAAA;AAAQ,CAAA,CAAA;AAErC;AACA;AACA,IAAIC,aAAgB,GAAA;IAChB,GAAU,EAAA,SAAA;IACV,GAAU,EAAA,SAAA;IACV,GAAU,EAAA,SAAA;IACV,QAAU,EAAA,SAAA;IACV,QAAU,EAAA,SAAA;AACd,CAAA,CAAA;AAEA,SAASC,kBAAkBC,UAAU,EAAA;IACjC,OAAOF,aAAa,CAACE,UAAW,CAAA,CAAA;AACpC,CAAA;AAEA,SAAST,WAAAA,GAAAA;AACL,IAAA,IAAI5E,QAAQD,WAAY2E,CAAAA,UAAAA,CAAAA,CAAAA;AACxB,IAAA,IAAIY,MAAS,GAAA,EAAA,CAAA;AACb,IAAA,IAAI,IAAIpL,CAAE,GAAA,CAAA,EAAGA,CAAEwK,GAAAA,UAAAA,EAAY,EAAExK,CAAG,CAAA;AAC5BoL,QAAAA,MAAAA,IAAUtF,KAAK,CAAC9F,CAAE,CAAA,CAACiE,QAAQ,CAAC,EAAA,CAAA,CAAA;AAChC,KAAA;IACA,OAAOmH,MAAAA,CAAAA;AACX,CAAA;AAEA,SAASC,gBAAgBlD,GAAG,EAAA;AACxB,IAAA,IAAImD,eAAe,EAAE,CAAA;IACrB,IAAK,IAAIvL,OAAOoI,GAAK,CAAA;AACjB,QAAA,IAAI,OAAOA,GAAG,CAACpI,GAAAA,CAAI,KAAK,UAAY,EAAA;AAChCuL,YAAAA,YAAAA,CAAavF,IAAI,CAAChG,GAAAA,CAAAA,CAAAA;AACtB,SAAA;AACJ,KAAA;AACA,IAAA,IAAK,IAAIC,CAAI,GAAA,CAAA,EAAGA,IAAIsL,YAAanL,CAAAA,MAAM,EAAEH,CAAK,EAAA,CAAA;AAC1C,QAAA,OAAOmI,GAAG,CAACmD,YAAY,CAACtL,EAAE,CAAC,CAAA;AAC/B,KAAA;AACJ,CAAA;AAEAsH,IAAAA,mBAAc,GAAG,SAASiE,SAAUpD,CAAAA,GAAG,EAAEQ,OAAO,EAAA;IAC5CA,OAAYA,KAAAA,OAAU,GAAA,EAAC,CAAA,CAAA;;AAGvB,IAAA,IAAI,OAAOA,OAAAA,KAAY,QAAY,IAAA,OAAOA,YAAY,QAAU,EAAA;QAC5DA,OAAU,GAAA;YAAC6C,KAAO7C,EAAAA,OAAAA;AAAO,SAAA,CAAA;AAC7B,KAAA;AAEA,IAAA,IAAI8C,YAAY,EAAE,CAAA;AAClB,IAAA,IAAIC,UAAY,EAAE,CAAA;AAClB,IAAA,IAAIC,QAAY,EAAE,CAAA;AAClB,IAAA,IAAIC,OAAY,EAAE,CAAA;AAClB,IAAA,IAAIC,OAAY,EAAE,CAAA;AAClB,IAAA,IAAIC,SAAY,EAAE,CAAA;AAClB,IAAA,IAAIC,SAAY,EAAE,CAAA;AAClB,IAAA,IAAIC,aAAY,EAAE,CAAA;AAClB,IAAA,IAAIC,UAAU,EAAE,CAAA;AAChB,IAAA,IAAIC,OAAO,EAAE,CAAA;;;IAIb,SAASC,QAAAA,CAASpM,GAAG,EAAEqM,KAAK,EAAA;;QAGxB,IAAGzD,OAAAA,CAAQ0D,cAAc,EAAC;YACtBhB,eAAgBe,CAAAA,KAAAA,CAAAA,CAAAA;AACpB,SAAA;AAEA,QAAA,IAAI,CAACA,KAASA,IAAAA,KAAAA,KAAUhC,SAAagC,IAAAA,KAAAA,KAAUE,OAAO,CAAI,CAAA,EAAA;YACtD,OAAOF,KAAAA,CAAAA;AACX,SAAA;;;QAIA,IAAIG,SAAAA,GAAY,IAAI,CAACxM,GAAI,CAAA,CAAA;AACzB,QAAA,IAAIyM,OAAO,OAAOD,SAAAA,CAAAA;AAElB,QAAA,IAAIC,SAAS,QAAU,EAAA;AACnB,YAAA,IAAGD,qBAAqB1J,MAAQ,EAAA;gBAC5B,OAAO,OAAA,GAAU4H,MAAM,GAAOiB,IAAAA,QAAQ3F,IAAI,CAACwG,SAAa,CAAA,GAAA,CAAA,CAAK,GAAA,KAAA,CAAA;AACjE,aAAA;AAEA,YAAA,IAAGA,qBAAqBE,IAAM,EAAA;gBAC1B,OAAO,OAAA,GAAUhC,MAAM,GAAOkB,IAAAA,MAAM5F,IAAI,CAACwG,SAAa,CAAA,GAAA,CAAA,CAAK,GAAA,KAAA,CAAA;AAC/D,aAAA;AAEA,YAAA,IAAGA,qBAAqBG,GAAK,EAAA;gBACzB,OAAO,OAAA,GAAUjC,MAAM,GAAOmB,IAAAA,KAAK7F,IAAI,CAACwG,SAAa,CAAA,GAAA,CAAA,CAAK,GAAA,KAAA,CAAA;AAC9D,aAAA;AAEA,YAAA,IAAGA,qBAAqBjL,GAAK,EAAA;gBACzB,OAAO,OAAA,GAAUmJ,MAAM,GAAOoB,IAAAA,KAAK9F,IAAI,CAACwG,SAAa,CAAA,GAAA,CAAA,CAAK,GAAA,KAAA,CAAA;AAC9D,aAAA;AAEA,YAAA,IAAGA,qBAAqBjN,KAAO,EAAA;gBAC3B,IAAIqN,QAAAA,GAAWJ,SAAUvK,CAAAA,MAAM,CAAC,WAAA;oBAAW,OAAO,IAAA,CAAA;iBAAO7B,CAAAA,CAAAA,MAAM,KAAKoM,SAAAA,CAAUpM,MAAM,CAAA;AACpF,gBAAA,IAAIwM,QAAU,EAAA;oBACV,OAAO,OAAA,GAAUlC,MAAM,GAAOqB,IAAAA,OAAO/F,IAAI,CAACwG,SAAa,CAAA,GAAA,CAAA,CAAK,GAAA,KAAA,CAAA;AAChE,iBAAA;AACJ,aAAA;AAEA,YAAA,IAAGA,qBAAqBK,GAAK,EAAA;gBACzB,OAAO,OAAA,GAAUnC,MAAM,GAAOyB,IAAAA,KAAKnG,IAAI,CAACwG,SAAa,CAAA,GAAA,CAAA,CAAK,GAAA,KAAA,CAAA;AAC9D,aAAA;AACJ,SAAA;AAEA,QAAA,IAAIC,SAAS,UAAY,EAAA;YACrB,OAAO,OAAA,GAAU/B,MAAM,GAAOgB,IAAAA,UAAU1F,IAAI,CAACwG,SAAa,CAAA,GAAA,CAAA,CAAK,GAAA,KAAA,CAAA;AACnE,SAAA;AAEA,QAAA,IAAIC,SAAS,WAAa,EAAA;YACtB,OAAO,OAAA,GAAU/B,MAAM,GAAOsB,IAAAA,OAAOhG,IAAI,CAACwG,SAAa,CAAA,GAAA,CAAA,CAAK,GAAA,KAAA,CAAA;AAChE,SAAA;AAEA,QAAA,IAAIC,SAAS,QAAY,IAAA,CAACK,MAAMN,SAAc,CAAA,IAAA,CAACO,SAASP,SAAY,CAAA,EAAA;YAChE,OAAO,OAAA,GAAU9B,MAAM,GAAOuB,IAAAA,WAAWjG,IAAI,CAACwG,SAAa,CAAA,GAAA,CAAA,CAAK,GAAA,KAAA,CAAA;AACpE,SAAA;AAEA,QAAA,IAAIC,SAAS,QAAU,EAAA;YACnB,OAAO,OAAA,GAAU/B,MAAM,GAAOwB,IAAAA,QAAQlG,IAAI,CAACwG,SAAa,CAAA,GAAA,CAAA,CAAK,GAAA,KAAA,CAAA;AACjE,SAAA;QAEA,OAAOH,KAAAA,CAAAA;AACX,KAAA;AAEA,IAAA,SAASW,cAAcxM,EAAE,EAAA;QACvB,IAAIyM,YAAAA,GAAezM,GAAG0D,QAAQ,EAAA,CAAA;QAC9B,IAAI2G,qBAAAA,CAAsB1I,IAAI,CAAC8K,YAAe,CAAA,EAAA;AAC1C,YAAA,MAAM,IAAInL,SAAAA,CAAU,+BAAkCtB,GAAAA,EAAAA,CAAGqE,IAAI,CAAA,CAAA;AACjE,SAAA;;QAGA,IAAGiG,gBAAAA,CAAiB3I,IAAI,CAAC8K,YAAe,CAAA,EAAA;YACpC,OAAOA,YAAAA,CAAAA;AACX,SAAA;;QAGA,IAAGlC,iBAAAA,CAAkB5I,IAAI,CAAC8K,YAAe,CAAA,EAAA;YACrC,OAAOA,YAAAA,CAAAA;AACX,SAAA;QAEA,IAAIC,YAAAA,GAAeD,YAAa5F,CAAAA,OAAO,CAAC,GAAA,CAAA,CAAA;AACxC,QAAA,IAAI8F,GAAMF,GAAAA,YAAAA,CAAapG,MAAM,CAAC,GAAGqG,YAC9BjK,CAAAA,CAAAA,IAAI,EACJD,CAAAA,KAAK,CAAC,GAAA,CAAA,CACNf,MAAM,CAAC,SAASmL,GAAG,EAAA;YAAI,OAAOA,GAAAA,CAAIhN,MAAM,GAAG,CAAA,CAAA;AAAE,SAAA,CAAA,CAAA;AAEhD,QAAA,IAAIiN,kBAAqBF,GAAAA,GAAAA,CAAIlL,MAAM,CAAC,SAASmL,GAAG,EAAA;AAC9C,YAAA,OAAOnC,gBAAiB5D,CAAAA,OAAO,CAAC+F,GAAAA,CAAAA,KAAS,CAAC,CAAA,CAAA;AAC5C,SAAA,CAAA,CAAA;;QAGA,IAAGC,kBAAAA,CAAmBjN,MAAM,GAAG,CAAG,EAAA;YAC9B,OAAQ+M,CAAAA,GAAAA,CAAI9F,OAAO,CAAC,OAAW,CAAA,GAAA,CAAC,CAAI,GAAA,QAAA,GAAW,EAAC,IAAK,UAChD8F,IAAAA,GAAI1G,CAAAA,IAAI,CAAC,EAAA,CAAA,CAAIY,OAAO,CAAC,GAAO,CAAA,GAAA,CAAC,CAAI,GAAA,GAAA,GAAM,EAAC,CAAA,GACzC4F,YAAapG,CAAAA,MAAM,CAACqG,YAAAA,CAAAA,CAAAA;AAC5B,SAAA;;QAGA,OAAOD,YAAAA,CAAAA;AACT,KAAA;;AAGA,IAAA,IAAIrE,OAAQ0D,CAAAA,cAAc,IAAI,OAAOlE,QAAQ,UAAY,EAAA;QACrDA,GAAMiC,GAAAA,SAAAA,CAAAA;AACV,KAAA;;;AAGA,IAAA,IAAIjC,QAAQiC,SAAW,EAAA;AACnB,QAAA,OAAOnC,MAAOE,CAAAA,GAAAA,CAAAA,CAAAA;AAClB,KAAA;IAEA,IAAIxH,GAAAA,CAAAA;;;AAIJ,IAAA,IAAIgI,QAAQ0E,MAAM,IAAI,CAAC1E,OAAAA,CAAQ6C,KAAK,EAAE;QAClC7K,GAAMC,GAAAA,IAAAA,CAAK0M,SAAS,CAACnF,GAAAA,CAAAA,CAAAA;KAClB,MAAA;QACHxH,GAAMC,GAAAA,IAAAA,CAAK0M,SAAS,CAACnF,GAAKQ,EAAAA,OAAAA,CAAQ0E,MAAM,GAAG,IAAA,GAAOlB,QAAUxD,EAAAA,OAAAA,CAAQ6C,KAAK,CAAA,CAAA;AAC7E,KAAA;;;IAIA,IAAI,OAAO7K,QAAQ,QAAU,EAAA;AACzB,QAAA,OAAOsH,MAAOtH,CAAAA,GAAAA,CAAAA,CAAAA;AAClB,KAAA;;;;IAKA,IAAIgI,OAAAA,CAAQ4E,MAAM,KAAK,IAAM,EAAA;QACzB5M,GAAMA,GAAAA,GAAAA,CAAIwE,OAAO,CAAC4F,mBAAqBG,EAAAA,iBAAAA,CAAAA,CAAAA;AAC3C,KAAA;AAEA,IAAA,IAAIO,UAAUtL,MAAM,KAAK,CAAKuL,IAAAA,OAAAA,CAAQvL,MAAM,KAAK,CAAA,IAAKwL,KAAMxL,CAAAA,MAAM,KAAK,CAAKyL,IAAAA,IAAAA,CAAKzL,MAAM,KAAK,CAAA,IAAK0L,KAAK1L,MAAM,KAAK,CAAK2L,IAAAA,MAAAA,CAAO3L,MAAM,KAAK,CAAA,IAAK4L,OAAO5L,MAAM,KAAK,KAAK6L,UAAW7L,CAAAA,MAAM,KAAK,CAAA,IAAK8L,QAAQ9L,MAAM,KAAK,KAAK+L,IAAK/L,CAAAA,MAAM,KAAK,CAAG,EAAA;QACtO,OAAOQ,GAAAA,CAAAA;AACX,KAAA;;;;IAKA,OAAOA,GAAAA,CAAIwE,OAAO,CAACwF,mBAAqB,EAAA,SAAU6C,KAAK,EAAEC,SAAS,EAAEjB,IAAI,EAAEkB,UAAU,EAAA;;;;AAIhF,QAAA,IAAID,SAAW,EAAA;YACX,OAAOD,KAAAA,CAAAA;AACX,SAAA;AAEA,QAAA,IAAIhB,SAAS,GAAK,EAAA;AACd,YAAA,OAAO,gBAAgBb,KAAK,CAAC+B,UAAW,CAAA,CAACC,WAAW,EAAK,GAAA,KAAA,CAAA;AAC7D,SAAA;AAEA,QAAA,IAAInB,SAAS,GAAK,EAAA;AACd,YAAA,OAAO,aAAgBjB,GAAAA,SAAAA,CAAUG,OAAO,CAACgC,WAAW,CAACE,MAAM,CAAI,GAAA,MAAA,GAASlC,OAAO,CAACgC,UAAW,CAAA,CAACG,KAAK,GAAG,KAAA,CAAA;AACxG,SAAA;AAEA,QAAA,IAAIrB,SAAS,GAAK,EAAA;YACd,OAAO,UAAA,GAAajB,SAAUjM,CAAAA,KAAAA,CAAMwO,IAAI,CAAClC,IAAI,CAAC8B,UAAW,CAAA,CAACK,OAAO,EAAA,CAAA,EAAKpF,OAAW,CAAA,GAAA,GAAA,CAAA;AACrF,SAAA;AAEA,QAAA,IAAI6D,SAAS,GAAK,EAAA;YACd,OAAO,UAAA,GAAajB,SAAUjM,CAAAA,KAAAA,CAAMwO,IAAI,CAACjC,IAAI,CAAC6B,UAAW,CAAA,CAACjN,MAAM,EAAA,CAAA,EAAKkI,OAAW,CAAA,GAAA,GAAA,CAAA;AACpF,SAAA;AAEA,QAAA,IAAI6D,SAAS,GAAK,EAAA;AACd,YAAA,OAAO,6BAAgCjB,GAAAA,SAAAA,CAAU1L,MAAOmO,CAAAA,MAAM,CAAC;AAAE7N,gBAAAA,MAAAA,EAAQ2L,MAAM,CAAC4B,UAAW,CAAA,CAACvN,MAAM;AAAC,aAAA,EAAG2L,MAAM,CAAC4B,UAAW,CAAA,CAAA,EAAG/E,OAAW,CAAA,GAAA,GAAA,CAAA;AAC1I,SAAA;AAEA,QAAA,IAAI6D,SAAS,GAAK,EAAA;YACd,OAAO,WAAA,CAAA;AACX,SAAA;AAEA,QAAA,IAAIA,SAAS,GAAK,EAAA;YACd,OAAOR,UAAU,CAAC0B,UAAW,CAAA,CAAA;AACjC,SAAA;AAEA,QAAA,IAAIlB,SAAS,GAAK,EAAA;AACd,YAAA,OAAO,WAAcP,GAAAA,OAAO,CAACyB,UAAAA,CAAW,GAAG,KAAA,CAAA;AAC/C,SAAA;AAEA,QAAA,IAAIlB,SAAS,GAAK,EAAA;YACd,OAAO,UAAA,GAAajB,UAAUW,IAAI,CAACwB,WAAW,CAACzJ,QAAQ,IAAI0E,OAAW,CAAA,GAAA,GAAA,CAAA;AAC1E,SAAA;QAEA,IAAIpI,EAAAA,GAAKkL,SAAS,CAACiC,UAAW,CAAA,CAAA;AAE9B,QAAA,OAAOX,aAAcxM,CAAAA,EAAAA,CAAAA,CAAAA;AACzB,KAAA,CAAA,CAAA;AACJ,CAAA;;ACpQO,MAAM0N,aAAgB,GAAA,IAAIvB,GAAK,EAAA,CAAA;AAE/B,MAAMwB,QAAAA,CAAAA;AACX,IAAA,OAAOC,IAAK3J,CAAAA,MAAM,EAAE4J,MAAM,EAAE;QAC1B,OAAO,IAAIF,SAAS1J,MAAQ4J,EAAAA,MAAAA,CAAAA,CAAAA;AAC9B,KAAA;IAgBAC,uBAA0B,GAAA;QACxB,IAAI,CAACC,KAAK,CAACC,KAAK,EAAA,CAAA;AAChBrP,QAAAA,IAAAA,CAAK,IAAI,CAAC2F,SAAS,CAAC2J,eAAe,IAAI,CAACC,WAAAA,GAAAA;YACtC,MAAMC,IAAAA,GAAOhO,WAAY+N,CAAAA,WAAAA,CAAYE,WAAW,CAAA,CAAA;AAChD,YAAA,MAAM5O,MAAMF,MAAOC,CAAAA,IAAI,CAAC4O,IAAAA,CAAK,CAAC,CAAE,CAAA,CAAA;YAChC,MAAMtC,KAAAA,GAAQsC,IAAI,CAAC3O,GAAI,CAAA,CAAA;AACvB,YAAA,IAAI,CAACuO,KAAK,CAACM,GAAG,CAAC7O,GAAK,EAAA;AAAEqM,gBAAAA,KAAAA;AAAOqC,gBAAAA,WAAAA;AAAY,aAAA,CAAA,CAAA;AAC3C,SAAA,CAAA,CAAA;AACF,KAAA;AACAI,IAAAA,GAAAA,CAAI9O,GAAG,EAAE;AACP,QAAA,OAAO,IAAI,CAACuO,KAAK,CAACO,GAAG,CAAC9O,GAAAA,CAAAA,CAAAA;AACxB,KAAA;IACA,MAAM+O,MAAAA,CAAO/O,GAAG,EAAE;AAChB,QAAA,IAAI,IAAI,CAAC8O,GAAG,CAAC9O,GAAM,CAAA,EAAA;YACjB,MAAM,EAAE0O,WAAW,EAAE,GAAG,IAAI,CAACH,KAAK,CAACS,GAAG,CAAChP,GAAAA,CAAAA,CAAAA;AACvC,YAAA,MAAM+B,SAAS,IAAM,IAAI,CAAC+C,SAAS,CAACmK,iBAAiB,CAACP,WAAAA,CAAAA,CAAAA,CAAAA;AACtD,YAAA,IAAI,CAACH,KAAK,CAACQ,MAAM,CAAC/O,GAAAA,CAAAA,CAAAA;YAClB,OAAO,IAAA,CAAA;AACT,SAAA;QACA,OAAO,KAAA,CAAA;AACT,KAAA;AACA,IAAA,MAAMwO,KAAQ,GAAA;QACZ,MAAMtO,SAAAA,CACJ,IAAI,CAACqO,KAAK,EACV,OAAO,GAAG,EAAEG,WAAW,EAAE,CAAC,GACxB,MAAM3M,SAAS,IAAM,IAAI,CAAC+C,SAAS,CAACmK,iBAAiB,CAACP,WAAAA,CAAAA,CAAAA,CAAAA,CAAAA;QAE1D,IAAI,CAACH,KAAK,CAACC,KAAK,EAAA,CAAA;AAClB,KAAA;AACAQ,IAAAA,GAAAA,CAAIhP,GAAG,EAAE;AACP,QAAA,IAAI,IAAI,CAAC8O,GAAG,CAAC9O,GAAM,CAAA,EAAA,OAAO,IAAI,CAACuO,KAAK,CAACS,GAAG,CAAChP,KAAKqM,KAAK,CAAA;AACrD,KAAA;AACA,IAAA,MAAMwC,GAAI7O,CAAAA,GAAG,EAAEqM,KAAK,EAAE;QACpB,MAAM,IAAI,CAAC0C,MAAM,CAAC/O,GAAAA,CAAAA,CAAAA;AAClB,QAAA,MAAM2O,OAAOnD,6BAAU,CAAA;AAAE,YAAA,CAACxL,MAAMqM,KAAAA;SAAS6C,CAAAA,CAAAA,UAAU,CAAC,GAAK,EAAA,GAAA,CAAA,CAAA;;AAEzD,QAAA,IAAIP,KAAKvO,MAAM,GAAG,KAChB,EAAA,MAAM,IAAI+O,UACR,CAAA,mEAAA,CAAA,CAAA;QAEJ,MAAMpN,QAAAA,CAAS,IAAM,IAAI,CAAC+C,SAAS,CAACsK,QAAQ,CAACT,IAAM,EAAA,CAAA,CAAA,CAAA,CAAA;AAEnD,QAAA,IAAI,CAACL,uBAAuB,EAAA,CAAA;AAC9B,KAAA;IACAe,MAAS,GAAA;AACP,QAAA,MAAMC,SAAS,EAAC,CAAA;QAChB,KAAK,MAAM,CAACtP,GAAAA,EAAKqM,KAAM,CAAA,IAAI,IAAI,CAAEiD,MAAM,CAACtP,GAAAA,CAAI,GAAGqM,KAAAA,CAAAA;QAC/C,OAAOiD,MAAAA,CAAAA;AACT,KAAA;AACA,IAAA,CAACtB,OAAU,GAAA;AACT,QAAA,KAAK,MAAM,CAAChO,GAAK,EAAA,EAAEqM,KAAK,EAAE,CAAC,IAAI,IAAI,CAACkC,KAAK,CAACP,OAAO,GAAI,MAAM;AAAChO,YAAAA,GAAAA;AAAKqM,YAAAA,KAAAA;AAAM,SAAA,CAAA;AACzE,KAAA;AACA,IAAA,CAACtM,IAAO,GAAA;QACN,KAAK,MAAMC,OAAO,IAAI,CAACuO,KAAK,CAACxO,IAAI,GAAI,MAAMC,GAAAA,CAAAA;AAC7C,KAAA;AACA,IAAA,CAACU,MAAS,GAAA;QACR,KAAK,MAAM,EAAE2L,KAAK,EAAE,IAAI,IAAI,CAACkC,KAAK,CAAC7N,MAAM,EAAA,CAAI,MAAM2L,KAAAA,CAAAA;AACrD,KAAA;IACA,CAAC3M,MAAAA,CAAOC,QAAQ,CAAC,GAAG;QAClB,OAAO,IAAI,CAACqO,OAAO,EAAA,CAAA;AACrB,KAAA;IA3EApI,WAAYnB,CAAAA,MAAM,EAAE4J,MAAM,CAAE;AAa5BE,QAAAA,IAAAA,CAAAA,KAAAA,GAAQ,IAAI5B,GAAAA,EAAAA,CAAAA;AAZV,QAAA,MAAM/H,EAAK+D,GAAAA,GAAAA,CAAI,CAAC,GAAG,EAAE0F,MAAO,CAAA,CAAC,EAAE5J,MAAAA,CAAOG,EAAE,CAAC,CAAC,CAAE6D,CAAAA,KAAK,CAAC,CAAG,EAAA,EAAA,CAAA,CAAA;QACrD,IAAI,CAAC7D,EAAE,GAAGA,EAAAA,CAAAA;QACV,IAAI,CAACE,SAAS,GAAGH,iBAAAA,CAAkBC,IAAI,CAAC,GAAG,EAAEyJ,MAAAA,CAAO,CAAC,CAAA,CAAA;;;AAKrD,QAAA,IAAI,CAACC,uBAAuB,EAAA,CAAA;QAE5BJ,aAAcW,CAAAA,GAAG,CAACjK,EAAAA,EAAI,IAAI,CAAA,CAAA;AAC5B,KAAA;AAiEF;;AC/EO,MAAM2K,MAAAA,CAAAA;AACX,IAAA,aAAaC,QAAQ,EACnBC,KAAAA,GAAQ,IAAI,EACZC,IAAI,EACJtQ,MAAM,EACNuQ,QAAAA,GAAW,YAAc,EACzBC,YAAY,UAAa,EAAC,EAC3B,EAAE;AACD,QAAA,IAAI,CAACF,IAAAA,IAAQ,CAACtQ,MAAAA,EAAQ,MAAM,IAAIyD,KAAAA,EAAAA,CAAAA;QAChC,MAAMgN,IAAAA,GAAO,MAAM9N,QAAS,CAAA,IAAA;AAC1B,YAAA,OAAO,IAAIwN,MAAO,CAAA;AAChBO,gBAAAA,MAAAA,EAAQ,IAAIC,eAAAA,EAAAA,CACTN,KAAK,CAACA,KACNC,CAAAA,CAAAA,IAAI,CAACA,IAAAA,CAAAA,CACLM,OAAO,CAAC,QACRC,CAAAA,CAAAA,OAAO,CAAC,IAAA,CAAA;gBACXC,OAASP,EAAAA,QAAAA;gBACTQ,eAAiBR,EAAAA,QAAAA;gBACjBS,eAAiBR,EAAAA,SAAAA;AACnB,aAAA,CAAA,CAAA;AACF,SAAA,CAAA,CAAA;QAEA,OAAO,MAAMC,IAAKQ,CAAAA,IAAI,CAACjR,MAAAA,CAAAA,CAAAA;AACzB,KAAA;IAiBA,MAAMiR,IAAAA,CAAKjR,MAAM,EAAE;QACjB,IAAIkR,QAAAA,CAAAA;AACJlR,QAAAA,MAAAA,CAAO6E,WAAW,CAAC,4BAAA,CAAA,CAAA;QACnB,GAAG;AACDqM,YAAAA,QAAAA,GAAW,MAAM,IAAI,CAACR,MAAM,CAACO,IAAI,CAACjR,MAAAA,CAAAA,CAAAA;AACpC,SAAA,OAASkR,QAASC,CAAAA,iBAAiB,KAAKC,qBAAAA,CAAsBC,QAAQ,CAAC;AAEvE,QAAA,IACEH,QAASI,CAAAA,QAAQ,IACjBJ,QAAAA,CAASC,iBAAiB,KAAKC,qBAAsBG,CAAAA,UAAU,EAE/D,OAAO,MAAM,IAAI,CAACT,OAAO,EAAA,CAAA;QAC3B,IAAII,QAAAA,YAAoBM,mBACtB,OAAO,MAAM,IAAI,CAACC,QAAQ,CAACP,QAAAA,CAASQ,UAAU,CAAA,CAAA;AAChD,QAAA,IAAIR,oBAAoBS,mBAAqB,EAAA;YAC3C,IAAIT,QAAAA,CAASU,SAAS,KAAK,CAAA,EAAG,OAAO,MAAM,IAAI,CAACb,eAAe,EAAA,CAAA;YAC/D,IAAIG,QAAAA,CAASU,SAAS,KAAK,CAAA,EAAG,OAAO,MAAM,IAAI,CAACZ,eAAe,EAAA,CAAA;SAC1D,MAAA,IAAIE,QAAoBW,YAAAA,kBAAAA,EAC7B,OAAO,MAAM,IAAI,CAACC,QAAQ,CAACZ,QAAAA,CAASU,SAAS,CAAA,CAAA;QAE/C,OAAOV,QAAAA,CAAAA;AACT,KAAA;IApCA1K,WAAY,CAAA,EACVkK,MAAM,EACNI,OAAU,GAAA,UAAA,EAAc,EACxBW,QAAAA,GAAW,OAAOM,CAAAA,GAAAA,EAAQ,EAC1BhB,kBAAkB,UAAa,EAAC,EAChCC,eAAAA,GAAkB,UAAa,EAAC,EAChCc,QAAAA,GAAW,OAAOC,CAAAA,GAAAA,EAAQ,EAC3B,CAAE;QACD,IAAI,CAACrB,MAAM,GAAGA,MAAAA,CAAAA;QACd,IAAI,CAACe,QAAQ,GAAGA,QAAAA,CAAAA;QAChB,IAAI,CAACV,eAAe,GAAGA,eAAAA,CAAAA;QACvB,IAAI,CAACC,eAAe,GAAGA,eAAAA,CAAAA;QACvB,IAAI,CAACc,QAAQ,GAAGA,QAAAA,CAAAA;QAChB,IAAI,CAAChB,OAAO,GAAGA,OAAAA,CAAAA;AACjB,KAAA;AAuBF;;ACxEO,SAASkB,MAAM5L,CAAC,EAAA;AACrB,IAAA,IAAIA,CAAK,IAAA,CAAA,EAAG,OAAOS,IAAAA,CAAKmL,KAAK,CAAC5L,CAAAA,CAAAA,CAAAA;IAC9B,OAAOA,CAAAA,GAAI,QAAQ,CAAIS,GAAAA,IAAAA,CAAKC,KAAK,CAACV,CAAAA,CAAAA,GAAKS,IAAKmL,CAAAA,KAAK,CAAC5L,CAAAA,CAAAA,CAAAA;AACpD,CAAA;AAUO,SAAS6L,MAAOnI,CAAAA,CAAC,EAAEzD,CAAC,EAAE6L,UAAU,QAAQ,EAAA;AAC7C,IAAA,OAAOrL,KAAKsL,GAAG,CAACrI,CAAIzD,GAAAA,CAAAA,CAAAA,IAAM6L,UAAUrL,IAAKuL,CAAAA,GAAG,CAAC,CAAA,EAAGvL,KAAKsL,GAAG,CAACrI,CAAIjD,CAAAA,EAAAA,IAAAA,CAAKsL,GAAG,CAAC9L,CAAAA,CAAAA,CAAAA,CAAAA;AACxE,CAAA;AAwBO,SAASgM,KAAM1D,CAAAA,IAAI,EAAE2D,EAAE,EAAEC,OAAO,CAAC,EAAA;AACtC,IAAA,MAAMrC,SAAS,EAAE,CAAA;IACjB,IAAK,IAAIrP,IAAI8N,IAAM9N,EAAAA,CAAAA,GAAIyR,IAAIzR,CAAK0R,IAAAA,IAAAA,CAAMrC,MAAOtJ,CAAAA,IAAI,CAAC/F,CAAAA,CAAAA,CAAAA;IAClD,OAAOqP,MAAAA,CAAAA;AACT;;AC3CA;;AAEC,IACM,MAAMsC,OAAAA,CAAAA;AASX;;;;MAKA,OAAOC,MAAOC,CAAAA,MAAM,EAAE;AACpB,QAAA,IAAIvS,MAAMC,OAAO,CAACsS,SAAS,OAAO,IAAI,IAAI,CAAIA,GAAAA,MAAAA,CAAAA,CAAAA;AAC9C,QAAA,IAAI,OAAOA,MAAW,KAAA,QAAA,EAAU,OAAO,IAAI,CAAChR,KAAK,CAACgR,MAAAA,CAAAA,CAAAA;AACpD,KAAA;AAEA;;;;MAKA,OAAOhR,KAAMiR,CAAAA,SAAS,EAAE;QACtB,OAAO,IAAI,CAACF,MAAM,CAACE,UAAU/O,KAAK,CAAC,GAAKZ,CAAAA,CAAAA,GAAG,CAACyD,MAAAA,CAAAA,CAAAA,CAAAA;AAC9C,KAAA;AAEA;;;AAGC,MACD0H,SAAY,GAAA;;AAEV,QAAA,OAAO,IAAI,CAAC7N,MAAOsS,CAAAA,WAAW,CAAC,CAAC,QAAA,CAAA,CAAA;AAClC,KAAA;AAEA;;;AAGC,MACDC,OAAU,GAAA;QACR,OAAO;eAAI,IAAI;AAAC,SAAA,CAAA;AAClB,KAAA;AAEA;;;;AAIC,MACD,CAACvS,MAAOsS,CAAAA,WAAW,CAAC,CAACE,IAAI,EAAE;QACzB,IAAIA,IAAAA,KAAS,UAAU,OAAO,IAAI,CAACC,IAAI,CAAC1L,IAAI,CAAC,GAAA,CAAA,CAAA;AAC7C,QAAA,OAAO,IAAI,CAAA;AACb,KAAA;AAEA;;;AAGC,MACD,CAAC/G,MAAAA,CAAOC,QAAQ,CAAC,GAAG;AAClB,QAAA,OAAO,IAAI,CAACwS,IAAI,CAACzS,MAAAA,CAAOC,QAAQ,CAAC,EAAA,CAAA;AACnC,KAAA;AAEA;;;AAGC,MACD,IAAIyS,UAAa,GAAA;AACf,QAAA,OAAO,IAAI,CAACD,IAAI,CAAC/R,MAAM,CAAA;AACzB,KAAA;AAEA;;;;MAKA4O,GAAAA,CAAIqD,KAAK,EAAE;AACT,QAAA,OAAO,IAAI,CAACF,IAAI,CAACE,KAAM,CAAA,CAAA;AACzB,KAAA;AAEA;;;;AAIC,MACDxD,GAAIwD,CAAAA,KAAK,EAAEhG,KAAK,EAAE;AAChB,QAAA,IAAI,CAAC8F,IAAI,CAACE,KAAAA,CAAM,GAAGhG,KAAAA,CAAAA;AACrB,KAAA;AAEA;;;;MAKAjK,GAAAA,CAAI/C,UAAU,EAAE;QACd,OAAOuS,OAAAA,CAAQC,MAAM,CAAC,IAAI,CAACM,IAAI,CAAC/P,GAAG,CAAC/C,UAAAA,CAAAA,CAAAA,CAAAA;AACtC,KAAA;AA/FA;;;MAIAuG,WAAAA,CAAY,GAAGuM,IAAI,CAAE;QACnB,IAAI,CAACA,IAAI,GAAGA,IAAAA,CAAAA;AACd,KAAA;AA0FF;;ACjGA;;AAEC,IACM,MAAMG,YAAAA,CAAAA;AACX;;;;MAKA,OAAOT,MAAOC,CAAAA,MAAM,EAAE;QACpB,OAAOF,OAAAA,CAAQC,MAAM,CAACC,MAAAA,CAAAA,CAAAA;AACxB,KAAA;AAEA;;;;MAKA,OAAOS,KAAMrJ,CAAAA,CAAC,EAAE;AACd,QAAA,OAAO,IAAI,CAAC2I,MAAM,CAAC3I,EAAE+I,OAAO,EAAA,CAAA,CAAA;AAC9B,KAAA;AAEA;;;;;AAKC,MACD,OAAOO,iBAAAA,CAAkBtJ,CAAC,EAAEzD,CAAC,EAAE;QAC7B,IAAIyD,CAAAA,CAAEkJ,UAAU,KAAK3M,CAAAA,CAAE2M,UAAU,EAC/B,MAAM,IAAIvP,KAAM,CAAA,wCAAA,CAAA,CAAA;AACpB,KAAA;AAEA;;;;;AAKC,MACD,OAAOK,GAAAA,CAAIgG,CAAC,EAAEzD,CAAC,EAAE;QACf6M,YAAaE,CAAAA,iBAAiB,CAACtJ,CAAGzD,EAAAA,CAAAA,CAAAA,CAAAA;QAClC,OAAOyD,CAAAA,CAAE9G,GAAG,CAAC,CAACgL,KAAKiF,KAAUjF,GAAAA,GAAAA,GAAM3H,CAAEuJ,CAAAA,GAAG,CAACqD,KAAAA,CAAAA,CAAAA,CAAAA;AAC3C,KAAA;AAEA;;;;;AAKC,MACD,OAAOI,QAAAA,CAASvJ,CAAC,EAAEzD,CAAC,EAAE;QACpB6M,YAAaE,CAAAA,iBAAiB,CAACtJ,CAAGzD,EAAAA,CAAAA,CAAAA,CAAAA;QAClC,OAAOyD,CAAAA,CAAE9G,GAAG,CAAC,CAACgL,KAAKiF,KAAUjF,GAAAA,GAAAA,GAAM3H,CAAEuJ,CAAAA,GAAG,CAACqD,KAAAA,CAAAA,CAAAA,CAAAA;AAC3C,KAAA;AAEA;;;;;AAKC,MACD,OAAOK,QAAAA,CAASxJ,CAAC,EAAEzD,CAAC,EAAE;QACpB6M,YAAaE,CAAAA,iBAAiB,CAACtJ,CAAGzD,EAAAA,CAAAA,CAAAA,CAAAA;QAClC,OAAOyD,CAAAA,CAAE9G,GAAG,CAAC,CAACgL,KAAKiF,KAAUjF,GAAAA,GAAAA,GAAM3H,CAAEuJ,CAAAA,GAAG,CAACqD,KAAAA,CAAAA,CAAAA,CAAAA;AAC3C,KAAA;AAEA;;;;;AAKC,MACD,OAAOM,MAAAA,CAAOzJ,CAAC,EAAEzD,CAAC,EAAE;QAClB6M,YAAaE,CAAAA,iBAAiB,CAACtJ,CAAGzD,EAAAA,CAAAA,CAAAA,CAAAA;QAClC,OAAOyD,CAAAA,CAAE9G,GAAG,CAAC,CAACgL,KAAKiF,KAAUjF,GAAAA,GAAAA,GAAM3H,CAAEuJ,CAAAA,GAAG,CAACqD,KAAAA,CAAAA,CAAAA,CAAAA;AAC3C,KAAA;AAEA;;;;;AAKC,MACD,OAAOO,KAAAA,CAAM1J,CAAC,EAAE1D,CAAC,EAAE;AACjB,QAAA,OAAO0D,CAAE9G,CAAAA,GAAG,CAAC,CAACgL,MAAQA,GAAM5H,GAAAA,CAAAA,CAAAA,CAAAA;AAC9B,KAAA;AAEA;;;;MAKA,OAAOqN,MAAO3J,CAAAA,CAAC,EAAE;AACf,QAAA,OAAOA,CAAE9G,CAAAA,GAAG,CAAC,CAACgL,MAAQ,CAACA,GAAAA,CAAAA,CAAAA;AACzB,KAAA;AAEA;;;;MAKA,OAAO0F,OAAQ5J,CAAAA,CAAC,EAAE;AAChB,QAAA,OAAOA,CAAE9G,CAAAA,GAAG,CAAC,CAACgL,MAAQ,CAAIA,GAAAA,GAAAA,CAAAA,CAAAA;AAC5B,KAAA;AAEA;;;;;;;AAOC,MACD,OAAO2F,QAAS7J,CAAAA,CAAC,EAAE8J,KAAK,EAAEC,KAAK,EAAE;AAC/B,QAAA,MAAM3D,MAAS,GAAA,IAAI,CAACiD,KAAK,CAACrJ,CAAAA,CAAAA,CAAAA;QAC1B,MAAMgK,EAAAA,GAAK5D,MAAON,CAAAA,GAAG,CAACgE,KAAAA,CAAAA,CAAAA;QACtB,MAAMG,EAAAA,GAAK7D,MAAON,CAAAA,GAAG,CAACiE,KAAAA,CAAAA,CAAAA;QACtB3D,MAAOT,CAAAA,GAAG,CAACmE,KAAOG,EAAAA,EAAAA,CAAAA,CAAAA;QAClB7D,MAAOT,CAAAA,GAAG,CAACoE,KAAOC,EAAAA,EAAAA,CAAAA,CAAAA;QAClB,OAAO5D,MAAAA,CAAAA;AACT,KAAA;AAEA;;;;;AAKC,MACD,OAAO8D,WAAAA,CAAYlK,CAAC,EAAEzD,CAAC,EAAE;QACvB6M,YAAaE,CAAAA,iBAAiB,CAACtJ,CAAGzD,EAAAA,CAAAA,CAAAA,CAAAA;QAClC,OAAOyD,CAAAA,CAAEiJ,IAAI,CAACkB,KAAK,CAAC,CAACjG,GAAAA,EAAKiF,KAAUjF,GAAAA,GAAAA,KAAQ3H,CAAEuJ,CAAAA,GAAG,CAACqD,KAAAA,CAAAA,CAAAA,CAAAA;AACpD,KAAA;AAEA;;;;;AAKC,MACD,OAAOhB,MAAAA,CAAOnI,CAAC,EAAEzD,CAAC,EAAE;QAClB6M,YAAaE,CAAAA,iBAAiB,CAACtJ,CAAGzD,EAAAA,CAAAA,CAAAA,CAAAA;AAClC,QAAA,OAAOyD,CAAEiJ,CAAAA,IAAI,CAACkB,KAAK,CAAC,CAACjG,GAAKiF,EAAAA,KAAAA,GAAUhB,MAAOjE,CAAAA,GAAAA,EAAK3H,CAAEuJ,CAAAA,GAAG,CAACqD,KAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AACxD,KAAA;AAEA;;;;AAIC,MACD,OAAOb,GAAAA,CAAI,GAAG8B,OAAO,EAAE;AACrB,QAAA,MAAMlT,MAASkT,GAAAA,OAAO,CAAC,CAAA,CAAE,CAAClB,UAAU,CAAA;AAEpC,QAAA,MAAMmB,OAAUD,GAAAA,OAAAA,CAAQE,MAAM,CAAC,CAACC,GAAK3B,EAAAA,MAAAA,GAAAA;AACnCA,YAAAA,MAAAA,CAAOK,IAAI,CAAC1S,OAAO,CAAC,CAAC2N,GAAKiF,EAAAA,KAAAA,GAAAA;gBACxB,IAAIjF,GAAAA,GAAMqG,GAAG,CAACpB,KAAAA,CAAM,EAAEoB,GAAG,CAACpB,MAAM,GAAGjF,GAAAA,CAAAA;AACrC,aAAA,CAAA,CAAA;YACA,OAAOqG,GAAAA,CAAAA;AACT,SAAA,EAAG,IAAIlU,KAAMa,CAAAA,MAAAA,CAAAA,CAAQsT,IAAI,CAAC7N,OAAO8N,iBAAiB,CAAA,CAAA,CAAA;QAElD,OAAO,IAAI,CAAC9B,MAAM,CAAC0B,OAAAA,CAAAA,CAAAA;AACrB,KAAA;AAEA;;;;AAIC,MACD,OAAOK,GAAAA,CAAI,GAAGN,OAAO,EAAE;AACrB,QAAA,MAAMlT,MAASkT,GAAAA,OAAO,CAAC,CAAA,CAAE,CAAClB,UAAU,CAAA;AAEpC,QAAA,MAAMyB,OAAUP,GAAAA,OAAAA,CAAQE,MAAM,CAAC,CAACC,GAAK3B,EAAAA,MAAAA,GAAAA;AACnCA,YAAAA,MAAAA,CAAOK,IAAI,CAAC1S,OAAO,CAAC,CAAC2N,GAAKiF,EAAAA,KAAAA,GAAAA;gBACxB,IAAIjF,GAAAA,GAAMqG,GAAG,CAACpB,KAAAA,CAAM,EAAEoB,GAAG,CAACpB,MAAM,GAAGjF,GAAAA,CAAAA;AACrC,aAAA,CAAA,CAAA;YACA,OAAOqG,GAAAA,CAAAA;AACT,SAAA,EAAG,IAAIlU,KAAMa,CAAAA,MAAAA,CAAAA,CAAQsT,IAAI,CAAC7N,OAAOiO,iBAAiB,CAAA,CAAA,CAAA;QAElD,OAAO,IAAI,CAACjC,MAAM,CAACgC,OAAAA,CAAAA,CAAAA;AACrB,KAAA;AAEA;;;;MAKA,OAAO3N,KAAMgD,CAAAA,CAAC,EAAE;AACd,QAAA,OAAOA,EAAE9G,GAAG,CAAC,CAACgL,GAAQnH,GAAAA,IAAAA,CAAKC,KAAK,CAACkH,GAAAA,CAAAA,CAAAA,CAAAA;AACnC,KAAA;AAEA;;;;MAKA,OAAO2G,IAAK7K,CAAAA,CAAC,EAAE;AACb,QAAA,OAAOA,EAAE9G,GAAG,CAAC,CAACgL,GAAQnH,GAAAA,IAAAA,CAAK8N,IAAI,CAAC3G,GAAAA,CAAAA,CAAAA,CAAAA;AAClC,KAAA;AAEA;;;;MAKA,OAAOgE,KAAMlI,CAAAA,CAAC,EAAE;AACd,QAAA,OAAOA,CAAE9G,CAAAA,GAAG,CAAC,CAACgL,MAAQgE,KAAMhE,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA;AAC9B,KAAA;AAEA;;;;MAKA,OAAOmE,GAAIrI,CAAAA,CAAC,EAAE;AACZ,QAAA,OAAOA,EAAE9G,GAAG,CAAC,CAACgL,GAAQnH,GAAAA,IAAAA,CAAKsL,GAAG,CAACnE,GAAAA,CAAAA,CAAAA,CAAAA;AACjC,KAAA;AAEA;;;;AAIC,MACD,OAAO4G,YAAAA,CAAa,GAAGV,OAAO,EAAE;AAC9B,QAAA,OAAOA,OAAQE,CAAAA,MAAM,CAAC,CAACS,MAAMC,IAC3B5B,GAAAA,YAAAA,CAAa6B,SAAS,CAACD,IAAQ5B,CAAAA,GAAAA,YAAAA,CAAa6B,SAAS,CAACF,QAAQC,IAAOD,GAAAA,IAAAA,CAAAA,CAAAA;AAEzE,KAAA;AAEA;;;;AAIC,MACD,OAAOG,YAAAA,CAAa,GAAGd,OAAO,EAAE;AAC9B,QAAA,OAAOA,OAAQE,CAAAA,MAAM,CAAC,CAACS,MAAMC,IAC3B5B,GAAAA,YAAAA,CAAa6B,SAAS,CAACD,IAAQ5B,CAAAA,GAAAA,YAAAA,CAAa6B,SAAS,CAACF,QAAQC,IAAOD,GAAAA,IAAAA,CAAAA,CAAAA;AAEzE,KAAA;AAEA;;;;MAKA,OAAOE,SAAUjL,CAAAA,CAAC,EAAE;AAClB,QAAA,OAAOjD,IAAKoO,CAAAA,IAAI,CAAC/B,YAAAA,CAAagC,gBAAgB,CAACpL,CAAAA,CAAAA,CAAAA,CAAAA;AACjD,KAAA;AAEA;;;;MAKA,OAAOoL,gBAAiBpL,CAAAA,CAAC,EAAE;QACzB,OAAOA,CAAAA,CAAEiJ,IAAI,CAACqB,MAAM,CAAC,CAACe,GAAKnH,EAAAA,GAAAA,GAAQmH,GAAMnH,GAAAA,GAAAA,IAAO,CAAG,EAAA,CAAA,CAAA,CAAA;AACrD,KAAA;AAEA;;;;;AAKC,MACD,OAAOoH,QAAAA,CAAStL,CAAC,EAAEzD,CAAC,EAAE;AACpB,QAAA,OAAOQ,KAAKoO,IAAI,CAAC/B,YAAamC,CAAAA,eAAe,CAACvL,CAAGzD,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AACnD,KAAA;AAEA;;;;;AAKC,MACD,OAAOgP,eAAAA,CAAgBvL,CAAC,EAAEzD,CAAC,EAAE;QAC3B6M,YAAaE,CAAAA,iBAAiB,CAACtJ,CAAGzD,EAAAA,CAAAA,CAAAA,CAAAA;AAClC,QAAA,OAAOyD,EAAEiJ,IAAI,CAACqB,MAAM,CAAC,CAACe,KAAKnH,GAAKiF,EAAAA,KAAAA,GAAAA;AAC9B,YAAA,MAAMqC,IAAOtH,GAAAA,GAAAA,GAAM3H,CAAEuJ,CAAAA,GAAG,CAACqD,KAAAA,CAAAA,CAAAA;AACzB,YAAA,OAAOkC,MAAMG,IAAQ,IAAA,CAAA,CAAA;SACpB,EAAA,CAAA,CAAA,CAAA;AACL,KAAA;AAEA;;;;;AAKC,MACD,OAAOC,GAAAA,CAAIzL,CAAC,EAAEzD,CAAC,EAAE;QACf6M,YAAaE,CAAAA,iBAAiB,CAACtJ,CAAGzD,EAAAA,CAAAA,CAAAA,CAAAA;AAClC,QAAA,OAAOyD,CAAEiJ,CAAAA,IAAI,CAACqB,MAAM,CAAC,CAACe,GAAAA,EAAKnH,GAAKiF,EAAAA,KAAAA,GAAUkC,GAAMnH,GAAAA,GAAAA,GAAM3H,CAAEuJ,CAAAA,GAAG,CAACqD,KAAQ,CAAA,EAAA,CAAA,CAAA,CAAA;AACtE,KAAA;AAEA;;;;MAKA,OAAOuC,SAAU1L,CAAAA,CAAC,EAAE;AAClB,QAAA,MAAMiL,SAAY,GAAA,IAAI,CAACA,SAAS,CAACjL,CAAAA,CAAAA,CAAAA;AACjC,QAAA,IAAIiL,WAAW,OAAO,IAAI,CAACvB,KAAK,CAAC1J,GAAG,CAAIiL,GAAAA,SAAAA,CAAAA,CAAAA;QACxC,OAAO,IAAI,CAACtC,MAAM,CAAC,IAAItS,MAAM2J,CAAEkJ,CAAAA,UAAU,CAAEsB,CAAAA,IAAI,CAAC,CAAA,CAAA,CAAA,CAAA;AAClD,KAAA;AAEA;;;;;AAKC,MACD,OAAOmB,KAAAA,CAAM3L,CAAC,EAAEzD,CAAC,EAAE;AACjB,QAAA,MAAMqP,QAAW,GAAA,IAAI,CAACH,GAAG,CAAC,IAAI,CAACC,SAAS,CAAC1L,CAAAA,CAAAA,EAAI,IAAI,CAAC0L,SAAS,CAACnP,CAAAA,CAAAA,CAAAA,CAAAA;QAC5D,OAAOQ,IAAAA,CAAK8O,IAAI,CAACD,QAAAA,CAAAA,CAAAA;AACnB,KAAA;AAEA;;;;;AAKC,MACD,OAAO3O,MAAOiM,CAAAA,UAAU,EAAEQ,KAAAA,GAAQ,CAAC,EAAE;QACnC,MAAMT,IAAAA,GAAO5S,KAAMwO,CAAAA,IAAI,CAAC;YAAE3N,MAAQgS,EAAAA,UAAAA;AAAW,SAAA,EAAG,IAAMnM,IAAAA,CAAKE,MAAM,EAAA,GAAK,CAAI,GAAA,CAAA,CAAA,CAAA;QAC1E,OAAO,IAAI,CAACyM,KAAK,CAAC,IAAI,CAACf,MAAM,CAACM,IAAOS,CAAAA,EAAAA,KAAAA,CAAAA,CAAAA;AACvC,KAAA;AAEA;;;;;;AAMC,MACD,OAAOoC,IAAK9L,CAAAA,CAAC,EAAEzD,CAAC,EAAEyE,CAAC,EAAE;QACnBoI,YAAaE,CAAAA,iBAAiB,CAACtJ,CAAGzD,EAAAA,CAAAA,CAAAA,CAAAA;AAClC,QAAA,OAAOyD,CAAE9G,CAAAA,GAAG,CAAC,CAACgL,KAAKiF,KAAUjF,GAAAA,GAAAA,IAAO,CAAA,GAAIlD,CAAAA,CAAAA,GAAKzE,CAAEuJ,CAAAA,GAAG,CAACqD,KAASnI,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA;AAC9D,KAAA;AAEA;;;;;;AAMC,MACD,OAAO+K,KAAM/L,CAAAA,CAAC,EAAEzD,CAAC,EAAEyE,CAAC,EAAE;AACpB,QAAA,IAAIA,KAAK,CAAG,EAAA,OAAO,IAAI,CAACqI,KAAK,CAACrJ,CAAAA,CAAAA,CAAAA;AAC9B,QAAA,IAAIgB,KAAK,CAAG,EAAA,OAAO,IAAI,CAACqI,KAAK,CAAC9M,CAAAA,CAAAA,CAAAA;AAE9B,QAAA,MAAMyP,KAAQ,GAAA,IAAI,CAACL,KAAK,CAAC3L,CAAGzD,EAAAA,CAAAA,CAAAA,CAAAA;QAC5B,MAAM0P,QAAAA,GAAWlP,IAAKmP,CAAAA,GAAG,CAACF,KAAAA,CAAAA,CAAAA;QAE1B,IAAIC,QAAAA,IAAYtP,MAAOwP,CAAAA,OAAO,EAAE,OAAO,IAAI,CAACL,IAAI,CAAC9L,CAAAA,EAAGzD,CAAGyE,EAAAA,CAAAA,CAAAA,CAAAA;QAEvD,MAAMoL,MAAAA,GAASrP,KAAKmP,GAAG,CAACF,SAAS,CAAA,GAAIhL,CAAAA,CAAMiL,CAAAA,GAAAA,QAAAA,CAAAA;AAC3C,QAAA,MAAMI,MAAStP,GAAAA,IAAAA,CAAKmP,GAAG,CAACF,QAAQhL,CAAKiL,CAAAA,GAAAA,QAAAA,CAAAA;QACrC,OAAOjM,CAAAA,CAAE9G,GAAG,CAAC,CAACgL,GAAAA,EAAKiF,KAAUjF,GAAAA,GAAAA,GAAMkI,MAAS7P,GAAAA,CAAAA,CAAEuJ,GAAG,CAACqD,KAASkD,CAAAA,GAAAA,MAAAA,CAAAA,CAAAA;AAC7D,KAAA;AAEA;;;;;AAKC,MACD,OAAOC,MAAAA,CAAOC,MAAM,EAAEvL,CAAC,EAAE;QACvB,MAAM1E,CAAAA,GAAIiQ,MAAOrV,CAAAA,MAAM,GAAG,CAAA,CAAA;AAE1B,QAAA,IAAI,CAACoF,CAAAA,EAAG,OAAOiQ,MAAM,CAAC,CAAE,CAAA,CAAA;AAExB,QAAA,MAAMC,YAAY,EAAE,CAAA;AACpB,QAAA,IAAK,IAAIzV,CAAAA,GAAI,CAAGA,EAAAA,CAAAA,GAAIuF,GAAGvF,CAAK,EAAA,CAAA;AAC1ByV,YAAAA,SAAAA,CAAU1P,IAAI,CAAC,IAAI,CAACgP,IAAI,CAACS,MAAM,CAACxV,CAAAA,CAAE,EAAEwV,MAAM,CAACxV,CAAAA,GAAI,EAAE,EAAEiK,CAAAA,CAAAA,CAAAA,CAAAA;AACrD,SAAA;AAEA,QAAA,OAAO,IAAI,CAACsL,MAAM,CAACE,SAAWxL,EAAAA,CAAAA,CAAAA,CAAAA;AAChC,KAAA;AACF;;ACvXA;;IAGO,MAAMyL,YAAqBrD,SAAAA,YAAAA,CAAAA;AAChC;;;MAIA,OAAOT,MAAOC,CAAAA,MAAM,EAAE;QACpB,OAAO8D,OAAAA,CAAQ/D,MAAM,CAACC,MAAAA,CAAAA,CAAAA;AACxB,KAAA;AAEA;;;;;AAKC,MACD,OAAO+D,KAAAA,CAAM3M,CAAC,EAAEzD,CAAC,EAAE;QACjB,OAAO,IAAI,CAACoM,MAAM,CAAC;YACjB3I,CAAE4M,CAAAA,CAAC,GAAGrQ,CAAEsQ,CAAAA,CAAC,GAAG7M,CAAE6M,CAAAA,CAAC,GAAGtQ,CAAAA,CAAEqQ,CAAC;YACrB5M,CAAE6M,CAAAA,CAAC,GAAGtQ,CAAEuE,CAAAA,CAAC,GAAGd,CAAEc,CAAAA,CAAC,GAAGvE,CAAAA,CAAEsQ,CAAC;YACrB7M,CAAEc,CAAAA,CAAC,GAAGvE,CAAEqQ,CAAAA,CAAC,GAAG5M,CAAE4M,CAAAA,CAAC,GAAGrQ,CAAAA,CAAEuE,CAAC;AACtB,SAAA,CAAA,CAAA;AACH,KAAA;AACF;;ACzBA;;;IAIO,MAAM4L,OAAgBhE,SAAAA,OAAAA,CAAAA;AAW3B,IAAA,IAAI5H,CAAI,GAAA;QACN,OAAO,IAAI,CAACgF,GAAG,CAAC,CAAA,CAAA,CAAA;AAClB,KAAA;IACA,IAAIhF,CAAAA,CAAEqC,KAAK,EAAE;QACX,IAAI,CAACwC,GAAG,CAAC,CAAGxC,EAAAA,KAAAA,CAAAA,CAAAA;AACd,KAAA;AACA,IAAA,IAAIyJ,CAAI,GAAA;QACN,OAAO,IAAI,CAAC9G,GAAG,CAAC,CAAA,CAAA,CAAA;AAClB,KAAA;IACA,IAAI8G,CAAAA,CAAEzJ,KAAK,EAAE;QACX,IAAI,CAACwC,GAAG,CAAC,CAAGxC,EAAAA,KAAAA,CAAAA,CAAAA;AACd,KAAA;AACA,IAAA,IAAI0J,CAAI,GAAA;QACN,OAAO,IAAI,CAAC/G,GAAG,CAAC,CAAA,CAAA,CAAA;AAClB,KAAA;IACA,IAAI+G,CAAAA,CAAE1J,KAAK,EAAE;QACX,IAAI,CAACwC,GAAG,CAAC,CAAGxC,EAAAA,KAAAA,CAAAA,CAAAA;AACd,KAAA;AAEA;;;MAIA,OAAOwF,MAAOC,CAAAA,MAAM,EAAE;AACpB,QAAA,IAAIvS,MAAMC,OAAO,CAACsS,SAAS,OAAO,IAAI,IAAI,CAAIA,GAAAA,MAAAA,CAAAA,CAAAA;;AAE9C,QAAA,IAAI,OAAOA,MAAW,KAAA,QAAA,EAAU,OAAO,IAAI,CAAChR,KAAK,CAACgR,MAAAA,CAAAA,CAAAA;AAClD,QAAA,IAAI,OAAOA,MAAAA,KAAW,QACpB,EAAA,OAAO,IAAI,IAAI,CAACA,MAAO9H,CAAAA,CAAC,EAAE8H,MAAAA,CAAOgE,CAAC,EAAEhE,OAAOiE,CAAC,CAAA,CAAA;AAChD,KAAA;AAEA,IAAA,IAAI5B,SAAY,GAAA;QACd,OAAOwB,YAAAA,CAAaxB,SAAS,CAAC,IAAI,CAAA,CAAA;AACpC,KAAA;AACA,IAAA,IAAIG,gBAAmB,GAAA;QACrB,OAAOqB,YAAAA,CAAarB,gBAAgB,CAAC,IAAI,CAAA,CAAA;AAC3C,KAAA;AAEA,IAAA,IAAI0B,UAAa,GAAA;QACf,OAAOL,YAAAA,CAAaf,SAAS,CAAC,IAAI,CAAA,CAAA;AACpC,KAAA;AACA,IAAA,IAAIqB,OAAU,GAAA;QACZ,OAAON,YAAAA,CAAazP,KAAK,CAAC,IAAI,CAAA,CAAA;AAChC,KAAA;AACA,IAAA,IAAIgQ,MAAS,GAAA;QACX,OAAOP,YAAAA,CAAa5B,IAAI,CAAC,IAAI,CAAA,CAAA;AAC/B,KAAA;AACA,IAAA,IAAIoC,OAAU,GAAA;QACZ,OAAOR,YAAAA,CAAavE,KAAK,CAAC,IAAI,CAAA,CAAA;AAChC,KAAA;AACA,IAAA,IAAIgF,SAAY,GAAA;QACd,OAAOT,YAAAA,CAAapE,GAAG,CAAC,IAAI,CAAA,CAAA;AAC9B,KAAA;AAEA;;;;MAKAnP,GAAAA,CAAI/C,UAAU,EAAE;QACd,OAAOuW,OAAAA,CAAQ/D,MAAM,CAAC,IAAI,CAACM,IAAI,CAAC/P,GAAG,CAAC/C,UAAAA,CAAAA,CAAAA,CAAAA;AACtC,KAAA;AAEAgX,IAAAA,IAAAA,CAAKC,CAAC,EAAE;AACN,QAAA,IAAI,CAACtM,CAAC,GAAGsM,CAAAA,CAAEtM,CAAC,CAAA;AACZ,QAAA,IAAI,CAAC8L,CAAC,GAAGQ,CAAAA,CAAER,CAAC,CAAA;AACZ,QAAA,IAAI,CAACC,CAAC,GAAGO,CAAAA,CAAEP,CAAC,CAAA;AACZ,QAAA,OAAO,IAAI,CAAA;AACb,KAAA;IACAxD,KAAQ,GAAA;AACN,QAAA,OAAO,IAAIqD,OAAAA,CAAQ,IAAI,CAAC5L,CAAC,EAAE,IAAI,CAAC8L,CAAC,EAAE,IAAI,CAACC,CAAC,CAAA,CAAA;AAC3C,KAAA;AACA1E,IAAAA,MAAAA,CAAOiF,CAAC,EAAE;AACR,QAAA,OAAOX,YAAatE,CAAAA,MAAM,CAAC,IAAI,EAAEiF,CAAAA,CAAAA,CAAAA;AACnC,KAAA;AAEAC,IAAAA,UAAAA,CAAWD,CAAC,EAAE;AACZ,QAAA,OAAOX,YAAanB,CAAAA,QAAQ,CAAC,IAAI,EAAE8B,CAAAA,CAAAA,CAAAA;AACrC,KAAA;AACAE,IAAAA,iBAAAA,CAAkBF,CAAC,EAAE;AACnB,QAAA,OAAOX,YAAalB,CAAAA,eAAe,CAAC,IAAI,EAAE6B,CAAAA,CAAAA,CAAAA;AAC5C,KAAA;AAEApT,IAAAA,GAAAA,CAAIoT,CAAC,EAAE;QACL,OAAO,IAAI,CAACD,IAAI,CAACV,aAAazS,GAAG,CAAC,IAAI,EAAEoT,CAAAA,CAAAA,CAAAA,CAAAA;AAC1C,KAAA;AACA7D,IAAAA,QAAAA,CAAS6D,CAAC,EAAE;QACV,OAAO,IAAI,CAACD,IAAI,CAACV,aAAalD,QAAQ,CAAC,IAAI,EAAE6D,CAAAA,CAAAA,CAAAA,CAAAA;AAC/C,KAAA;AACA5D,IAAAA,QAAAA,CAAS4D,CAAC,EAAE;QACV,OAAO,IAAI,CAACD,IAAI,CAACV,aAAajD,QAAQ,CAAC,IAAI,EAAE4D,CAAAA,CAAAA,CAAAA,CAAAA;AAC/C,KAAA;AACA3D,IAAAA,MAAAA,CAAO2D,CAAC,EAAE;QACR,OAAO,IAAI,CAACD,IAAI,CAACV,aAAahD,MAAM,CAAC,IAAI,EAAE2D,CAAAA,CAAAA,CAAAA,CAAAA;AAC7C,KAAA;AACA1D,IAAAA,KAAAA,CAAMpN,CAAC,EAAE;QACP,OAAO,IAAI,CAAC6Q,IAAI,CAACV,aAAa/C,KAAK,CAAC,IAAI,EAAEpN,CAAAA,CAAAA,CAAAA,CAAAA;AAC5C,KAAA;IACAqN,MAAS,GAAA;AACP,QAAA,OAAO,IAAI,CAACwD,IAAI,CAACV,YAAa9C,CAAAA,MAAM,CAAC,IAAI,CAAA,CAAA,CAAA;AAC3C,KAAA;IACAC,OAAU,GAAA;AACR,QAAA,OAAO,IAAI,CAACuD,IAAI,CAACV,YAAa7C,CAAAA,OAAO,CAAC,IAAI,CAAA,CAAA,CAAA;AAC5C,KAAA;IAEA5M,KAAQ,GAAA;AACN,QAAA,OAAO,IAAI,CAACmQ,IAAI,CAAC,IAAI,CAACJ,OAAO,CAAA,CAAA;AAC/B,KAAA;IACAlC,IAAO,GAAA;AACL,QAAA,OAAO,IAAI,CAACsC,IAAI,CAAC,IAAI,CAACH,MAAM,CAAA,CAAA;AAC9B,KAAA;IACA9E,KAAQ,GAAA;AACN,QAAA,OAAO,IAAI,CAACiF,IAAI,CAAC,IAAI,CAACF,OAAO,CAAA,CAAA;AAC/B,KAAA;IACA5E,GAAM,GAAA;AACJ,QAAA,OAAO,IAAI,CAAC8E,IAAI,CAAC,IAAI,CAACD,SAAS,CAAA,CAAA;AACjC,KAAA;IAEAxB,SAAY,GAAA;AACV,QAAA,OAAO,IAAI,CAACyB,IAAI,CAAC,IAAI,CAACL,UAAU,CAAA,CAAA;AAClC,KAAA;AAlIA;;;;;MAMApQ,WAAAA,CAAYoE,IAAI,CAAC,EAAE8L,IAAI,CAAC,EAAEC,CAAI,GAAA,CAAC,CAAE;QAC/B,KAAK,CAAC/L,GAAG8L,CAAGC,EAAAA,CAAAA,CAAAA,CAAAA;AACd,KAAA;AA2HF;;ACzIO,MAAMU,QAAiBb,SAAAA,OAAAA,CAAAA;AAC5B,IAAA,IAAIc,eAAkB,GAAA;QACpB,OAAOD,QAAAA,CAAS5E,MAAM;QAEpB8D,YAAazS,CAAAA,GAAG,CAAC,IAAI,CAAC+S,OAAO,EAAE,IAAIL,OAAQ,CAAA,GAAA,EAAK,GAAK,EAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAEzD,KAAA;IAEArD,KAAQ,GAAA;AACN,QAAA,OAAO,IAAIkE,QAAAA,CAAS,IAAI,CAACzM,CAAC,EAAE,IAAI,CAAC8L,CAAC,EAAE,IAAI,CAACC,CAAC,CAAA,CAAA;AAC5C,KAAA;AACA1E,IAAAA,MAAAA,CAAOiF,CAAC,EAAE;AACR,QAAA,OAAOX,YAAavC,CAAAA,WAAW,CAAC,IAAI,EAAEkD,CAAAA,CAAAA,CAAAA;AACxC,KAAA;IACAK,QAASL,CAAAA,CAAC,EAAE9B,QAAQ,EAAE;AACpB,QAAA,OAAO,IAAI,CAAC+B,UAAU,CAACD,CAAM9B,CAAAA,IAAAA,QAAAA,CAAAA;AAC/B,KAAA;AAEAoC,IAAAA,MAAAA,CAAON,CAAC,EAAE;QACR,OAAO,IAAI,CAACpT,GAAG,CAACoT,CAAAA,CAAAA,CAAAA;AAClB,KAAA;AACF;;AClBO,MAAMO,YAAAA,CAAAA;IAOXC,OAAU,GAAA;QACR,OAAO;AACLC,YAAAA,QAAAA,EAAU,CAAC,EAAE,IAAI,CAACA,QAAQ,CAAC,CAAC;AAC5BC,YAAAA,SAAAA,EAAW,IAAI,CAACA,SAAS,CAACpS,EAAE;AAC9B,SAAA,CAAA;AACF,KAAA;AAEA,IAAA,CAAClF,MAAOsS,CAAAA,WAAW,CAAC,CAACE,IAAI,EAAE;AACzB,QAAA,IAAIA,SAAS,QACX,EAAA,OAAO,CAAC,EAAEhN,wBAAAA,CAAyB,IAAI,CAAC8R,SAAS,CAACpS,EAAE,EAAE,EAAE,EAAE,IAAI,CAACmS,QAAQ,CAAC,CAAC,CAAA;AAC3E,QAAA,OAAO,IAAI,CAAA;AACb,KAAA;AAjBAnR,IAAAA,WAAAA,CAAY,EAAEmR,QAAQ,EAAEC,SAAS,EAAE,CAAE;QACnC,IAAI,CAACD,QAAQ,GACXA,QAAAA,YAAoBN,WAAWM,QAAWN,GAAAA,QAAAA,CAAS5E,MAAM,CAACkF,QAAAA,CAAAA,CAAAA;QAC5D,IAAI,CAACC,SAAS,GACZA,SAAAA,YAAqBrV,YAAYqV,SAAY7V,GAAAA,KAAAA,CAAMC,YAAY,CAAC4V,SAAAA,CAAAA,CAAAA;AACpE,KAAA;AAaF;;AClBO,MAAMC,oBAAuB,GAAA,IAAItK,GAAK,EAAA,CAAA;AAEtC,MAAMuK,KAAAA,CAAAA;IAMX,OAAOC,IAAAA,CAAK1S,MAAM,EAAE;QAClB,MAAM2S,EAAAA,GAAK,IAAIF,KAAMzS,CAAAA,MAAAA,CAAAA,CAAAA;QACrBwS,oBAAqBpI,CAAAA,GAAG,CAACpK,MAAQ2S,EAAAA,EAAAA,CAAAA,CAAAA;QACjC,OAAOA,EAAAA,CAAAA;AACT,KAAA;IAEA,MAAMvI,GAAAA,CAAI,EAAEhK,IAAI,EAAEwS,UAAU,EAAEC,KAAK,EAAE,EAAE;AACrC,QAAA,MAAMC,IAAO,GAAA,IAAIV,YAAa,CAAA,IAAI,CAACpS,MAAM,CAAA,CAAA;AACzC,QAAA,MAAM+S,SAAY,GAAA,UAAA;AAChB,YAAA,MAAM,IAAI,CAACJ,EAAE,CAACvI,GAAG,CAAChK,IAAM,EAAA;AACtB0S,gBAAAA,IAAAA,EAAMA,KAAKT,OAAO,EAAA;AAClBO,gBAAAA,UAAAA;AACF,aAAA,CAAA,CAAA;YACA,OAAOE,IAAAA,CAAAA;AACT,SAAA,CAAA;QACA,IAAI,CAACD,SAAS,IAAI,CAACF,EAAE,CAACtI,GAAG,CAACjK,IAAO,CAAA,EAAA;YAC/B,OAAO,MAAM0K,MAAOC,CAAAA,OAAO,CAAC;AAC1BE,gBAAAA,IAAAA,EAAM,CAAC,GAAG,EAAE7K,IAAAA,CAAK,WAAW,CAAC;gBAC7BzF,MAAQ,EAAA,IAAI,CAACqF,MAAM;;AAEnBmL,gBAAAA,SAAAA,EAAW,UAAY,MAAM4H,SAAAA,EAAAA;AAC/B,aAAA,CAAA,CAAA;AACF,SAAA;AACA,QAAA,OAAO,MAAMA,SAAAA,EAAAA,CAAAA;AACf,KAAA;IACA,MAAMxI,GAAAA,CAAInK,IAAI,EAAE;AACd,QAAA,IAAI,CAAC,IAAI,CAACuS,EAAE,CAACtI,GAAG,CAACjK,IAAO,CAAA,EAAA,OAAA;AACxB,QAAA,MAAM,EAAE0S,IAAAA,EAAM5I,IAAI,EAAE0I,UAAU,EAAE,GAAG,IAAI,CAACD,EAAE,CAACpI,GAAG,CAACnK,IAAAA,CAAAA,CAAAA;AAC/C,QAAA,IAAIwS,YAAY,MAAM,IAAI,CAACD,EAAE,CAACrI,MAAM,CAAClK,IAAAA,CAAAA,CAAAA;QACrC,IAAI8J,IAAAA,EAAM,OAAO,IAAIkI,YAAalI,CAAAA,IAAAA,CAAAA,CAAAA;AACpC,KAAA;IACA,MAAM8I,MAAAA,CAAO5S,IAAI,EAAE;QACjB,IAAI,CAAC,IAAI,CAACuS,EAAE,CAACtI,GAAG,CAACjK,OAAO,OAAO,KAAA,CAAA;QAC/B,OAAO,MAAM0K,MAAOC,CAAAA,OAAO,CAAC;AAC1BE,YAAAA,IAAAA,EAAM,CAAC,KAAK,EAAE7K,IAAAA,CAAK,CAAC,CAAC;YACrBzF,MAAQ,EAAA,IAAI,CAACqF,MAAM;;AAEnBmL,YAAAA,SAAAA,EAAW,UAAY,MAAM,IAAI,CAACwH,EAAE,CAACrI,MAAM,CAAClK,IAAAA,CAAAA;AAC9C,SAAA,CAAA,CAAA;AACF,KAAA;IACAwK,MAAS,GAAA;AACP,QAAA,MAAMC,SAAS,EAAE,CAAA;AACjBnQ,QAAAA,IAAAA,CAAK,IAAI,CAACiY,EAAE,EAAE,CAAC,CAACvS,IAAM,EAAA,EAAE0S,IAAM5I,EAAAA,IAAI,EAAE0I,UAAU,EAAE,CAAC,GAAA;YAC/C,MAAME,IAAAA,GAAO,IAAIV,YAAalI,CAAAA,IAAAA,CAAAA,CAAAA;AAC9BW,YAAAA,MAAAA,CAAOtJ,IAAI,CAAC;AACVnB,gBAAAA,IAAAA;AACA0S,gBAAAA,IAAAA;AACAF,gBAAAA,UAAAA;gBACAK,IAAM,EAAA,CAAC,EAAE7S,IAAAA,CAAK,EAAE,EAAE0S,IAAK,CAAA,CAAC,EAAEF,UAAAA,GAAa,QAAW,GAAA,EAAA,CAAG,CAAC;AACxD,aAAA,CAAA,CAAA;AACF,SAAA,CAAA,CAAA;QACA,OAAO/H,MAAAA,CAAAA;AACT,KAAA;AAzDA1J,IAAAA,WAAAA,CAAYnB,MAAM,CAAE;AAClB,QAAA,IAAI,CAAC2S,EAAE,GAAGjJ,QAASC,CAAAA,IAAI,CAAC3J,MAAQ,EAAA,KAAA,CAAA,CAAA;QAChC,IAAI,CAACA,MAAM,GAAGA,MAAAA,CAAAA;AAChB,KAAA;AAuDF;;ACjEO,MAAMkT,YAAAA,CAAAA;IAIXC,EAAGC,CAAAA,SAAS,EAAEC,QAAQ,EAAE;AACtB,QAAA,IAAI/W,YAAY+W,QAAW,CAAA,EAAA;AACzB,YAAA,MAAMC,UAAa,GAAA,CAAC,EAAEF,SAAAA,CAAU,MAAM,CAAC,CAAA;AACvC,YAAA,IAAI,IAAI,CAACG,OAAO,CAACD,UAAW,CAAA,EAAE,IAAI,CAACC,OAAO,CAACD,UAAW,CAAA,CAAC/R,IAAI,CAAC8R,QAAAA,CAAAA,CAAAA;AACvD,iBAAA,IAAI,CAACE,OAAO,CAACD,UAAAA,CAAW,GAAG;AAACD,gBAAAA,QAAAA;AAAS,aAAA,CAAA;SACrC,MAAA;AACL,YAAA,IAAI,IAAI,CAACE,OAAO,CAACH,SAAU,CAAA,EAAE,IAAI,CAACG,OAAO,CAACH,SAAU,CAAA,CAAC7R,IAAI,CAAC8R,QAAAA,CAAAA,CAAAA;AACrD,iBAAA,IAAI,CAACE,OAAO,CAACH,SAAAA,CAAU,GAAG;AAACC,gBAAAA,QAAAA;AAAS,aAAA,CAAA;AAC3C,SAAA;AACA,QAAA,OAAO,IAAI,CAAA;AACb,KAAA;IACAG,IAAKJ,CAAAA,SAAS,EAAEC,QAAQ,EAAE;AACxB,QAAA,IAAI/W,YAAY+W,QAAW,CAAA,EAAA;AACzB,YAAA,MAAMC,UAAa,GAAA,CAAC,EAAEF,SAAAA,CAAU,MAAM,CAAC,CAAA;YACvC,MAAMK,SAAAA,GAAY,OAAO,GAAGC,IAAAA,GAAAA;AAC1B,gBAAA,MAAML,QAAYK,CAAAA,GAAAA,IAAAA,CAAAA,CAAAA;gBAClB,IAAI,CAACC,cAAc,CAACL,UAAYG,EAAAA,SAAAA,CAAAA,CAAAA;AAClC,aAAA,CAAA;AACA,YAAA,IAAI,IAAI,CAACF,OAAO,CAACD,UAAW,CAAA,EAAE,IAAI,CAACC,OAAO,CAACD,UAAW,CAAA,CAAC/R,IAAI,CAACkS,SAAAA,CAAAA,CAAAA;AACvD,iBAAA,IAAI,CAACF,OAAO,CAACD,UAAAA,CAAW,GAAG;AAACG,gBAAAA,SAAAA;AAAU,aAAA,CAAA;SACtC,MAAA;YACL,MAAMA,SAAAA,GAAY,CAAC,GAAGC,IAAAA,GAAAA;gBACpBL,QAAYK,CAAAA,GAAAA,IAAAA,CAAAA,CAAAA;gBACZ,IAAI,CAACC,cAAc,CAACP,SAAWK,EAAAA,SAAAA,CAAAA,CAAAA;AACjC,aAAA,CAAA;AACA,YAAA,IAAI,IAAI,CAACF,OAAO,CAACH,SAAU,CAAA,EAAE,IAAI,CAACG,OAAO,CAACH,SAAU,CAAA,CAAC7R,IAAI,CAACkS,SAAAA,CAAAA,CAAAA;AACrD,iBAAA,IAAI,CAACF,OAAO,CAACH,SAAAA,CAAU,GAAG;AAACK,gBAAAA,SAAAA;AAAU,aAAA,CAAA;AAC5C,SAAA;AACA,QAAA,OAAO,IAAI,CAAA;AACb,KAAA;IACAE,cAAeP,CAAAA,SAAS,EAAEC,QAAQ,EAAE;AAClC,QAAA,IAAI,IAAI,CAACE,OAAO,CAACH,UAAU,EAAE;AAC3B,YAAA,MAAMQ,eAAe,EAAE,CAAA;AACvBlZ,YAAAA,IAAAA,CAAK,IAAI,CAAC6Y,OAAO,CAACH,SAAAA,CAAU,EAAE,CAACK,SAAAA,GAAAA;AAC7B,gBAAA,IAAIA,SAAcJ,KAAAA,QAAAA,EAAUO,YAAarS,CAAAA,IAAI,CAACkS,SAAAA,CAAAA,CAAAA;AAChD,aAAA,CAAA,CAAA;AACA,YAAA,IAAI,CAACF,OAAO,CAACH,SAAAA,CAAU,GAAGQ,YAAAA,CAAAA;AAC5B,SAAA;AACA,QAAA,OAAO,IAAI,CAAA;AACb,KAAA;AACA,IAAA,MAAMC,IAAKT,CAAAA,SAAS,EAAE,GAAGM,IAAI,EAAE;AAC7B,QAAA,IAAI,IAAI,CAACH,OAAO,CAACH,UAAU,EAAE;YAC3B1Y,IAAK,CAAA,IAAI,CAAC6Y,OAAO,CAACH,UAAU,EAAE,CAACC,WAAaA,QAAYK,CAAAA,GAAAA,IAAAA,CAAAA,CAAAA,CAAAA;AAC1D,SAAA;AACA,QAAA,MAAM,IAAI,CAACI,SAAS,CAACV,SAAcM,EAAAA,GAAAA,IAAAA,CAAAA,CAAAA;AACrC,KAAA;AACA,IAAA,MAAMI,SAAUV,CAAAA,SAAS,EAAE,GAAGM,IAAI,EAAE;AAClC,QAAA,MAAMJ,UAAa,GAAA,CAAC,EAAEF,SAAAA,CAAU,MAAM,CAAC,CAAA;AACvC,QAAA,IAAI,IAAI,CAACG,OAAO,CAACD,WAAW,EAAE;YAC5B,MAAM7X,SAAAA,CACJ,IAAI,CAAC8X,OAAO,CAACD,WAAW,EACxB,OAAOD,QAAa,GAAA,MAAMA,QAAYK,CAAAA,GAAAA,IAAAA,CAAAA,CAAAA,CAAAA;AAE1C,SAAA;AACF,KAAA;IACAK,WAAYX,CAAAA,SAAS,EAAEC,QAAQ,EAAE;AAC/B,QAAA,OAAO,IAAI,CAACF,EAAE,CAACC,SAAWC,EAAAA,QAAAA,CAAAA,CAAAA;AAC5B,KAAA;IACAW,GAAIZ,CAAAA,SAAS,EAAEC,QAAQ,EAAE;AACvB,QAAA,OAAO,IAAI,CAACM,cAAc,CAACP,SAAWC,EAAAA,QAAAA,CAAAA,CAAAA;AACxC,KAAA;IA/DAlS,WAAc,EAAA;QACZ,IAAI,CAACoS,OAAO,GAAG,EAAC,CAAA;AAClB,KAAA;AA8DF;;ACjEO,MAAMU,WAAAA,CAAAA;IAMXzG,OAAU,GAAA;AACR,QAAA,OAAOR,KAAM,CAAA,IAAI,CAACmC,GAAG,EAAE,IAAI,CAACpC,GAAG,GAAG,IAAI,CAACG,IAAI,EAAE,IAAI,CAACA,IAAI,CAAA,CAAA;AACxD,KAAA;AAEA,IAAA,IAAIgH,KAAQ,GAAA;QACV,OAAO,IAAI,CAAC1G,OAAO,EAAA,CAAA;AACrB,KAAA;AAEA2G,IAAAA,QAAAA,CAASpT,CAAC,EAAE;AACV,QAAA,OAAO,IAAI,CAACmT,KAAK,CAACC,QAAQ,CAACpT,CAAAA,CAAAA,CAAAA;AAC7B,KAAA;IAEA,CAAC9F,MAAAA,CAAOC,QAAQ,CAAC,GAAG;AAClB,QAAA,OAAO,IAAI,CAACgZ,KAAK,CAACjY,MAAM,EAAA,CAAA;AAC1B,KAAA;AAnBAkF,IAAAA,WAAAA,CAAYgO,GAAG,EAAEpC,GAAG,EAAEG,IAAAA,GAAO,CAAC,CAAE;QAC9B,IAAI,CAACiC,GAAG,GAAGA,GAAAA,CAAAA;QACX,IAAI,CAACpC,GAAG,GAAGA,GAAAA,CAAAA;QACX,IAAI,CAACG,IAAI,GAAGA,IAAAA,CAAAA;AACd,KAAA;AAgBF;;AClBO,MAAMkH,eAAAA,CAAAA;AA4BXC,IAAAA,MAAAA,CAAOzM,KAAK,EAAE;QACZ,IAAI,IAAI,CAAC0M,QAAQ,KAAK1M,SAAS,IAAI,CAAC2M,SAAS,CAAC3M,KAAQ,CAAA,EAAA;AACpD,YAAA,IAAI,CAAC4M,QAAQ,GAAG,IAAI,CAACF,QAAQ,CAAA;YAC7B,IAAI,CAACA,QAAQ,GAAG1M,KAAAA,CAAAA;AAChB,YAAA,IAAI,CAAC6M,MAAM,CAACZ,IAAI,CAAC,YAAY,IAAI,CAACS,QAAQ,EAAE,IAAI,CAACE,QAAQ,EAAE,IAAI,CAACE,OAAO,CAAA,CAAA;AACvE,YAAA,IAAI,CAACD,MAAM,CAACZ,IAAI,CAAC,WAAW,IAAI,CAACS,QAAQ,EAAE,IAAI,CAACE,QAAQ,EAAE,IAAI,CAACE,OAAO,CAAA,CAAA;YACtE,OAAO,IAAA,CAAA;AACT,SAAA;QACA,OAAO,KAAA,CAAA;AACT,KAAA;AACAH,IAAAA,SAAAA,CAAUxT,CAAC,EAAE;AACX,QAAA,OAAO,IAAI,CAACiM,KAAK,CAACmH,QAAQ,CAACpT,CAAAA,CAAAA,CAAAA;AAC7B,KAAA;AAvCAI,IAAAA,WAAAA,CAAY,EACVf,IAAI,EACJuU,WAAW,EACX3H,KAAQ,GAAA;AAAC,QAAA,CAAA;AAAG,QAAA,CAAA;AAAG,QAAA,CAAA;KAAE,EACjB4H,YAAY,EACZH,MAAM,EACNI,MAAM,EACNH,OAAO,EACR,CAAE;QACD,IAAI,CAACtU,IAAI,GAAGA,IAAAA,CAAAA;QACZ,IAAI,CAACuU,WAAW,GAAGA,WAAAA,CAAAA;AACnB,QAAA,IAAI,CAAC3H,KAAK,GAAG,IAAIiH,WAAejH,CAAAA,GAAAA,KAAAA,CAAAA,CAAAA;QAChC,IAAI,CAACyH,MAAM,GAAG,IAAIvB,YAAAA,EAAAA,CAAAA;QAClB,IAAI,CAAC2B,MAAM,GAAGA,MAAAA,CAAAA;QACd,IAAI,CAACC,aAAa,GAAGF,YAAAA,CAAAA;QACrB,IAAI,CAACF,OAAO,GAAGA,OAAAA,CAAAA;AAEf,QAAA,IAAID,MACF/Z,EAAAA,IAAAA,CAAK+Z,MAAQ,EAAA,CAACpB,QAAUD,EAAAA,SAAAA,GAAc,IAAI,CAACqB,MAAM,CAACtB,EAAE,CAACC,SAAWC,EAAAA,QAAAA,CAAAA,CAAAA,CAAAA;QAElE,IAAIuB,YAAAA,KAAiBhP,SAAa,IAAA,IAAI,CAAC2O,SAAS,CAACK,YAC/C,CAAA,EAAA,IAAI,CAACN,QAAQ,GAAGM,YAAAA,CAAAA;AACb,aAAA,IAAI,CAACN,QAAQ,GAAG,IAAI,CAACtH,KAAK,CAACmC,GAAG,CAAA;QAEnC,IAAI,CAACsF,MAAM,CAACZ,IAAI,CAAC,QAAU,EAAA,IAAI,CAACS,QAAQ,EAAEI,OAAAA,CAAAA,CAAAA;QAC1C,IAAI,CAACD,MAAM,CAACZ,IAAI,CAAC,WAAW,IAAI,CAACS,QAAQ,EAAE1O,SAAW8O,EAAAA,OAAAA,CAAAA,CAAAA;AACxD,KAAA;AAcF;;AC9CA;AAOO,MAAMK,mBAAAA,CAAAA;AAoCXV,IAAAA,MAAAA,CAAOzM,KAAK,EAAE;QACZ,IAAI,IAAI,CAAC0M,QAAQ,KAAK1M,SAAS,IAAI,CAACoN,MAAM,CAACpN,KAAQ,CAAA,EAAA;AACjD,YAAA,IAAI,CAAC4M,QAAQ,GAAG,IAAI,CAACF,QAAQ,CAAA;YAC7B,IAAI,CAACA,QAAQ,GAAG1M,KAAAA,CAAAA;AAChB,YAAA,IAAI,CAAC6M,MAAM,CAACZ,IAAI,CAAC,YAAY,IAAI,CAACS,QAAQ,EAAE,IAAI,CAACE,QAAQ,EAAE,IAAI,CAACE,OAAO,CAAA,CAAA;AACvE,YAAA,IAAI,CAACD,MAAM,CAACZ,IAAI,CAAC,WAAW,IAAI,CAACS,QAAQ,EAAE,IAAI,CAACE,QAAQ,EAAE,IAAI,CAACE,OAAO,CAAA,CAAA;YACtE,OAAO,IAAA,CAAA;AACT,SAAA;QACA,OAAO,KAAA,CAAA;AACT,KAAA;AACAM,IAAAA,MAAAA,CAAO5U,IAAI,EAAE;AACX,QAAA,OAAO,IAAI,CAACnE,MAAM,CAACoO,GAAG,CAACjK,IAAS,CAAA,IAAA,CAAC,IAAI,CAACnE,MAAM,CAACgZ,IAAI,CAAA;AACnD,KAAA;AA/CA9T,IAAAA,WAAAA,CAAY,EACVf,IAAI,EACJuU,WAAW,EACX1Y,SAAS,EAAE,EACX2Y,YAAY,EACZH,MAAM,EACNI,MAAM,EACNH,OAAO,EACR,CAAE;QACD,IAAI,CAACtU,IAAI,GAAGA,IAAAA,CAAAA;QACZ,IAAI,CAACuU,WAAW,GAAGA,WAAAA,CAAAA;QACnB,IAAI,CAAC1Y,MAAM,GAAG,IAAIiM,IAChBjM,MAAO0B,CAAAA,GAAG,CAAC,CAACiK,KAAAA,GAAAA;AACV,YAAA,IAAI,OAAOA,KAAK,CAAC,EAAE,KAAK,QAAA,IAAYA,KAAK,CAAC,CAAA,CAAE,KAAKhC,SAAAA,EAC/CgC,KAAK,CAAC,CAAA,CAAE,GAAGb,6BAAUa,CAAAA,KAAK,CAAC,CAAE,CAAA,CAAA,CAAA;AAC/B,YAAA,IAAIA,KAAK,CAAC,CAAE,CAAA,KAAK,IAAQ,IAAA,CAACA,KAAK,CAAC,CAAE,CAAA,EAAEA,KAAK,CAAC,EAAE,GAAG,IAAA,CAAA;AAC1C,iBAAA,IAAIA,KAAK,CAAC,CAAE,CAAA,KAAK,KAAS,IAAA,CAACA,KAAK,CAAC,CAAE,CAAA,EAAEA,KAAK,CAAC,EAAE,GAAG,IAAA,CAAA;YACrD,OAAOA,KAAAA,CAAAA;AACT,SAAA,CAAA,CAAA,CAAA;QAEF,IAAI,CAAC6M,MAAM,GAAG,IAAIvB,YAAAA,EAAAA,CAAAA;QAClB,IAAI,CAAC2B,MAAM,GAAGA,MAAAA,CAAAA;QACd,IAAI,CAACC,aAAa,GAAGF,YAAAA,CAAAA;QACrB,IAAI,CAACF,OAAO,GAAGA,OAAAA,CAAAA;AAEf,QAAA,IAAID,MACF/Z,EAAAA,IAAAA,CAAK+Z,MAAQ,EAAA,CAACpB,QAAUD,EAAAA,SAAAA,GAAc,IAAI,CAACqB,MAAM,CAACtB,EAAE,CAACC,SAAWC,EAAAA,QAAAA,CAAAA,CAAAA,CAAAA;QAElE,IAAIuB,YAAAA,KAAiBhP,SAAa,IAAA,IAAI,CAACoP,MAAM,CAACJ,YAC5C,CAAA,EAAA,IAAI,CAACN,QAAQ,GAAGM,YAAAA,CAAAA;AACb,aAAA,IAAI3Y,MAAM,CAAC,CAAE,CAAA,EAAE,IAAI,CAACqY,QAAQ,GAAGrY,MAAM,CAAC,CAAE,CAAA,CAAC,CAAE,CAAA,CAAA;QAEhD,IAAI,CAACwY,MAAM,CAACZ,IAAI,CAAC,QAAU,EAAA,IAAI,CAACS,QAAQ,EAAEI,OAAAA,CAAAA,CAAAA;QAC1C,IAAI,CAACD,MAAM,CAACZ,IAAI,CAAC,WAAW,IAAI,CAACS,QAAQ,EAAE1O,SAAW8O,EAAAA,OAAAA,CAAAA,CAAAA;AACxD,KAAA;AAcF;;AC9CO,MAAMQ,YAAAA,CAAAA;AASXC,IAAAA,OAAAA,CAAQC,IAAI,EAAE;AACZ,QAAA,IAAIA,IAAKpI,CAAAA,KAAK,EAAE,IAAI,CAACqI,KAAK,CAACD,IAAAA,CAAKhV,IAAI,CAAC,GAAG,IAAIgU,eAAgBgB,CAAAA,IAAAA,CAAAA,CAAAA;AACvD,aAAA,IAAIA,IAAKnZ,CAAAA,MAAM,EAAE,IAAI,CAACoZ,KAAK,CAACD,IAAAA,CAAKhV,IAAI,CAAC,GAAG,IAAI2U,mBAAoBK,CAAAA,IAAAA,CAAAA,CAAAA;AACtE,QAAA,OAAO,IAAI,CAAA;AACb,KAAA;AACA,IAAA,MAAME,SAAY,GAAA;QAChB,MAAMpL,IAAAA,GAAO,IAAI,CAACqL,aAAa,EAAA,CAAA;QAC/B,MAAM9Z,SAAAA,CAAUyO,IAAM,EAAA,OAAOtC,KAAOxH,EAAAA,IAAAA,GAAAA;AAClC,YAAA,MAAM,IAAI,CAACuS,EAAE,CAACvI,GAAG,CAAChK,IAAMwH,EAAAA,KAAAA,CAAAA,CAAAA;AAC1B,SAAA,CAAA,CAAA;QACA,MAAMnM,SAAAA,CAAU,IAAI,CAACkX,EAAE,EAAE,OAAO,CAACvS,MAAMsM,CAAE,CAAA,GAAA;AACvC,YAAA,IAAI,CAAC,IAAI,CAAC8I,OAAO,CAACpV,IAAAA,CAAAA,EAAO,MAAM,IAAI,CAACuS,EAAE,CAACrI,MAAM,CAAClK,IAAAA,CAAAA,CAAAA;AAChD,SAAA,CAAA,CAAA;AACF,KAAA;AACA,IAAA,MAAMqV,WAAc,GAAA;AAClB/a,QAAAA,IAAAA,CAAK,IAAI,CAACiY,EAAE,EAAE,CAAC,CAACvS,IAAAA,EAAMwH,KAAM,CAAA,GAC1B,IAAI,CAAC8N,UAAU,CAACtV,IAAAA,EAAMwH,OAAOhC,SAAW,EAAA;gBAAE+P,UAAY,EAAA,IAAA;AAAK,aAAA,CAAA,CAAA,CAAA;QAE7D,MAAM,IAAI,CAACL,SAAS,EAAA,CAAA;AACtB,KAAA;AACA,IAAA,MAAM5C,IAAO,GAAA;QACX,IAAI,CAACyC,OAAO,GAAGvP,SAAAA,CAAAA;QACf,MAAM,IAAI,CAAC6P,WAAW,EAAA,CAAA;QACtB,OAAO,IAAI,CAACF,aAAa,EAAA,CAAA;AAC3B,KAAA;AAEAK,IAAAA,QAAAA,CAASxV,IAAI,EAAE;AACb,QAAA,OAAO,IAAI,CAACiV,KAAK,CAACjV,IAAK,CAAA,CAAA;AACzB,KAAA;AACAoV,IAAAA,OAAAA,CAAQpV,IAAI,EAAE;AACZ,QAAA,OAAO,CAAC,CAAC,IAAI,CAACiV,KAAK,CAACjV,IAAK,CAAA,CAAA;AAC3B,KAAA;AACAsV,IAAAA,UAAAA,CACEtV,IAAI,EACJwH,KAAK,EACL1J,QAAW,GAAA,CAACwO,GAAGmJ,EAAIC,EAAAA,GAAAA,GAAAA,EAAU,EAC7B,EAAEH,UAAa,GAAA,KAAK,EAAE,GAAG,EAAE,EAC3B;AACA,QAAA,MAAMxa,IAAO,GAAA,IAAI,CAACya,QAAQ,CAACxV,IAAAA,CAAAA,CAAAA;AAC3B,QAAA,IAAIjF,IAAM,EAAA;YACR,MAAMyL,MAAAA,GAASzL,IAAKkZ,CAAAA,MAAM,CAACzM,KAAAA,CAAAA,CAAAA;AAC3B,YAAA,IAAIhB,MAAQ,EAAA;gBACV,IAAI,CAAC+O,cAAcxa,IAAK0Z,CAAAA,MAAM,EAAE,IAAI,CAACA,MAAM,GAAG,IAAA,CAAA;gBAC9C3W,QAAS/C,CAAAA,IAAAA,CAAKmZ,QAAQ,EAAEnZ,IAAAA,CAAKqZ,QAAQ,EAAE,IAAI,CAACe,aAAa,EAAA,CAAA,CAAA;AAC3D,aAAA;AACF,SAAA;AACA,QAAA,OAAO,IAAI,CAAA;AACb,KAAA;AACAQ,IAAAA,UAAAA,CAAW3V,IAAI,EAAE;AACf,QAAA,MAAMjF,IAAO,GAAA,IAAI,CAACya,QAAQ,CAACxV,IAAAA,CAAAA,CAAAA;QAC3B,IAAIjF,IAAAA,EAAM,OAAOA,IAAAA,CAAKmZ,QAAQ,CAAA;AAChC,KAAA;IACAiB,aAAgB,GAAA;AACd,QAAA,MAAM3O,SAAS,EAAC,CAAA;AAChBlM,QAAAA,IAAAA,CAAK,IAAI,CAAC2a,KAAK,EAAE,CAAC3I,CAAGtM,EAAAA,IAAAA,GAAAA;AACnBwG,YAAAA,MAAM,CAACxG,IAAK,CAAA,GAAG,IAAI,CAAC2V,UAAU,CAAC3V,IAAAA,CAAAA,CAAAA;AACjC,SAAA,CAAA,CAAA;QACA,OAAOwG,MAAAA,CAAAA;AACT,KAAA;IACA,MAAMoP,IAAAA,CAAKC,YAAY,EAAE;QACvB,MAAMC,UAAAA,GAAa,OAAO,EAAEC,KAAAA,GAAQ,IAAI,EAAE,GAAG,EAAE,GAAA;YAC7C,MAAM,IAAI,CAACb,SAAS,EAAA,CAAA;AACpB,YAAA,IAAIa,OAAO,IAAI,CAACnW,MAAM,CAACR,WAAW,CAAC,UAAA,CAAA,CAAA;AACrC,SAAA,CAAA;QACA,IAAI,IAAI,CAACqV,MAAM,EAAE;YACf,IAAI,CAACA,MAAM,GAAG,KAAA,CAAA;YACd,MAAM/J,MAAAA,CAAOC,OAAO,CAAC;gBACnBE,IAAM,EAAA,mDAAA;gBACNtQ,MAAQ,EAAA,IAAI,CAACqF,MAAM;gBACnBmL,SAAW,EAAA,UAAA;AACT,oBAAA,MAAM+K,UAAW,CAAA;wBAAEC,KAAO,EAAA,KAAA;AAAM,qBAAA,CAAA,CAAA;;AAElC,iBAAA;gBACAjL,QAAU,EAAA,UAAA;oBACR,MAAM,IAAI,CAACuK,WAAW,EAAA,CAAA;oBACtB,MAAM,IAAI,CAACW,UAAU,CAACH,YAAAA,CAAAA,CAAAA;AACxB,iBAAA;AACF,aAAA,CAAA,CAAA;AACF,SAAA,MAAO,MAAMC,UAAAA,EAAAA,CAAAA;AACf,KAAA;IACA,MAAME,UAAAA,CAAWH,YAAY,EAAE;AAC7B,QAAA,MAAM7K,IAAO,GAAA,IAAIiL,aAAgBrL,EAAAA,CAAAA,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC5K,IAAI,CAAC,GAAG,CAAC,CAAA,CAAA;AACxD,QAAA,MAAMkW,UAAU,EAAE,CAAA;AAElB5b,QAAAA,IAAAA,CAAK,IAAI,CAAC2a,KAAK,EAAE,CAACla,IAAAA,GAAAA;AAChB,YAAA,IAAIA,gBAAgB4Z,mBAAqB,EAAA;gBACvC,MAAM,EAAE3U,IAAI,EAAEuU,WAAW,EAAE1Y,MAAM,EAAEqY,QAAQ,EAAE,GAAGnZ,IAAAA,CAAAA;gBAEhD,IAAIc,MAAAA,CAAOgZ,IAAI,KAAK,CAAKhZ,IAAAA,MAAAA,CAAOsO,GAAG,CAAC,IAAStO,CAAAA,IAAAA,MAAAA,CAAOsO,GAAG,CAAC,KAAQ,CAAA,EAAA;AAC9D,oBAAA,MAAMgM,YAAY,IAAIrO,GAAAA,EAAAA,CAAAA;oBACtBxN,IAAKuB,CAAAA,MAAAA,EAAQ,CAAC,CAAC2B,CAAAA,CAAE,GAAK2Y,SAAUnM,CAAAA,GAAG,CAACxM,CAAGA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AACvC0Y,oBAAAA,OAAAA,CAAQ/U,IAAI,CAAC;AAAEnB,wBAAAA,IAAAA;AAAMmW,wBAAAA,SAAAA;AAAU,qBAAA,CAAA,CAAA;oBAE/BnL,IAAKoL,CAAAA,MAAM,CAAC7B,WAAaL,EAAAA,QAAAA,CAAAA,CAAAA;iBACpB,MAAA;AACL,oBAAA,MAAMmC,UAAa,GAAA;AAAIxa,wBAAAA,GAAAA,MAAAA;AAAO,qBAAA,CAAA;AAE9B,oBAAA,MAAMsa,YAAY,IAAIrO,GAAAA,EAAAA,CAAAA;oBACtBxN,IAAK+b,CAAAA,UAAAA,EAAY,CAAC,CAAC7Y,CAAAA,CAAE,EAAEpC,CAAM+a,GAAAA,SAAAA,CAAUnM,GAAG,CAAC5O,CAAGoC,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAC9C0Y,oBAAAA,OAAAA,CAAQ/U,IAAI,CAAC;AAAEnB,wBAAAA,IAAAA;AAAMmW,wBAAAA,SAAAA;AAAU,qBAAA,CAAA,CAAA;oBAE/BnL,IAAKsL,CAAAA,QAAQ,CACX/B,WAAAA,EACA8B,UAAW9Y,CAAAA,GAAG,CAAC,CAACC,CAAAA,GAAMA,CAAC,CAAC,CAAE,CAAA,CAAA,EAC1B6Y,WAAW9Y,GAAG,CAAC,CAACC,CAAAA,GAAMA,CAAC,CAAC,CAAE,CAAA,CAAA,CAAE+Y,SAAS,CAAC,CAAC/Y,CAAAA,GAAMA,CAAM0W,KAAAA,QAAAA,CAAAA,CAAAA,CAAAA;AAEvD,iBAAA;aACK,MAAA,IAAInZ,gBAAgBiZ,eAAiB,EAAA;gBAC1C,MAAM,EAAEhU,IAAI,EAAEuU,WAAW,EAAE3H,KAAK,EAAEsH,QAAQ,EAAE,GAAGnZ,IAAAA,CAAAA;AAE/C,gBAAA,MAAMob,YAAY,IAAIrO,GAAAA,EAAAA,CAAAA;AACtBxN,gBAAAA,IAAAA,CAAKsS,OAAO,CAACxR,CAAAA,GAAM+a,SAAUnM,CAAAA,GAAG,CAAC5O,CAAGA,EAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AACpC8a,gBAAAA,OAAAA,CAAQ/U,IAAI,CAAC;AAAEnB,oBAAAA,IAAAA;AAAMmW,oBAAAA,SAAAA;AAAU,iBAAA,CAAA,CAAA;gBAE/BnL,IAAKwL,CAAAA,MAAM,CAACjC,WAAAA,EAAa3H,KAAMmC,CAAAA,GAAG,EAAEnC,KAAAA,CAAMD,GAAG,EAAEC,KAAME,CAAAA,IAAI,EAAEoH,QAAAA,CAAAA,CAAAA;AAC7D,aAAA;AACF,SAAA,CAAA,CAAA;QAEA,MAAMjJ,MAAAA,GAAS,IAAIP,MAAO,CAAA;YACxBO,MAAQD,EAAAA,IAAAA;YACRK,OAAS,EAAA,UAAA;AACP,gBAAA,IAAIwK,cAAc,MAAMA,YAAAA,CAAarK,IAAI,CAAC,IAAI,CAAC5L,MAAM,CAAA,CAAA;AACvD,aAAA;AACAoM,YAAAA,QAAAA,EAAU,OAAOxF,MAAAA,GAAAA;gBACflM,IAAKkM,CAAAA,MAAAA,EAAQ,CAACsC,UAAY2N,EAAAA,SAAAA,GAAAA;oBACxB,MAAM,EAAEzW,IAAI,EAAEmW,SAAS,EAAE,GAAGD,OAAO,CAACO,SAAU,CAAA,CAAA;oBAC9C,MAAMjP,KAAAA,GAAQ2O,SAAUhM,CAAAA,GAAG,CAACrB,UAAAA,CAAAA,CAAAA;oBAC5B,IAAI,CAACwM,UAAU,CAACtV,IAAMwH,EAAAA,KAAAA,CAAAA,CAAAA;AACxB,iBAAA,CAAA,CAAA;gBACA,MAAM,IAAI,CAACoO,IAAI,CAACC,YAAAA,CAAAA,CAAAA;AAClB,aAAA;AACF,SAAA,CAAA,CAAA;AACA,QAAA,MAAM5K,MAAOO,CAAAA,IAAI,CAAC,IAAI,CAAC5L,MAAM,CAAA,CAAA;AAC/B,KAAA;IA7IAmB,WAAYnB,CAAAA,MAAM,EAAEI,IAAI,CAAE;AAM1BiV,QAAAA,IAAAA,CAAAA,KAAAA,GAAQ,EAAC,CAAA;QALP,IAAI,CAACjV,IAAI,GAAGA,IAAAA,CAAAA;QACZ,IAAI,CAACuS,EAAE,GAAGjJ,QAASC,CAAAA,IAAI,CAAC3J,MAAAA,EAAQ,CAAC,eAAe,EAAEI,IAAAA,CAAK,CAAC,CAAA,CAAA;QACxD,IAAI,CAACJ,MAAM,GAAGA,MAAAA,CAAAA;AAChB,KAAA;AA0IF;;ACpJO,MAAM8W,eAAAA,CAAAA;AAQX3B,IAAAA,OAAAA,CAAQC,IAAI,EAAE;AACZ,QAAA,IAAI,CAAC2B,MAAM,CAACtY,GAAG,CAAC2W,IAAAA,CAAAA,CAAAA;AAChB,QAAA,OAAO,IAAI,CAAA;AACb,KAAA;AACA4B,IAAAA,WAAAA,CAAYhX,MAAM,EAAE;AAClB,QAAA,IAAI,IAAI,CAACL,OAAO,CAAC0K,GAAG,CAACrK,MAAS,CAAA,EAAA,OAAO,IAAI,CAACL,OAAO,CAAC4K,GAAG,CAACvK,MAAAA,CAAAA,CAAAA;AACtD,QAAA,MAAMiX,YAAY,IAAI/B,YAAAA,CAAalV,MAAQ,EAAA,IAAI,CAACI,IAAI,CAAA,CAAA;AACpD1F,QAAAA,IAAAA,CAAK,IAAI,CAACqc,MAAM,EAAE,CAAC5b,IAAAA,GAAAA;AACjBA,YAAAA,IAAAA,CAAKuZ,OAAO,GAAG1U,MAAAA,CAAAA;AACfiX,YAAAA,SAAAA,CAAU9B,OAAO,CAACha,IAAAA,CAAAA,CAAAA;AACpB,SAAA,CAAA,CAAA;AACA,QAAA,IAAI,CAACwE,OAAO,CAACyK,GAAG,CAACpK,MAAQiX,EAAAA,SAAAA,CAAAA,CAAAA;QACzB,OAAOA,SAAAA,CAAAA;AACT,KAAA;AACA,IAAA,MAAMC,eAAkB,GAAA;AACtB,QAAA,MAAMlX,SAAS,MAAMN,8BAAAA,EAAAA,CAAAA;QACrB,OAAO,IAAI,CAACsX,WAAW,CAAChX,MAAAA,CAAAA,CAAAA;AAC1B,KAAA;AACA,IAAA,MAAM0S,IAAO,GAAA;AACX,QAAA,MAAMyE,WAAW,IAAIjP,GAAAA,EAAAA,CAAAA;QACrB,MAAMzM,SAAAA,CAAU,IAAI,CAACkE,OAAO,EAAE,OAAO,CAACK,QAAQiX,SAAU,CAAA,GAAA;YACtD,MAAMrQ,MAAAA,GAAS,MAAMqQ,SAAAA,CAAUvE,IAAI,EAAA,CAAA;YACnCyE,QAAS/M,CAAAA,GAAG,CAACpK,MAAQ4G,EAAAA,MAAAA,CAAAA,CAAAA;AACvB,SAAA,CAAA,CAAA;QACA,IAAI,CAACoQ,WAAW,GAAGpR,SAAAA,CAAAA;QACnB,OAAOuR,QAAAA,CAAAA;AACT,KAAA;AAEAC,IAAAA,SAAAA,CAAUpX,MAAM,EAAE;AAChB,QAAA,OAAO,IAAI,CAACL,OAAO,CAAC4K,GAAG,CAACvK,MAAAA,CAAAA,CAAAA;AAC1B,KAAA;AArCAmB,IAAAA,WAAAA,CAAYf,IAAI,CAAE;AAIlBT,QAAAA,IAAAA,CAAAA,OAAAA,GAAU,IAAIuI,GAAAA,EAAAA,CAAAA;AACd6O,QAAAA,IAAAA,CAAAA,MAAAA,GAAS,IAAIja,GAAAA,EAAAA,CAAAA;QAJX,IAAI,CAACsD,IAAI,GAAGA,IAAAA,CAAAA;AACd,KAAA;AAoCF;;ACpCO,MAAMiX,aAAAA,CAAAA;AAGXC,IAAAA,kBAAAA,CAAmBlX,IAAI,EAAE;QACvB,MAAMmX,UAAAA,GAAa,IAAIT,eAAgB1W,CAAAA,IAAAA,CAAAA,CAAAA;AACvC,QAAA,IAAI,CAACmX,UAAU,CAACnN,GAAG,CAAChK,IAAMmX,EAAAA,UAAAA,CAAAA,CAAAA;QAC1B,OAAOA,UAAAA,CAAAA;AACT,KAAA;AACAC,IAAAA,aAAAA,CAAcpX,IAAI,EAAE;AAClB,QAAA,OAAO,IAAI,CAACmX,UAAU,CAAChN,GAAG,CAACnK,IAAAA,CAAAA,CAAAA;AAC7B,KAAA;IACA,MAAMgW,UAAAA,CAAWpW,MAAM,EAAE;AACvB,QAAA,MAAMoL,OAAO,IAAIqM,cAAAA,EAAAA,CACdzM,KAAK,CAAC,MAAA,CAAA,CACNC,IAAI,CAAC,WAAA,CAAA,CAAA;AACR,QAAA,MAAMqL,UAAU,EAAE,CAAA;AAClB5b,QAAAA,IAAAA,CAAK,IAAI,CAAC6c,UAAU,EAAE,CAAC,CAACnX,IAAK,CAAA,GAAA;AAC3BkW,YAAAA,OAAAA,CAAQ/U,IAAI,CAACnB,IAAAA,CAAAA,CAAAA;YACbgL,IAAKsM,CAAAA,MAAM,CAACtX,IAAAA,CAAAA;;AACd,SAAA,CAAA,CAAA;QAEA,MAAMiL,MAAAA,GAAS,IAAIP,MAAO,CAAA;YACxBO,MAAQD,EAAAA,IAAAA;AACRqB,YAAAA,QAAAA,EAAU,OAAOF,SAAAA,GAAAA;gBACf,MAAMnM,IAAAA,GAAOkW,OAAO,CAAC/J,SAAU,CAAA,CAAA;gBAC/B,MAAM,IAAI,CAACiL,aAAa,CAACpX,MAAMgX,SAAS,CAACpX,MAAQoW,CAAAA,CAAAA,UAAU,CAAC/K,MAAAA,CAAAA,CAAAA;AAC9D,aAAA;AACF,SAAA,CAAA,CAAA;QACA,MAAMA,MAAAA,CAAOO,IAAI,CAAC5L,MAAAA,CAAAA,CAAAA;AACpB,KAAA;;AA5BAuX,QAAAA,IAAAA,CAAAA,UAAAA,GAAa,IAAIrP,GAAAA,EAAAA,CAAAA;;AA6BnB;;ACpCO,MAAMyP,aAAgB,GAAA,IAAIN,aAAe,EAAA;;ACGhDta,QAAAA,CAASgB,QAAQ,CAAC,GAAK,EAAA,QAAA,EAAU,OAAOO,IAAMU,EAAAA,MAAAA,GAAAA;IAC5C,OAAQV,IAAI,CAAC,CAAE,CAAA;QACb,KAAK,QAAA,CAAA;QACL,KAAK,IAAA,CAAA;QACL,KAAKsH,SAAAA;AAAW,YAAA;;AAEd,gBAAA,MAAMtI,QAAS,CAAA,IAAMqa,aAAcvB,CAAAA,UAAU,CAACpX,MAAAA,CAAAA,CAAAA,CAAAA;AAC9C,gBAAA,MAAA;AACF,aAAA;AACA,QAAA;AAAS,YAAA;AACP,gBAAA,MAAMM,aAAa,QAAUN,EAAAA,MAAAA,CAAAA,CAAAA;AAC/B,aAAA;AACF,KAAA;AACF,CAAA,CAAA;;ACZA,eAAe4Y,uBAAuB/Y,KAAK,EAAA;IACzC,MAAMmB,MAAAA,GAASnB,MAAMgZ,UAAU,CAAA;IAC/B,MAAMC,OAAAA,GAAU,IAAIC,OAAQ/X,CAAAA,MAAAA,CAAAA,CAAAA;IAE5B,MAAM8X,OAAAA,CAAQ1N,GAAG,CAAC;QAChBhK,IAAM,EAAA,WAAA;QACN4X,MAAQ,EAAA;YACNpF,UAAY,EAAA,IAAA;YACZC,KAAO,EAAA,IAAA;AACT,SAAA;AACF,KAAA,CAAA,CAAA;AACF,CAAA;AAEO,MAAMmF,MAASL,GAAAA,aAAAA,CACnBL,kBAAkB,CAAC,KAAA,CAAA,CACnBnC,OAAO,CAAC;IACP/U,IAAM,EAAA,iBAAA;IACNuU,WAAa,EAAA,qBAAA;IACb1Y,MAAQ,EAAA;AAAC,QAAA;AAAC,YAAA,IAAA;AAAK,SAAA;AAAE,QAAA;AAAC,YAAA,KAAA;AAAM,SAAA;AAAC,KAAA;IACzB2Y,YAAc,EAAA,IAAA;IACdH,MAAQ,EAAA;QACNwD,OAAS,EAAA,CAAC3D,UAAUE,QAClBha,GAAAA,OAAAA,CAAQ0d,IAAI,CAAC,6BAAA,EAA+B1D,UAAU,IAAMF,EAAAA,QAAAA,CAAAA;AAChE,KAAA;AACF,CAAA,CAAA,CACCa,OAAO,CAAC;IACP/U,IAAM,EAAA,kBAAA;IACNuU,WAAa,EAAA,cAAA;IACb1Y,MAAQ,EAAA;AAAC,QAAA;AAAC,YAAA,IAAA;AAAK,SAAA;AAAE,QAAA;AAAC,YAAA,KAAA;AAAM,SAAA;AAAC,KAAA;IACzB2Y,YAAc,EAAA,IAAA;IACdH,MAAQ,EAAA;AACNwD,QAAAA,OAAAA,EAAS,CAAC3D,QAAUE,EAAAA,QAAAA,GAAAA;AAClBha,YAAAA,OAAAA,CAAQ0d,IAAI,CAAC,8BAAgC1D,EAAAA,QAAAA,EAAU,IAAMF,EAAAA,QAAAA,CAAAA,CAAAA;YAE7D,IAAIA,QAAAA,EACF5X,MAAMmD,WAAW,CAACsY,SAAS,CAACvZ,SAAS,CAACgZ,sBAAwB,EAAA;gBAC5DQ,WAAa,EAAA;AAAC,oBAAA,kBAAA;AAAmB,iBAAA;AACnC,aAAA,CAAA,CAAA;AACG1b,iBAAAA,KAAAA,CAAMmD,WAAW,CAACsY,SAAS,CAAClY,WAAW,CAAC2X,sBAAAA,CAAAA,CAAAA;AAC/C,SAAA;AACF,KAAA;AACF,CAAA,CAAA,CACCzC,OAAO,CAAC;IACP/U,IAAM,EAAA,UAAA;IACNuU,WAAa,EAAA,iBAAA;IACb1Y,MAAQ,EAAA;AAAC,QAAA;AAAC,YAAA,IAAA;AAAK,SAAA;AAAE,QAAA;AAAC,YAAA,KAAA;AAAM,SAAA;AAAC,KAAA;IACzB2Y,YAAc,EAAA,KAAA;IACdC,MAAQ,EAAA,IAAA;IACRJ,MAAQ,EAAA;QACNwD,OAAS,EAAA,CAAC3D,UAAUE,QAClBha,GAAAA,OAAAA,CAAQ0d,IAAI,CAAC,sBAAA,EAAwB1D,UAAU,IAAMF,EAAAA,QAAAA,CAAAA;AACzD,KAAA;AACF,CAAA,CAAA,CACCa,OAAO,CAAC;IACP/U,IAAM,EAAA,UAAA;IACNuU,WAAa,EAAA,iBAAA;IACb1Y,MAAQ,EAAA;AAAC,QAAA;AAAC,YAAA,IAAA;AAAK,SAAA;AAAE,QAAA;AAAC,YAAA,KAAA;AAAM,SAAA;AAAC,KAAA;IACzB2Y,YAAc,EAAA,KAAA;IACdC,MAAQ,EAAA,IAAA;IACRJ,MAAQ,EAAA;QACNwD,OAAS,EAAA,CAAC3D,UAAUE,QAClBha,GAAAA,OAAAA,CAAQ0d,IAAI,CAAC,sBAAA,EAAwB1D,UAAU,IAAMF,EAAAA,QAAAA,CAAAA;AACzD,KAAA;AACF,CAAE,CAAA;;AChEG,MAAMyD,OAAAA,CAAAA;IAOX,MAAM3N,GAAAA,CAAI,EAAEhK,IAAO,GAAA,SAAS,EAAE4X,MAAS,GAAA,EAAE,EAAE,EAAE;QAC3C,MAAMlF,IAAAA,GAAO,MAAM,IAAI,CAACuF,QAAQ,CAACjO,GAAG,CAAC/O,MAAOmO,CAAAA,MAAM,CAAC;AAAEpJ,YAAAA,IAAAA;SAAQ4X,EAAAA,MAAAA,CAAAA,CAAAA,CAAAA;AAC7D,QAAA,IAAI5X,IAAS,KAAA,UAAA,IAAcA,IAAS,KAAA,WAAA,EAAa,OAAO;AAAE0S,YAAAA,IAAAA;AAAK,SAAA,CAAA;AACjE,KAAA;AACA,IAAA,MAAME,MAAO,CAAA,EAAE5S,IAAO,GAAA,SAAS,EAAE,EAAE;AACjC,QAAA,OAAO,MAAM,IAAI,CAACiY,QAAQ,CAACrF,MAAM,CAAC5S,IAAAA,CAAAA,CAAAA;AACpC,KAAA;AACA,IAAA,MAAMkY,QAAS,CAAA,EAAElY,IAAO,GAAA,SAAS,EAAE,EAAE;AACnC,QAAA,MAAM0S,OAAO,MAAM,IAAI,CAACuF,QAAQ,CAAC9N,GAAG,CAACnK,IAAAA,CAAAA,CAAAA;AACrC,QAAA,IAAI0S,IAAM,EAAA;YACR,IACE,IAAI,CAACyF,YAAY,CAACxC,UAAU,CAAC,iBAAA,CAAA,IAC7B3V,SAAS,WACT,EAAA;gBACA,MAAM,IAAI,CAACgK,GAAG,CAAC;oBACbhK,IAAM,EAAA,UAAA;oBACN4X,MAAQ,EAAA;wBACNpF,UAAY,EAAA,IAAA;wBACZC,KAAO,EAAA,IAAA;AACT,qBAAA;AACF,iBAAA,CAAA,CAAA;AACF,aAAA;YACA,MAAMvV,QAAAA,CAAS,IACb,IAAI,CAAC0C,MAAM,CAACsY,QAAQ,CAACxF,IAAKR,CAAAA,QAAQ,EAAE;AAClCC,oBAAAA,SAAAA,EAAWO,KAAKP,SAAS;oBACzBiG,cAAgB,EAAA,KAAA;oBAChBC,YAAc,EAAA,KAAA;AAChB,iBAAA,CAAA,CAAA,CAAA;YAEF,OAAO;AAAE3F,gBAAAA,IAAAA;AAAK,aAAA,CAAA;AAChB,SAAA;AACF,KAAA;AACA,IAAA,MAAM4F,WAAY,CAAA,EAAEC,KAAQ,GAAA,EAAE,EAAE,EAAE;QAChC,KAAK,MAAMvY,QAAQuY,KAAO,CAAA;AACxB,YAAA,MAAM/R,MAAS,GAAA,MAAM,IAAI,CAAC0R,QAAQ,CAAC;AAAElY,gBAAAA,IAAAA;AAAK,aAAA,CAAA,CAAA;AAC1C,YAAA,IAAIwG,QAAQ,OAAOA,MAAAA,CAAAA;AACrB,SAAA;AACF,KAAA;IACAgS,IAAO,GAAA;AACL,QAAA,MAAMC,KAAQ,GAAA,IAAI,CAACR,QAAQ,CAACzN,MAAM,EAAGjN,CAAAA,GAAG,CAAC,CAAC,EAAEsV,IAAI,EAAE,GAAKA,IAAAA,CAAAA,CAAAA;QACvD,IAAI4F,KAAAA,CAAMld,MAAM,EAAE,OAAO;YAAEmd,GAAKD,EAAAA,KAAAA;AAAM,SAAA,CAAA;AACxC,KAAA;AA/CA1X,IAAAA,WAAAA,CAAYnB,MAAM,CAAE;QAClB,IAAI,CAACA,MAAM,GAAGA,MAAAA,CAAAA;AACd,QAAA,IAAI,CAACuY,YAAY,GAAGP,MAAAA,CAAOZ,SAAS,CAACpX,MAAAA,CAAAA,CAAAA;AACrC,QAAA,IAAI,CAACqY,QAAQ,GAAG7F,oBAAAA,CAAqBjI,GAAG,CAACvK,MAAAA,CAAAA,CAAAA;AAC3C,KAAA;AA4CF;;AChDA,MAAM+Y,YAAe,GAAA;AACnB,IAAA,KAAA;AACA,IAAA,IAAA;AACA,IAAA,QAAA;AACA,IAAA,IAAA;AACA,IAAA,IAAA;AACA,IAAA,MAAA;AACA,IAAA,IAAA;AACA,IAAA,IAAA;AACA,IAAA,MAAA;AACA,IAAA,IAAA;AACA,IAAA,IAAA;AACA,IAAA,MAAA;AACA,IAAA,IAAA;AACA,IAAA,QAAA;AACA,IAAA,KAAA;AACA,IAAA,IAAA;AACD,CAAA,CAAA;AAEM,eAAeC,UAAAA,CAAW1a,IAAI,EAAEU,MAAM,EAAA;AAC3C,IAAA,MAAMoB,IAAO9B,GAAAA,IAAI,CAAC,CAAA,CAAE,IAAI,SAAA,CAAA;IACxB,MAAMwZ,OAAAA,GAAU,IAAIC,OAAQ/Y,CAAAA,MAAAA,CAAAA,CAAAA;IAE5B,OAAQV,IAAI,CAAC,CAAE,CAAA;QACb,KAAK,KAAA,CAAA;QACL,KAAK,IAAA;AAAM,YAAA;AACT,gBAAA,IAAIya,YAAa5E,CAAAA,QAAQ,CAAC/T,IAAAA,CAAAA,IAASA,SAAS,UAC1C,EAAA,MAAMd,YAAa,CAAA,CAAC,UAAU,EAAEc,IAAK,CAAA,KAAK,CAAC,EAAEpB,MAAAA,CAAAA,CAAAA;AAE/C,gBAAA,MAAM4H,MAAS,GAAA,MAAMkR,OAAQ1N,CAAAA,GAAG,CAAC;AAC/BhK,oBAAAA,IAAAA;oBACA4X,MAAQ,EAAA;wBACNpF,UACEtU,EAAAA,IAAI,CAAC,CAAA,CAAE,KAAK,MAAA,GAAS,IAAOA,GAAAA,IAAI,CAAC,CAAA,CAAE,KAAK,OAAA,GAAU,KAAQ,GAAA,IAAA;AAC9D,qBAAA;AACF,iBAAA,CAAA,CAAA;AAEA,gBAAA,IAAIsI,MAAQ5H,EAAAA,MAAAA,CAAOQ,WAAW,CAAC,CAAC,KAAK,EAAEY,IAAAA,CAAK,GAAG,EAAEwG,MAAOkM,CAAAA,IAAI,CAAC,CAAC,CAAA,CAAA;AAE9D,gBAAA,MAAA;AACF,aAAA;QACA,KAAK,QAAA,CAAA;QACL,KAAK,IAAA,CAAA;QACL,KAAK,IAAA;AAAM,YAAA;AACT,gBAAA,MAAMlM,MAAS,GAAA,MAAMkR,OAAQ9E,CAAAA,MAAM,CAAC;AAAE5S,oBAAAA,IAAAA;AAAK,iBAAA,CAAA,CAAA;gBAE3C,IAAIwG,MAAAA,KAAW,MAAM5H,MAAOQ,CAAAA,WAAW,CAAC,CAAC,KAAK,EAAEY,IAAAA,CAAK,CAAC,CAAA,CAAA;qBACjD,IAAIwG,MAAAA,KAAW,OAClB,MAAMtH,YAAAA,CAAa,CAAC,SAAS,EAAEc,IAAK,CAAA,CAAC,EAAEpB,MAAAA,CAAAA,CAAAA;AAEzC,gBAAA,MAAA;AACF,aAAA;QACA,KAAK,MAAA,CAAA;QACL,KAAK,IAAA,CAAA;QACL,KAAK,IAAA;AAAM,YAAA;AACT,gBAAA,MAAM4H,MAAS,GAAA,MAAMkR,OAAQY,CAAAA,WAAW,CAAC;oBACvCC,KAAO,EAAA;AAAC,wBAAA,WAAA;AAAa,wBAAA,UAAA;AAAW,qBAAA;AAClC,iBAAA,CAAA,CAAA;gBAEA,IAAI/R,MAAAA,EAAQ5H,MAAOQ,CAAAA,WAAW,CAAC,CAAC,KAAK,EAAEoH,MAAAA,CAAOkM,IAAI,CAAC,CAAC,CAAA,CAAA;AAC/C,qBAAA,MAAMxT,aAAa,aAAeN,EAAAA,MAAAA,CAAAA,CAAAA;AAEvC,gBAAA,MAAA;AACF,aAAA;QACA,KAAK,MAAA,CAAA;QACL,KAAK,IAAA,CAAA;QACL,KAAK,IAAA;AAAM,YAAA;gBACT,MAAM4H,MAAAA,GAASkR,QAAQc,IAAI,EAAA,CAAA;AAE3B,gBAAA,IAAIhS,MAAQ,EAAA;oBACVA,MAAOkS,CAAAA,GAAG,CAACG,OAAO,CAAC,SAAA,CAAA,CAAA;AACnBja,oBAAAA,MAAAA,CAAOQ,WAAW,CAACoH,MAAAA,CAAOkS,GAAG,CAAC9W,IAAI,CAAC,MAAA,CAAA,CAAA,CAAA;iBAC9BhD,MAAAA,MAAAA,CAAOQ,WAAW,CAAC,UAAA,CAAA,CAAA;AAE1B,gBAAA,MAAA;AACF,aAAA;QACA,KAAK,MAAA,CAAA;QACL,KAAK,IAAA;AAAM,YAAA;;AAETR,gBAAAA,MAAAA,CAAOQ,WAAW,CAAC,QAAA,CAAA,CAAA;AACnB,gBAAA,MAAA;AACF,aAAA;QACA,KAAK,QAAA,CAAA;QACL,KAAK,KAAA,CAAA;QACL,KAAK,IAAA;AAAM,YAAA;AACT,gBAAA,MAAMlC,SAAS,IAAM0a,MAAAA,CAAOZ,SAAS,CAACpY,QAAQoX,UAAU,EAAA,CAAA,CAAA;AACxD,gBAAA,MAAA;AACF,aAAA;AACA,QAAA;AAAS,YAAA;AACP,gBAAA,MAAMxP,MAAS,GAAA,MAAMkR,OAAQQ,CAAAA,QAAQ,CAAC;oBAAElY,IAAM9B,EAAAA,IAAI,CAAC,CAAE,CAAA;AAAC,iBAAA,CAAA,CAAA;gBAEtD,IAAIsI,MAAAA,EAAQ5H,MAAOQ,CAAAA,WAAW,CAAC,CAAC,KAAK,EAAEoH,MAAAA,CAAOkM,IAAI,CAAC,CAAC,CAAA,CAAA;qBAC/C,MAAMxT,YAAAA,CAAa,CAAC,YAAY,EAAEhB,IAAI,CAAC,CAAA,CAAE,CAAC,CAAC,EAAEU,MAAAA,CAAAA,CAAAA;AACpD,aAAA;AACF,KAAA;AACF,CAAA;AAEO,eAAeka,WAAAA,CAAYxM,CAAC,EAAE1N,MAAM,EAAA;IACzC,IAAIgZ,MAAAA,CAAOZ,SAAS,CAACpY,MAAQ+W,CAAAA,CAAAA,UAAU,CAAC,UAAA,CAAA,EACtC,MAAMhZ,QAAAA,CAASO,QAAQ,CAAC,WAAa0B,EAAAA,MAAAA,CAAAA,CAAAA;AAClCA,SAAAA,MAAAA,CAAOQ,WAAW,CAAC,SAAA,CAAA,CAAA;AAC1B,CAAA;AAEO,eAAe2Z,WAAAA,CAAY7a,IAAI,EAAEU,MAAM,EAAA;AAC5C,IAAA,IAAIgZ,OAAOZ,SAAS,CAACpY,MAAQ+W,CAAAA,CAAAA,UAAU,CAAC,UAAa,CAAA,EAAA;QACnD,OAAQzX,IAAI,CAAC,CAAE,CAAA;YACb,KAAK,KAAA;AAAO,gBAAA;oBACV,MAAMvB,QAAAA,CAASO,QAAQ,CAAC,mBAAqB0B,EAAAA,MAAAA,CAAAA,CAAAA;AAC7C,oBAAA,MAAA;AACF,iBAAA;AACA,YAAA;AAAS,gBAAA;oBACP,MAAMjC,QAAAA,CAASO,QAAQ,CAAC,eAAiB0B,EAAAA,MAAAA,CAAAA,CAAAA;AAC3C,iBAAA;AACF,SAAA;KACKA,MAAAA,MAAAA,CAAOQ,WAAW,CAAC,SAAA,CAAA,CAAA;AAC5B;;AC/GAwY,MACGd,CAAAA,eAAe,GACfkC,IAAI,CAAC,IACJ1e,IAAKgC,CAAAA,KAAAA,CAAMkD,aAAa,EAAA,EAAI,CAACI,MAAAA,GAAWgY,OAAOhB,WAAW,CAAChX,MAE5DoZ,CAAAA,CAAAA,CAAAA,CAAAA,IAAI,CAAC,IAAMpB,OAAOtF,IAAI,EAAA,CAAA,CACtB0G,IAAI,CAAC,CAACC,MAAAA,GAAAA;;;IAGL,MAAM1Z,OAAAA,GAAU0Z,OAAO/d,IAAI,EAAA,CAAA;AAC3BZ,IAAAA,IAAAA,CAAKiF,OAAS,EAAA,CAACK,MAAWyS,GAAAA,KAAAA,CAAMC,IAAI,CAAC1S,MAAAA,CAAAA,CAAAA,CAAAA;IAErCjD,QAASgB,CAAAA,QAAQ,CAAC,GAAA,EAAK,KAAOib,EAAAA,UAAAA,CAAAA,CAAAA;AAE9B,IAAA,MAAM/c,MAAS,GAAA;AAAIod,QAAAA,GAAAA,MAAAA,CAAOpd,MAAM,EAAA;AAAG,KAAA,CAAA;AACnC,IAAA,IAAIA,MAAOqd,CAAAA,IAAI,CAAC,CAAC,EAAEC,QAAQ,EAAE,GAAKA,QAChCxc,CAAAA,EAAAA,QAAAA,CAASgB,QAAQ,CAAC,KAAK,MAAQmb,EAAAA,WAAAA,CAAAA,CAAAA;AACjC,IAAA,IAAIjd,MAAOqd,CAAAA,IAAI,CAAC,CAAC,EAAEE,QAAQ,EAAE,GAAKA,QAChCzc,CAAAA,EAAAA,QAAAA,CAASgB,QAAQ,CAAC,KAAK,MAAQob,EAAAA,WAAAA,CAAAA,CAAAA;AACnC,CACCla,CAAAA,CAAAA,KAAK,CAAC5E,aAAAA,CAAcC,KAAK,CAAA","x_google_ignoreList":[4,5,6,7,8,9]}